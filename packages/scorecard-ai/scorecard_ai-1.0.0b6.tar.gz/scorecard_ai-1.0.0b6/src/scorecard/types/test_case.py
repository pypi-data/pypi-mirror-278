# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ..core.datetime_utils import serialize_datetime
from ..core.pydantic_utilities import deep_union_pydantic_dicts, pydantic_v1
from ..core.unchecked_base_model import UncheckedBaseModel
from .test_case_custom_inputs_value import TestCaseCustomInputsValue
from .test_case_custom_labels_value import TestCaseCustomLabelsValue


class TestCase(UncheckedBaseModel):
    id: typing.Optional[int] = pydantic_v1.Field(default=None)
    """
    The ID of the testcase.
    """

    created_at: typing.Optional[dt.datetime] = pydantic_v1.Field(default=None)
    """
    The creation date and time of the testcase.
    """

    testset_id: int = pydantic_v1.Field()
    """
    The ID of the testset the testcase belongs to.
    """

    user_query: str = pydantic_v1.Field()
    """
    The user query for the testcase.
    """

    context: typing.Optional[str] = pydantic_v1.Field(default=None)
    """
    The context for the testcase.
    """

    ideal: typing.Optional[str] = pydantic_v1.Field(default=None)
    """
    The ideal response for the testcase.
    """

    custom_inputs: typing.Optional[typing.Dict[str, typing.Optional[TestCaseCustomInputsValue]]] = None
    custom_labels: typing.Optional[typing.Dict[str, typing.Optional[TestCaseCustomLabelsValue]]] = None

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults_exclude_unset: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        kwargs_with_defaults_exclude_none: typing.Any = {"by_alias": True, "exclude_none": True, **kwargs}

        return deep_union_pydantic_dicts(
            super().dict(**kwargs_with_defaults_exclude_unset), super().dict(**kwargs_with_defaults_exclude_none)
        )

    class Config:
        frozen = True
        smart_union = True
        extra = pydantic_v1.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
