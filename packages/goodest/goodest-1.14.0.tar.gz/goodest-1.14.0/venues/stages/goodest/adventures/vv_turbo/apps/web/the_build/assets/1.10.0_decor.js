import{s as k}from"./1.10.0_decor14.js";import{_ as g,s as f,r as o,o as y,f as x,w as u,a as t,n as w,g as s,h as A,B,Y as z,j as C,p as N,k as S}from"./1.10.0_index.js";import{g as E}from"./1.10.0_decor16.js";import{s as T}from"./1.10.0_as_string.js";const $={components:{s_button:f},props:["address"],data(){return{show_copied_display:!1,show_copied_opacity:!1,show_copied_display:null,show_copied_opacity:null}},methods:{after_copied(){const e=this;clearTimeout(this.show_copied_display),clearTimeout(this.show_copied_opacity),e.show_copied_display=!1,e.show_copied_opacity=!1,e.show_copied_display=!0,this.show_copied_display=setTimeout(()=>{e.show_copied_opacity=!0},300),this.show_copied_opacity=setTimeout(()=>{e.show_copied_opacity=!1},1e3),this.show_copied_display=setTimeout(()=>{e.show_copied_display=!1},2e3)},save_address(){const e=this;console.log("save address");const c=this.address;navigator.clipboard&&navigator.clipboard.writeText(c).then(()=>{e.after_copied()}).catch(_=>{console.error("Failed to copy text: ",_)})}}},q={style:{position:"relative",width:"100px"}};function Q(e,c,_,v,r,b){const n=o("s_button"),l=o("lounge");return y(),x(l,null,{default:u(({palette:i,terrain:m,cart:p})=>[t("div",q,[t("p",{style:w({display:r.show_copied_display?"block":"none",opacity:r.show_copied_opacity?1:0,position:"absolute",top:"-20px",left:"10px",padding:"5px 10px",borderRadius:"8px",transition:"opacity 1s",background:i[1],color:i[2]})}," copied ",4),s(n,{ref:"button",pressable:!0,boundaries:"3px 12px 3px",clicked:this.save_address,styles:{inside:{}}},{default:u(()=>[A("copy")]),_:1},8,["clicked"])])]),_:1})}const h=g($,[["render",Q]]),V={components:{s_outer_link:B,s_input:k,s_button:f,s_line:z,g_table:E},data(){return{correspondance:""}},methods:{sort_as_strings:T,send(){},rows(){return[{1:"Ethereum",2:"0x9D5D9559A43080d3F478d7e76dB057b57992b46C",3:{component:h,props:{address:"0x9D5D9559A43080d3F478d7e76dB057b57992b46C"}}},{1:"Polkadot",2:"1wr7RE273GzJDXEQqF28MMWBEsLQSrNvpQCL6B33emuSgNQ",3:{component:h,props:{address:"1wr7RE273GzJDXEQqF28MMWBEsLQSrNvpQCL6B33emuSgNQ"}}},{1:"Cardano",2:"addr1qy0ula9c8tf5rpu9m3nhnvx8md7vd2eg6snusj8fzycl9uxlaftgt2lccp8crtlzklrkprfp2g3ft77s32gdh6jpgpyqnqhr20",3:{component:h,props:{address:"addr1qy0ula9c8tf5rpu9m3nhnvx8md7vd2eg6snusj8fzycl9uxlaftgt2lccp8crtlzklrkprfp2g3ft77s32gdh6jpgpyqnqhr20"}}}]}},mounted(){}};const D=V,d=e=>(N("data-v-a22ed7f5"),e=e(),S(),e),j={ref:"crate-script"},F=d(()=>t("div",{style:{maxWidth:"500px",margin:"0 auto",textAlign:"center",fontSize:"1em"}},[t("h1",null,"Thanks for visiting!"),t("p",null,"Correspondance can be sent to any of these addresses.")],-1)),M={ref:"crate",style:{margin:"0 auto",textAlign:"left"}},W=d(()=>t("h2",{style:{textAlign:"center"}},"Addresses",-1)),I=d(()=>t("div",{style:{maxWidth:"500px",margin:"0 auto",textAlign:"center",fontSize:"1em"}},[t("h1",null,"Affiliations"),t("p",null,"This site is an Amazon affiliate.")],-1)),L={style:{maxWidth:"500px",margin:"0 auto",textAlign:"center",fontSize:"1em"}},G=d(()=>t("h1",null,"Source",-1));function R(e,c,_,v,r,b){const n=o("s_line"),l=o("g_table"),i=o("s_outer_link"),m=o("lounge");return y(),x(m,null,{default:u(({palette:p,terrain:a,cart:J})=>[t("main",{style:w({color:p[2],padding:a.width<=a.mobile_nav_width?".1in":".5in",transform:a.width<=a.mobile_nav_width?"scale(.9)":""})},[t("div",j,null,512),F,s(n,{style:{margin:"20px 0"}}),t("div",M,[W,s(l,{style:{margin:"0 auto"},theme:{palette:{text:p[2]}},columns:[{place:"1",name:"currency",sorting:e.sort_as_strings},{place:"2",name:"address",sorting:e.sort_as_strings}],rows:e.rows()},null,8,["theme","columns","rows"])],512),s(n,{style:{margin:"20px 0"}}),I,s(n,{style:{margin:"20px 0"}}),t("div",L,[G,s(i,{address:"https://gitlab.com/status600/treasures/goodest.1"})]),C("",!0)],4)]),_:1})}const O=g(D,[["render",R],["__scopeId","data-v-a22ed7f5"]]);export{O as default};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
