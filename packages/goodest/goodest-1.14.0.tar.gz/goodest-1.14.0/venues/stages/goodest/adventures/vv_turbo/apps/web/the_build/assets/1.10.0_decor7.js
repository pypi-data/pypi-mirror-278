import{z as p,l as b,s as k,G as x,e as S,_ as $,o as d,f as z,w as c,r as o,a as n,n as a,g as s,c as _,j as B,T as N,i as I,t as h,F as C,p as D,k as E}from"./1.10.0_index.js";import{c as T,e as V}from"./1.10.0_shack.js";import{c as F}from"./1.10.0_scenery2.js";import{s as Y}from"./1.10.0_decor13.js";import"./1.10.0_string.js";import"./1.10.0_veranda.js";import"./1.10.0_decor16.js";import"./1.10.0_decor15.js";import"./1.10.0_decor14.js";async function j({emblem:e}){var i={};return p.warehouse().goal_picked&&(i=p.warehouse().goal.emblem),await b({path:"guests",envelope:{label:"retrieve meal",freight:{filters:{emblem:e},goal:i}}})}const G={components:{cautionary_ingredients:T,change_indicator:F,s_button:k,router_link_scenery:x,essential_nutrients:V,s_food_or_supp_summary:Y},data(){return{ingredients:[],recipe:{},show:!1}},methods:{_get:S,async retrieve_meal_ask(){var{emblem:e}=this.$route.params;const{status:i,parsed:m,proceeds:r}=await j({emblem:e});if(i!==200){console.error("The meal was not found."),this.found=!1,this.show=!0;return}console.log({proceeds:r}),this.recipe=r.freight.nature,this.ingredients=r.freight.nature.ingredients,this.found=!0,this.show=!0}},async mounted(){await this.retrieve_meal_ask(),this.show=!0},beforeUnmount(){}};const L=G,R=e=>(D("data-v-383e08fd"),e=e(),E(),e),U={style:{display:"flex",flexDirection:"column",height:"100%"}},q=R(()=>n("div",{style:{height:"10px",width:"10px"}},null,-1)),A={style:{display:"flex",marginBottom:"8px"}},H={food_or_supp_summary_h1:"",style:{margin:0,padding:0,fontSize:"1.0em"}};function J(e,i,m,r,K,M){const u=o("change_indicator"),g=o("cautionary_ingredients"),f=o("essential_nutrients"),y=o("router_link_scenery"),w=o("s_panel"),v=o("lounge");return d(),z(v,null,{default:c(({palette:O,terrain:t,cart:P})=>[n("div",U,[n("div",{style:a({display:"flex",flexDirection:t.width<900?"column":"row",height:"100%",position:"relative"})},[n("div",{"cart-content":"",style:a({position:"relative",top:0,left:0,height:"100%",boxSizing:"border-box",width:t.width<900?"100%":"60%",overflowY:"scroll"})},[s(u,{show:e.show===!1,style:{position:"absolute",height:"100vh",top:0,left:0,width:"100vw"}},null,8,["show"]),s(N,{name:"fade"},{default:c(()=>[e.show?(d(),_("div",{key:0,style:a({position:"absolute",top:0,left:0,height:"100%",boxSizing:"border-box",width:"100%",paddingRight:t.width<900?"0%":"1%"})},[s(g,{land:e._get(e.recipe,["cautionary ingredients"],{})},null,8,["land"]),q,s(f,{EN:e._get(e.recipe,["essential nutrients"],{})},null,8,["EN"])],4)):B("",!0)]),_:2},1024)],4),s(w,{style:a({height:"100%",width:t.width<900?"100%":"40%",overflowY:"scroll"})},{default:c(()=>[(d(!0),_(C,null,I(e.ingredients,(l,Q)=>(d(),_("div",A,[s(y,{name:e._get(l,["nature","kind"],""),params:{emblem:l.emblem},has_slot:!0,style:a({display:"inline-block",width:t.width<t.mobile_nav_width?"100%":"calc(100% - 5%)"}),styles:{inside:{}}},{default:c(()=>[n("h1",H,h(e._get(l,["nature","identity","name"],"")),1)]),_:2},1032,["name","params","style"]),n("div",null,h(l.grams)+" grams ",1)]))),256))]),_:2},1032,["style"])],4)])]),_:1})}const ae=$(L,[["render",J],["__scopeId","data-v-383e08fd"]]);export{ae as default};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
