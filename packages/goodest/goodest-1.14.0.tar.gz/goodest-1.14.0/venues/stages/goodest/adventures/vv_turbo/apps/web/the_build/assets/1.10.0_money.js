import{a as $,f as x}from"./1.10.0_string2.js";import{_ as f,r as a,o as e,f as g,w as u,a as _,n as w,c as s,t as b,A as C,B as v,s as A,F as S,i as B,g as d,j,e as k}from"./1.10.0_index.js";const z={components:{},props:{new_tab:{default:!1,type:Boolean},text:{default:"",type:String},address:{default:"",type:String}},mounted(){console.log(this.$slots._)}},D=["target","href"],N={key:0},V={key:1};function E(t,h,n,m,p,o){const i=a("lounge");return e(),g(i,null,{default:u(({palette:r,style:l})=>[_("a",{target:n.new_tab?"_blank":"",class:"outer-link",href:n.address,style:w(Object.assign({},{color:r.button.color,transition:["color "+r.change_duration].join(", "),textDecoration:"underline"},l))},[this.$slots._!==1&&n.text.length===0?(e(),s("span",N,b(n.address),1)):this.$slots._!==1&&n.text.length>=1?(e(),s("span",V,b(n.text),1)):C(t.$slots,"default",{key:2},void 0,!0)],12,D)]),_:3})}const F=f(z,[["render",E],["__scopeId","data-v-4fce88a2"]]),G={components:{s_outer_button_link:F,s_outer_link:v,s_button:A},props:{affiliates:Array},methods:{furnish_string:$}},I=_("h2",{style:{textAlign:"center"}},"affiliate sources",-1),L={key:0,style:{textAlign:"center",height:"100%",paddingTop:"5px",boxSizing:"border-box"}};function O(t,h,n,m,p,o){const i=a("s_outer_button_link"),r=a("lounge");return e(),g(r,null,{default:u(({palette:l})=>[I,(e(!0),s(S,null,B(n.affiliates,c=>(e(),s("div",null,[d(i,{new_tab:!0,address:o.furnish_string(c,"link",""),text:o.furnish_string(c,"name",""),style:{}},null,8,["address","text"])]))),256)),n.affiliates.length===0?(e(),s("div",L," not found ")):j("",!0)]),_:1})}const W=f(G,[["render",O]]);function X(){try{let t;if(arguments.length===3?t=k(arguments[0],arguments[1],arguments[2]):arguments.length===2?t=k(arguments[0],arguments[1],""):arguments.length===1&&(t=arguments[0]),Array.isArray(t)===!0)return t;throw console.log(arguments),new Error("An array could not be furnished from the preceeding arguments.")}catch(t){console.log("exception:",t)}return[]}const T={components:{s_outer_link:v,s_button:A},props:["goodness"],methods:{furnish_array:x,furnish_string:$},computed:{goodness_certs(){return x(this,"goodness")}}},q={style:{display:"flex",justifyContent:"space-between",flexDirection:"column"}},H=_("h3",{style:{margin:0,fontSize:".8em"}},"Goodness Certifications",-1),J={key:0},K=_("p",null,"Certification info for this product was not found.",-1),M=[K],P={key:1};function Q(t,h,n,m,p,o){const i=a("s_outer_link"),r=a("s_button"),l=a("lounge");return e(),g(l,null,{default:u(({palette:c})=>[_("div",q,[H,o.goodness_certs.length===0?(e(),s("div",J,M)):(e(),s("div",P,[(e(!0),s(S,null,B(o.goodness_certs,y=>(e(),s("div",null,[d(r,{ref_for:!0,ref:"button",pressable:!0,boundaries:"3px 12px 3px",clicked:()=>{},styles:{inside:{}}},{default:u(()=>[d(i,{new_tab:!0,address:o.furnish_string(y,["links",0]),style:w({color:c[1]}),text:o.furnish_string(y,["show","text"],"")},null,8,["address","style","text"])]),_:2},1536)]))),256))]))])]),_:1})}const Y=f(T,[["render",Q]]);export{W as a,X as f,Y as g};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS4xMC4wX21vbmV5LmpzIiwic291cmNlcyI6WyIuLi8uLi9zcmMvc2NlbmVyeS9saW5rL291dGVyX2J1dHRvbi9kZWNvci52dWUiLCIuLi8uLi9zcmMvc2NlbmVyeS90cmVhc3VyZS9hZmZpbGlhdGVzL2RlY29yLnZ1ZSIsIi4uLy4uL3NyYy9ncmlkL2Z1cm5pc2gvYXJyYXkuanMiLCIuLi8uLi9zcmMvc2NlbmVyeS90cmVhc3VyZS9nb29kbmVzc19jZXJ0aWZpY2F0aW9ucy9tb25leS52dWUiXSwic291cmNlc0NvbnRlbnQiOlsiXG5cblxuPHNjcmlwdD5cblxuLypcblx0aW1wb3J0IHNfb3V0ZXJfYnV0dG9uX2xpbmsgZnJvbSAnQC9zY2VuZXJ5L2xpbmsvb3V0ZXJfYnV0dG9uL2RlY29yLnZ1ZSdcblx0PHNfb3V0ZXJfYnV0dG9uX2xpbmsgYWRkcmVzcz1cIi9cIiAvPlxuKi9cblxuLypcblx0aHR0cHM6Ly93d3cudzMub3JnL01hcmtVcC9odG1sLXNwZWMvaHRtbC1zcGVjXzcuaHRtbFxuKi9cblxuZXhwb3J0IGRlZmF1bHQge1xuXHRjb21wb25lbnRzOiB7fSxcblxuXHRwcm9wczoge1xuXHRcdG5ld190YWI6IHtcblx0XHRcdGRlZmF1bHQ6IGZhbHNlLFxuXHRcdFx0dHlwZTogQm9vbGVhblxuXHRcdH0sXG5cdFx0dGV4dDoge1xuXHRcdFx0ZGVmYXVsdDogJycsXG5cdFx0XHR0eXBlOiBTdHJpbmdcblx0XHR9LFxuXHRcdGFkZHJlc3M6IHtcblx0XHRcdGRlZmF1bHQ6ICcnLFxuXHRcdFx0dHlwZTogU3RyaW5nXG5cdFx0fVxuXHR9LFxuXHRcblx0bW91bnRlZCAoKSB7XG5cdFx0Y29uc29sZS5sb2cgKHRoaXMuJHNsb3RzLl8pXG5cdH1cbn1cblxuPC9zY3JpcHQ+XG5cbjxzdHlsZSBzY29wZWQ+XG4ub3V0ZXItbGluazpob3ZlciB7XG5cdGJhY2tncm91bmQ6IG5vbmU7XG5cdG9wYWNpdHk6IC41O1xufVxuXG48L3N0eWxlPlxuXG48dGVtcGxhdGU+XG5cdDxsb3VuZ2UgI2RlZmF1bHQ9XCJ7IHBhbGV0dGUsIHN0eWxlIH1cIj5cdFxuXHRcdDxhXG5cdFx0XHQ6dGFyZ2V0PVwibmV3X3RhYiA/ICdfYmxhbmsnIDogJydcIlxuXHRcdFx0Y2xhc3M9XCJvdXRlci1saW5rXCJcblx0XHRcdDpocmVmPVwiYWRkcmVzc1wiXG5cdFx0XHQ6c3R5bGU9XCJPYmplY3QuYXNzaWduICh7fSwge1xuXHRcdFx0XHRjb2xvcjogcGFsZXR0ZS5idXR0b24uY29sb3IsXG5cdFx0XHRcdHRyYW5zaXRpb246IFtcblx0XHRcdFx0XHQnY29sb3IgJyArIHBhbGV0dGUuY2hhbmdlX2R1cmF0aW9uLFxuXHRcdFx0XHRdLmpvaW4gKCcsICcpLFxuXHRcdFx0XHR0ZXh0RGVjb3JhdGlvbjogJ3VuZGVybGluZSdcblx0XHRcdH0sIHN0eWxlKVwiXG5cdFx0PlxuXHRcdFx0PHNwYW4gdi1pZj1cInRoaXMuJHNsb3RzLl8gIT09IDEgJiYgdGV4dC5sZW5ndGggPT09IDBcIj5cblx0XHRcdFx0e3sgYWRkcmVzcyB9fVxuXHRcdFx0PC9zcGFuPlxuXHRcdFx0PHNwYW4gdi1lbHNlLWlmPVwidGhpcy4kc2xvdHMuXyAhPT0gMSAmJiB0ZXh0Lmxlbmd0aCA+PSAxXCI+XG5cdFx0XHRcdHt7IHRleHQgfX1cblx0XHRcdDwvc3Bhbj5cblx0XHRcdDxzbG90IHYtZWxzZSAvPlxuXHRcdDwvYT5cblx0PC9sb3VuZ2U+XG48L3RlbXBsYXRlPiIsIlxuXG48c2NyaXB0PlxuXG5pbXBvcnQgeyBmdXJuaXNoX3N0cmluZyB9IGZyb20gJ3Byb2NlZHVyZXMvZnVybmlzaC9zdHJpbmcnXG5pbXBvcnQgc19vdXRlcl9saW5rIGZyb20gJ0Avc2NlbmVyeS9saW5rL291dGVyL2RlY29yLnZ1ZSdcbmltcG9ydCBzX2J1dHRvbiBmcm9tICdAL3NjZW5lcnkvYnV0dG9uL2RlY29yLnZ1ZSdcbmltcG9ydCBzX291dGVyX2J1dHRvbl9saW5rIGZyb20gJ0Avc2NlbmVyeS9saW5rL291dGVyX2J1dHRvbi9kZWNvci52dWUnXG5cdFxuXHRcdFxuZXhwb3J0IGRlZmF1bHQge1xuXHRjb21wb25lbnRzOiB7IFxuXHRcdHNfb3V0ZXJfYnV0dG9uX2xpbmssXG5cdFx0c19vdXRlcl9saW5rLCBcblx0XHRzX2J1dHRvbiBcblx0fSxcblx0cHJvcHM6IHtcblx0XHRhZmZpbGlhdGVzOiBBcnJheVxuXHR9LFxuXHRtZXRob2RzOiB7XG5cdFx0ZnVybmlzaF9zdHJpbmdcblx0fVxufVxuXG5cbjwvc2NyaXB0PlxuXG48dGVtcGxhdGU+XG5cdDxsb3VuZ2UgI2RlZmF1bHQ9XCJ7IHBhbGV0dGUgfVwiPlxuXHRcdDxoMlxuXHRcdFx0OnN0eWxlPVwie1xuXHRcdFx0XHR0ZXh0QWxpZ246ICdjZW50ZXInLFxuXHRcdFx0fVwiXG5cdFx0PmFmZmlsaWF0ZSBzb3VyY2VzPC9oMj5cblx0XHRcblx0XHQ8ZGl2IHYtZm9yPVwiYWZmaWxpYXRlIGluIGFmZmlsaWF0ZXNcIj5cdFx0XHRcblx0XHRcdDxzX291dGVyX2J1dHRvbl9saW5rIFxuXHRcdFx0XHQ6bmV3X3RhYj1cInRydWVcIlxuXHRcdFx0XHQ6YWRkcmVzcz1cImZ1cm5pc2hfc3RyaW5nIChhZmZpbGlhdGUsICdsaW5rJywgJycpXCIgXG5cdFx0XHRcdDp0ZXh0PVwiZnVybmlzaF9zdHJpbmcgKGFmZmlsaWF0ZSwgJ25hbWUnLCAnJylcIlxuXHRcdFx0XHQ6c3R5bGU9XCJ7fVwiIFxuXHRcdFx0Lz5cdFxuXHRcdDwvZGl2PlxuXHRcdFxuXHRcdDxkaXYgdi1pZj1cImFmZmlsaWF0ZXMubGVuZ3RoID09PSAwXCJcblx0XHRcdDpzdHlsZT1cIntcblx0XHRcdFx0dGV4dEFsaWduOiAnY2VudGVyJyxcblx0XHRcdFx0aGVpZ2h0OiAnMTAwJScsXG5cdFx0XHRcdHBhZGRpbmdUb3A6ICc1cHgnLFxuXHRcdFx0XHRib3hTaXppbmc6ICdib3JkZXItYm94J1xuXHRcdFx0fVwiXG5cdFx0PlxuXHRcdFx0bm90IGZvdW5kXG5cdFx0PC9kaXY+XG5cdDwvbG91bmdlPlxuPC90ZW1wbGF0ZT4iLCJcblxuLypcblx0Ly8gdGhpcyBhbHdheXMgcmV0dXJucyBhIHN0cmluZ1xuXG5cdGltcG9ydCB7IGZ1cm5pc2hfYXJyYXkgfSBmcm9tICdAL2dyaWQvZnVybmlzaC9hcnJheSdcblx0ZnVybmlzaF9hcnJheSAoeyAncyc6ICcxJyB9LCBbICdzJyBdLCAnJylcblx0XG5cdGZ1cm5pc2hfYXJyYXkgKCcnKVxuKi9cblxuXG5pbXBvcnQgX2dldCBmcm9tICdsb2Rhc2gvZ2V0J1xuXG5leHBvcnQgZnVuY3Rpb24gZnVybmlzaF9hcnJheSAoKSB7XG5cdHRyeSB7XG5cdFx0bGV0IGNhbmRpZGF0ZSA9IHVuZGVmaW5lZDtcblx0XHRpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMykge1xuXHRcdFx0Y2FuZGlkYXRlID0gX2dldCAoXG5cdFx0XHRcdGFyZ3VtZW50cyBbMF0sIFxuXHRcdFx0XHRhcmd1bWVudHMgWzFdLCBcblx0XHRcdFx0YXJndW1lbnRzIFsyXVxuXHRcdFx0KVxuXHRcdH1cblx0XHRlbHNlIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAyKSB7XG5cdFx0XHRjYW5kaWRhdGUgPSBfZ2V0IChcblx0XHRcdFx0YXJndW1lbnRzIFswXSwgXG5cdFx0XHRcdGFyZ3VtZW50cyBbMV0sIFxuXHRcdFx0XHQnJ1xuXHRcdFx0KVxuXHRcdH1cblx0XHRlbHNlIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAxKSB7XG5cdFx0XHRjYW5kaWRhdGUgPSBhcmd1bWVudHMgWzBdXG5cdFx0fVxuXHRcdFxuXHRcdGlmIChBcnJheS5pc0FycmF5IChjYW5kaWRhdGUpID09PSB0cnVlKSB7XG5cdFx0XHRyZXR1cm4gY2FuZGlkYXRlO1xuXHRcdH1cblx0XHRcblx0XHRjb25zb2xlLmxvZyAoYXJndW1lbnRzKTtcblx0XHR0aHJvdyBuZXcgRXJyb3IgKGBBbiBhcnJheSBjb3VsZCBub3QgYmUgZnVybmlzaGVkIGZyb20gdGhlIHByZWNlZWRpbmcgYXJndW1lbnRzLmApXHRcdFxuXHR9XG5cdGNhdGNoIChleGNlcHRpb24pIHtcblx0XHRjb25zb2xlLmxvZyAoXCJleGNlcHRpb246XCIsIGV4Y2VwdGlvbilcblx0fVxuXHRcblx0cmV0dXJuIFtdXG59IiwiXG48c2NyaXB0PlxuXG4vKlxuXHRpbXBvcnQgZ29vZG5lc3NfY2VydGlmaWNhdGlvbnMgZnJvbSAnQC9zY2VuZXJ5L3RyZWFzdXJlL2dvb2RuZXNzX2NlcnRpZmljYXRpb25zL21vbmV5LnZ1ZSdcblx0PGdvb2RuZXNzX2NlcnRpZmljYXRpb25zIFxuXHRcdDpnb29kbmVzcz1cIlwiXG5cdC8+XG4qL1xuXG5pbXBvcnQgeyBmdXJuaXNoX2FycmF5IH0gZnJvbSAncHJvY2VkdXJlcy9mdXJuaXNoL2FycmF5J1xuaW1wb3J0IHsgZnVybmlzaF9zdHJpbmcgfSBmcm9tICdwcm9jZWR1cmVzL2Z1cm5pc2gvc3RyaW5nJ1xuXG5pbXBvcnQgc19vdXRlcl9saW5rIGZyb20gJ0Avc2NlbmVyeS9saW5rL291dGVyL2RlY29yLnZ1ZSdcbmltcG9ydCBzX2J1dHRvbiBmcm9tICdAL3NjZW5lcnkvYnV0dG9uL2RlY29yLnZ1ZSdcblxuZXhwb3J0IGRlZmF1bHQge1xuXHRjb21wb25lbnRzOiB7XG5cdFx0c19vdXRlcl9saW5rLFxuXHRcdHNfYnV0dG9uXG5cdH0sXG5cdHByb3BzOiBbIFwiZ29vZG5lc3NcIiBdLFxuXHRtZXRob2RzOiB7XG5cdFx0ZnVybmlzaF9hcnJheSxcblx0XHRmdXJuaXNoX3N0cmluZ1xuXHR9LFxuXHRjb21wdXRlZDoge1xuXHRcdGdvb2RuZXNzX2NlcnRzICgpIHtcblx0XHRcdHJldHVybiBmdXJuaXNoX2FycmF5ICh0aGlzLCAnZ29vZG5lc3MnKVxuXHRcdH1cblx0fVxufVxuXG48L3NjcmlwdD5cblxuPHRlbXBsYXRlPlxuXHQ8bG91bmdlICNkZWZhdWx0PVwieyBwYWxldHRlIH1cIj5cblx0XHQ8ZGl2XG5cdFx0XHQ6c3R5bGU9XCJ7XG5cdFx0XHRcdGRpc3BsYXk6ICdmbGV4Jyxcblx0XHRcdFx0anVzdGlmeUNvbnRlbnQ6ICdzcGFjZS1iZXR3ZWVuJyxcblx0XHRcdFx0ZmxleERpcmVjdGlvbjogJ2NvbHVtbidcblx0XHRcdH1cIlxuXHRcdD5cblx0XHRcdDxoMyA6c3R5bGU9XCJ7IG1hcmdpbjogMCwgZm9udFNpemU6ICcuOGVtJyB9XCI+R29vZG5lc3MgQ2VydGlmaWNhdGlvbnM8L2gzPlxuXHRcdFx0XG5cdFx0XHQ8ZGl2IHYtaWY9XCJnb29kbmVzc19jZXJ0cy5sZW5ndGggPT09IDBcIj5cblx0XHRcdFx0PHA+Q2VydGlmaWNhdGlvbiBpbmZvIGZvciB0aGlzIHByb2R1Y3Qgd2FzIG5vdCBmb3VuZC48L3A+XG5cdFx0XHQ8L2Rpdj5cblx0XHRcdDxkaXYgdi1lbHNlPlxuXHRcdFx0XHQ8ZGl2IHYtZm9yPVwiY2VydCBpbiBnb29kbmVzc19jZXJ0c1wiPlxuXHRcdFx0XHRcdDxzX2J1dHRvblxuXHRcdFx0XHRcdFx0cmVmPVwiYnV0dG9uXCJcblx0XHRcdFx0XHRcdDpwcmVzc2FibGU9XCJ0cnVlXCJcblx0XHRcdFx0XHRcdGJvdW5kYXJpZXM9XCIzcHggMTJweCAzcHhcIlxuXHRcdFx0XHRcdFx0OmNsaWNrZWQ9XCIoKSA9PiB7fVwiXG5cdFx0XHRcdFx0XHQ6c3R5bGVzPVwie1xuXHRcdFx0XHRcdFx0XHRpbnNpZGU6IHtcblx0XHRcdFx0XHRcdFx0XHRcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVwiXG5cdFx0XHRcdFx0PlxuXHRcdFx0XHRcdFx0PHNfb3V0ZXJfbGluayBcblx0XHRcdFx0XHRcdFx0Om5ld190YWI9XCJ0cnVlXCJcblx0XHRcdFx0XHRcdFx0OmFkZHJlc3M9XCJmdXJuaXNoX3N0cmluZyAoY2VydCwgWyAnbGlua3MnLCAwIF0pXCIgXG5cdFx0XHRcdFx0XHRcdDpzdHlsZT1cIntcblx0XHRcdFx0XHRcdFx0XHRjb2xvcjogcGFsZXR0ZSBbMV1cblx0XHRcdFx0XHRcdFx0fVwiXG5cdFx0XHRcdFx0XHRcdDp0ZXh0PVwiZnVybmlzaF9zdHJpbmcgKGNlcnQsIFsnc2hvdycsICd0ZXh0J10sICcnKVwiXG5cdFx0XHRcdFx0XHQvPlxuXHRcdFx0XHRcdDwvc19idXR0b24+XG5cdFx0XHRcdDwvZGl2Plx0XHRcdFx0XG5cdFx0XHQ8L2Rpdj5cblx0XHQ8L2Rpdj5cblx0PC9sb3VuZ2U+XG48L3RlbXBsYXRlPiJdLCJuYW1lcyI6WyJfc2ZjX21haW4iLCJfaG9pc3RlZF8xIiwiX2NyZWF0ZUJsb2NrIiwiX2NvbXBvbmVudF9sb3VuZ2UiLCJfd2l0aEN0eCIsInBhbGV0dGUiLCJzdHlsZSIsIl9jcmVhdGVFbGVtZW50Vk5vZGUiLCIkcHJvcHMiLCJfbm9ybWFsaXplU3R5bGUiLCJfY3JlYXRlRWxlbWVudEJsb2NrIiwiX2hvaXN0ZWRfMiIsIl9ob2lzdGVkXzMiLCJfcmVuZGVyU2xvdCIsIl9jdHgiLCJzX291dGVyX2J1dHRvbl9saW5rIiwic19vdXRlcl9saW5rIiwic19idXR0b24iLCJmdXJuaXNoX3N0cmluZyIsIl9vcGVuQmxvY2siLCJfRnJhZ21lbnQiLCJfcmVuZGVyTGlzdCIsImFmZmlsaWF0ZSIsIl9jcmVhdGVWTm9kZSIsIl9jb21wb25lbnRfc19vdXRlcl9idXR0b25fbGluayIsIiRvcHRpb25zIiwiX2NyZWF0ZUNvbW1lbnRWTm9kZSIsImZ1cm5pc2hfYXJyYXkiLCJjYW5kaWRhdGUiLCJfZ2V0IiwiZXhjZXB0aW9uIiwiX2hvaXN0ZWRfNCIsIl9ob2lzdGVkXzUiLCJfaG9pc3RlZF82IiwiY2VydCIsIl9jb21wb25lbnRfc19idXR0b24iLCJfY29tcG9uZW50X3Nfb3V0ZXJfbGluayJdLCJtYXBwaW5ncyI6ImdNQWNBLE1BQUtBLEVBQVUsQ0FDZCxXQUFZLENBQUUsRUFFZCxNQUFPLENBQ04sUUFBUyxDQUNSLFFBQVMsR0FDVCxLQUFNLE9BQ04sRUFDRCxLQUFNLENBQ0wsUUFBUyxHQUNULEtBQU0sTUFDTixFQUNELFFBQVMsQ0FDUixRQUFTLEdBQ1QsS0FBTSxNQUNQLENBQ0EsRUFFRCxTQUFXLENBQ1YsUUFBUSxJQUFLLEtBQUssT0FBTyxDQUFDLENBQzNCLENBQ0QsRUFuQ0FDLEVBQUEs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
