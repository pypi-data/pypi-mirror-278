import{l as P,b as I,d as N,e as E,_ as C,s as G,r as i,o as c,f as T,w as n,g as s,a as t,h as _,T as $,c as f,F as j,i as V,n as g,j as R,t as k,p as Y,k as L}from"./1.10.0_index.js";import{f as z,r as B}from"./1.10.0_string.js";import{i as D,s as U}from"./1.10.0_decor13.js";import{s as q}from"./1.10.0_decor14.js";import{c as F}from"./1.10.0_scenery2.js";import"./1.10.0_decor15.js";const K=async({freight:e})=>(console.log("starting search goods",e),await P({path:"guests",envelope:{label:"search goods",freight:e}}));async function M(){await I({field_title:"scan filter",field:N(()=>import("./1.10.0_field4.js"),["assets/1.10.0_field4.js","assets/1.10.0_index.js","assets/1.10.0_index.css"])})}async function H(){await I({field_title:"scan sort",field:N(()=>import("./1.10.0_field5.js"),["assets/1.10.0_field5.js","assets/1.10.0_index.js","assets/1.10.0_index.css"])})}const W={_get:E,furnish_string:z,round_quantity:B,is_kind:D,async input_changed({search_string:e}){console.log("the search string changed:",e),this.search_string=e,this.previous_search_string!==this.search_string?(this.next=!1,this.prev=!1):(this.next=!1,this.prev=!1,this.amount_after>=1&&(this.next=!0),this.amount_before>=1&&(this.prev=!0))},async search_next(){console.log("next",this.limits),this.before=!1,this.after=this.limits.end,this.search()},async search_prev(){this.before=this.limits.start,this.after=!1,console.log("prev"),this.search()},async search(){this.searching=!0,this.next=!1;let e={string:this.search_string,include:{food:!0,supp:!0,meals:!0},limit:25};this.before?e.before=this.before:this.after&&(e.after=this.after),this.previous_search_string=this.search_string;try{const{status:o,parsed:p,proceeds:m}=await K({freight:{filters:e}});if(o===200){const a=m.freight,l=a.stats;this.treasures=a.treasures,this.limits=a.limits,this.amount_after=l.amounts.after,this.amount_before=l.amounts.before,this.amount_found=l.amounts.returned,this.next=!1,this.prev=!1,this.amount_after>=1&&(this.next=!0),this.amount_before>=1&&(this.prev=!0),this.searching=!1;return}}catch(o){console.error(o)}this.treasures=[],this.count=0,this.searching=!1,console.error("The search could not be completed.")},async open_filter_by(){await M()},async open_sort_by(){await H()},ENERGY_PER_G(e){try{return this.round_quantity(e.ENERGY[0]/E(e,["PACKAGE MASS","G"],"?"))+" "+e.ENERGY[1]+" PER G"}catch{console.warn("COULDN'T FIND ENERGY PER GRAM")}return"? KCAL PER G"},FILTERED_NUTRIENTS(e){}},J={props:["open_filter_by","open_sort_by","search","input_changed"],components:{s_button:G,s_input:q},data(){return{search_string:""}},watch:{search_string(e){this.input_changed({search_string:e})}},methods:{send_search(){console.log("send search",this.search_string),this.search({search_string:this.search_string})}}},Q={style:{display:"flex",justifyContent:"center",alignItems:"center",paddingBottom:"5px"}},X=t("div",{style:{width:"10px"}},null,-1),Z={style:{display:"flex",justifyContent:"center",alignItems:"center"}},O=t("div",{style:{width:"10px"}},null,-1);function ee(e,o,p,m,a,l){const d=i("s_input"),h=i("s_button"),y=i("s_panel"),b=i("lounge");return c(),T(b,null,{default:n(({palette:v})=>[s(y,{tabindex:"0",role:"search",style:{padding:"5px",margin:"2px"}},{default:n(()=>[t("section",Q,[s(d,{modelValue:a.search_string,"onUpdate:modelValue":o[0]||(o[0]=u=>a.search_string=u),style:{width:"100%",maxWidth:"500px"},styles:{input:{}}},null,8,["modelValue"]),X,s(h,{clicked:l.send_search,style:{fontSize:"1.4rem"},boundaries:"4px 20px 7px",styles:{inside:{}}},{default:n(()=>[_("search")]),_:1},8,["clicked"])]),t("section",Z,[s(h,{clicked:p.open_filter_by,styles:{inside:{}}},{default:n(()=>[_("filter")]),_:1},8,["clicked"]),O,s(h,{clicked:p.open_sort_by,styles:{inside:{}}},{default:n(()=>[_("sort")]),_:1},8,["clicked"])])]),_:1})]),_:1})}const te=C(J,[["render",ee]]),se={components:{change_indicator:F,s_food_or_supp_summary:U,s_button:G,search_controls:te},methods:W,data(){return{searching:!0,search_string:"",previous_search_string:"",next:!1,prev:!1,counts:{returned:"_",unlimited:"_"},amount_after:0,amount_before:0,message:"",treasures:[],count:"0"}},mounted(){this.search()}};const ne=se,r=e=>(Y("data-v-6dc0bf44"),e=e(),L(),e),ie=r(()=>t("div",{style:{height:"5px"}},null,-1)),oe=r(()=>t("div",{style:{height:"5px"}},null,-1)),re={key:0},ae={style:{display:"flex",justifyContent:"space-between",width:"100%",boxSizing:"border-box",padding:"5px 10px 5px 0"}},le=r(()=>t("div",{style:{height:"5px"}},null,-1)),ce={key:0},_e=r(()=>t("p",null,"The search did not produce any returns.",-1)),de=[_e],he=r(()=>t("div",{style:{height:"5px"}},null,-1)),pe={style:{display:"flex",justifyContent:"space-between",alignItems:"center",position:"relative",height:"40px",paddingTop:"3px",width:"100%",borderRadius:"5px"}},ue=r(()=>t("div",{style:{width:"10px"}},null,-1)),fe=r(()=>t("div",{style:{display:"flex",justifyContent:"center",alignItems:"center",width:"50%"}},null,-1)),ge=r(()=>t("div",{style:{width:"10px"}},null,-1));function me(e,o,p,m,a,l){const d=i("s_panel"),h=i("search_controls"),y=i("s_food_or_supp_summary"),b=i("s_line"),v=i("change_indicator"),u=i("s_button"),S=i("lounge");return c(),T(S,null,{default:n(({palette:x,terrain:w})=>[t("main",{"shelves-region":"",style:g({height:"100%",boxSizing:"border-box",display:"flex",flexDirection:"column",fontSize:w.width<w.mobile_nav_width?"1.5em":"1em"})},[s(d,{style:{padding:"2px 16px",textAlign:"center"}},{default:n(()=>[_(' "Herbs" are groceries that consist of "algea", "plants", and or "fungi". ')]),_:1}),ie,s(h,{open_filter_by:e.open_filter_by,open_sort_by:e.open_sort_by,search:e.search,input_changed:e.input_changed},null,8,["open_filter_by","open_sort_by","search","input_changed"]),oe,s(d,{board_physics:{overflowY:"scroll",height:"100%"},style:{position:"relative",height:"100%",overflow:"hidden",margin:"0px 2px 2px 2px"}},{default:n(()=>[s($,{name:"fade"},{default:n(()=>[e.searching?R("",!0):(c(),f("div",re,[(c(!0),f(j,null,V(e.treasures,A=>(c(),f("div",{style:g({position:"relative",color:x[2],width:"100%"})},[t("div",ae,[s(y,{treasure:A,style:{display:"flex",justifyContent:"space-between",alignItems:"center",width:"100%"}},null,8,["treasure"])]),le,s(b)],4))),256)),!e.searching&&Array.isArray(e.treasures)&&e.treasures.length===0?(c(),f("div",ce,de)):R("",!0)]))]),_:2},1024),s(v,{show:e.searching},null,8,["show"])]),_:2},1024),he,s(d,{style:{padding:"2px 16px"}},{default:n(()=>[t("div",pe,[t("div",{style:g({display:"flex",justifyContent:"left",alignItems:"center",width:"25%",color:x[2],textAlign:"left"})},[s(u,{ref:"button",boundaries:"3px 12px 3px",pressable:e.prev,clicked:e.search_prev,styles:{inside:{}}},{default:n(()=>[_("previous")]),_:1},8,["pressable","clicked"]),ue,t("p",null,k(e.amount_before)+" before",1)],4),fe,t("div",{style:g({display:"flex",justifyContent:"right",alignItems:"center",width:"25%",color:x[2],textAlign:"right"})},[t("p",null,k(e.amount_after)+" after ",1),ge,s(u,{ref:"button",boundaries:"3px 12px 3px",pressable:e.next,clicked:e.search_next,styles:{inside:{}}},{default:n(()=>[_("next")]),_:1},8,["pressable","clicked"])],4)])]),_:2},1024)],4)]),_:1})}const Re=C(ne,[["render",me],["__scopeId","data-v-6dc0bf44"]]);export{Re as default};


//# sourceMappingURL=data:application/json;base64,