# spinner.py (or pyoura.py)

import sys
import time
import threading
from termcolor import colored
import colorama



colorama.init()
class Oura:
    def __init__(self, text="Loading...", spinner="dots",color="cyan"):
        self.text = text
        self.spinner = spinner
        self.color=color
       

    def start(self, text=None):
        if text:
            self.text = text
        self._spinner_thread = threading.Thread(target=self._spin)
        self._stop_spinner = False
        self._spinner_thread.start()

    def _spin(self):
        spinner_types = {
            "dots": ".oOo",
            "dots2": "..ooOO",
            "dots3": "...oO0o",
            "arrow": "‚Üê‚Üñ‚Üë‚Üó‚Üí‚Üò‚Üì‚Üô",
            "braille": "‚°á‚£Ü‚£§‚£Ä‚£§‚£∂‚£æ‚£∑",
            "box_dots": "‚ññ‚ñò‚ñù‚ñó",
            "clock": "üïõüïêüïëüïíüïìüïîüïïüïñüïóüïòüïôüïö",
            "circle": "‚óê‚óì‚óë‚óí",
            "pong": "‚ñê‚†Ç       ‚†Ç‚ñå",
            "triangle": "‚ñ≤‚ñº‚óÑ‚ñ∫",
            "worm": "‚ññ‚ñò‚ñù‚ñó",
            "moon": "üåëüåíüåìüåîüåïüåñüåóüåò",
            "dots11": "‚£æ‚£∑‚£ø",
            "vline": "‚ñÅ‚ñÉ‚ñÑ‚ñÖ‚ñÜ‚ñá‚ñà‚ñá‚ñÜ‚ñÖ‚ñÑ‚ñÉ",
            "hline": "‚ñè‚ñé‚ñç‚ñå‚ñã‚ñä‚ñâ‚ñä‚ñã‚ñå‚ñç‚ñé",
            "cross": "‚úö‚úô‚úõ‚úú",
            "asterisk": "*‚ãÜ",
            "slash": "/-\\|",
            "daisy": "‚úº‚ùÅ‚úø‚ùÉ",
            "bar": "‚ñÇ‚ñÉ‚ñÑ‚ñÖ‚ñÜ‚ñá‚ñà‚ñá‚ñÜ‚ñÖ‚ñÑ‚ñÉ",
            "spinner": "‚†ã‚†ô‚†π‚†∏‚†º‚†¥‚†¶‚†ß‚†á‚†è",
            "toggle": "‚¢ø‚£ü‚£Ø‚£∑",
            "dots8bit": "‚ú∂‚ú∏‚úπ‚ú∫‚úπ‚ú∑‚úµ‚ú¥",
            "dots8bit2": "‚£æ‚£Ω‚£ª‚¢ø‚°ø‚£ü‚£Ø‚£∑",
            "dots8bit3": "‚†ã‚†ô‚†ö‚†û‚†ñ‚†¶‚†¥‚†≤‚†≥‚†ì",
            "line": "‚ñÇ‚ñÉ‚ñÑ‚ñÖ‚ñÜ‚ñá‚ñà‚ñá‚ñÜ‚ñÖ‚ñÑ‚ñÉ",
            "triangle2": "‚ó¢‚ó£‚ó§‚ó•",
            "squares": "‚ó∞‚ó≥‚ó≤‚ó±",
            "bounce": "‚†Å‚†Ç‚†Ñ‚†Ç",
            "bouncing_ball": "‚£æ‚£Ω‚£ª‚¢ø‚°ø‚£ü‚£Ø‚£∑",
            "note": "‚ô©‚ô™‚ô´‚ô¨",
            "dots4": "‚£æ‚£∑‚£ø‚£∂",
            "dots5": "‚†ã‚†ô‚†ö‚†û‚†ñ‚†¶‚†¥‚†≤‚†≥‚†ì",
            "dots6": "‚†ã‚†ô‚†ö‚†í‚†Ç‚†Ç‚†í‚†≤‚†¥‚†¶",
            "dots7": "‚†â‚†ô‚†§‚¢Ä‚††‚†Ñ‚†Ñ‚¢†‚†ê‚†Ç",
            "dots8": "‚†Å‚†Ç‚†Ñ‚°Ä‚¢Ä‚††‚†ê‚†à",
            "dots9": "‚¢π‚¢∫‚¢º‚£∏‚£á‚°ß‚°ó‚°è",
            "dots10": "‚£æ‚£Ω‚£ª‚¢ø‚°ø‚£ü‚£Ø‚£∑",
            "dots12": "‚¢∏‚£∞‚£†‚£§‚£¥‚£Ü‚°Ç‚†Ö‚¢Ü‚£Ä‚£∏‚£∞‚£†",
            "dots13": "‚†ã‚†ô‚†ö‚†û‚†ñ‚†¶‚†¥‚†≤‚†≥‚†ì",
            "dots14": "‚†á‚°á‚†∏‚¢π‚£∞‚£†‚†ñ‚†Ü‚†ô‚†ã",
            "dots15": "‚†ã‚†ô‚†ö‚†í‚†Ç‚†Ç‚†í‚†≤‚†¥‚†¶",
            "dots16": "‚†ô‚†ö‚†í‚†Ç‚†Ç‚†í‚†≤‚†¥‚†¶‚†¶‚†ñ‚†≤‚†¥‚†¶‚†¶",
            "dots17": "‚†ø‚†ü‚†ª‚†Ω‚†æ‚†∑‚†Æ‚†¨‚†ê‚†Ñ",
            "dots18": "‚†ã‚†ô‚†ö‚†í‚†Ç‚†Ç‚†í‚†≤‚†¥‚†¶",
            "dots19": "‚†à‚†â‚†ã‚†ì‚†í‚†ê‚†ê‚†í‚†ñ‚†¶‚†¥‚†≤‚†≥‚†ì",
            "dots20": "‚†ã‚†ô‚†ö‚†í‚†Ç‚†Ç‚†í‚†≤‚†¥‚†¶‚†ñ‚†¶‚†¥‚†≤‚†¶‚†¶",
            "dots21": "‚¢π‚¢∫‚¢º‚£∏‚£á‚°ß‚°ó‚°è",
            "dots22": "‚£æ‚£Ω‚£ª‚¢ø‚°ø‚£ü‚£Ø‚£∑",
            "dots23": "‚£ø‚£æ‚£∑‚£∂‚£≠‚£Ω‚£ª‚¢ø‚°ø‚£ü‚£Ø‚£∑",
            "dots24": "‚†â‚†ô‚†ö‚†í‚†Ç‚†Ç‚†í‚†≤‚†¥‚†¶",
            "dots25": "‚†Å‚†Ç‚†Ñ‚°Ä‚¢Ä‚††‚†ê‚†à",
            "dots26": "‚†Å‚†Ç‚†Ñ‚°Ä‚¢Ä‚††‚†ê‚†à",
            "dots27": "‚†Å‚†Ç‚†Ñ‚°Ä‚¢Ä‚††‚†ê‚†à",
            "dots28": "‚†Å‚†Ç‚†Ñ‚°Ä‚¢Ä‚††‚†ê‚†à",
            "dots29": "‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø",
            "dots30": "‚†Å‚†â‚†ô‚†ö‚†í‚†Ç‚†Ç‚†í‚†í‚†≤‚†≤‚†¥‚†¥‚†¶‚†¶‚†ñ‚†≤‚†≤‚†¥‚†¥‚†¶‚†¶‚†ñ‚†≤‚†≤‚†¶‚†¶‚†ê‚†à",
            "dots31": "‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä",
            "dots32": "‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â",
            "dots33": "‚†Å‚†â‚†ô‚†ö‚†í‚†Ç‚†Ç‚†í‚†í‚†≤‚†≤‚†¥‚†¥‚†¶‚†¶‚†ñ‚†≤‚†≤‚†¥‚†¥‚†¶‚†¶‚†ñ‚†≤‚†≤‚†¶‚†¶‚†ê‚†à",
            "dots34": "‚£ø‚£∑‚£∂‚£¶‚£Ñ‚£Ä‚°Ä‚†Ñ‚†Ç‚†Å",
            "dots35": "‚†â‚†õ‚†ø‚†ø‚†∑‚†∂‚†∂‚†∂‚†∂‚†∂‚†ñ‚†í‚†¶‚†§‚†§‚†§‚†§‚†§‚†§‚†¥‚†∂‚†∂‚†∂‚†æ‚†ø‚†ø‚†∑‚†∂‚†æ‚†õ‚†â",
            "dots36": "‚°Å‚°à‚†≥‚¢∂‚£§‚£¨‚£Ñ‚†â‚°Å‚†ê‚¢Ä‚£†‚£¥‚£∂‚°æ‚†Ø‚†â‚†Å",
            "dots37": "‚°Å‚†à‚†ë‚¢Ñ‚£Ä‚†î‚†ã‚†â‚†â‚†ô‚†ì‚†≤‚¢§‚°Ä‚†Ç‚†í‚†ö‚†õ‚†Ç‚†â‚†â‚†â‚†â",
            "dots38": "‚¢Ä‚£Ä‚£†‚£§‚£∂‚£∂‚£∂‚£∂‚£¶‚£§‚£Ñ‚°Ä‚¢Ä",
            "dots39": "‚£Ä‚£§‚£¥‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£æ‚£∂‚£¶‚£Ä",
            "dots40": "‚°Ä‚°Ä‚†ë‚†°‚¢Ñ‚£®‚£∂‚£∂‚°û‚†â‚¢Å‚£Ñ‚£Ä‚°Ä‚¢Ä",
            "dots41": "‚£Ä‚£Ä‚°Ä‚¢Å‚†Ç‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†ê‚†§‚£Ü‚°Ä‚¢Ä",
            "dots42": "‚°Ä‚†î‚†ä‚†Ñ‚†Ñ‚†Ñ‚¢Ç‚£Ñ‚°Ä‚†à‚†í‚†í‚†ä‚†â‚†â‚†â‚†â‚†â",
            "dots43": "‚†ã‚†ô‚†ö‚†í‚†Ç‚†Ç‚†í‚†≤‚†¥‚†¶‚†ñ‚†≤‚†≤‚†¶‚†¶‚†ñ‚†≤‚†∂‚†∂‚†¶‚†¶‚†ñ‚†≤‚†∂‚†∂‚†¶‚†¶‚†§‚†¥‚†∂‚†∂‚†¶‚†¶‚†ñ‚†í‚†í‚†Ç‚†Ç‚†í‚†ö‚†ô‚†ã",
            "dots44": "‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä",
            "dots45": "‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â",
            "dots46": "‚°Ä‚£Ä‚£†‚£§‚£∂‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£∂‚£¶‚£§‚£Ñ‚°Ä",
            "dots47": "‚°á‚¢∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°á",
            "dots48": "‚†á‚†à‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†â‚†á",
            "dots49": "‚£∂‚£∂‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£æ‚£∂‚£∂",
            "dots50": "‚¢Ä‚£†‚£¥‚£∂‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∂‚£æ‚£¶‚£Ñ",
            "dots51": "‚†Å‚†Ç‚†Ñ‚°Ä‚¢ê‚††‚†à‚†ê‚††‚††‚†à‚¢Ä‚†Ñ‚†Ç‚°Ä‚¢†‚†ê‚††‚††‚†à‚¢Ä‚†Ñ‚†Ç‚°Ä‚††‚†ê‚††‚††‚†Ñ‚°Ä",
            "dots52": "‚£∞‚£∞‚£¥‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£æ‚£¥‚£æ",
            "dots53": "‚£á‚°†‚†ê‚†à‚°Å‚°Ä‚¢Å‚£Ç‚°Ñ‚°ê‚†à‚†Ç‚†à‚†ê‚°Ä‚†Ç‚†à‚†à‚†ê‚°Ä‚¢Ç‚°Ä‚°Å‚†Ñ‚¢Ç‚†ê‚†à‚†à‚†à‚¢Å‚°Ä",
            "dots54": "‚†ã‚†ô‚†ö‚†í‚†Ç‚†Ç‚†í‚†≤‚†¥‚†¶‚†ñ‚†≤‚†∂‚†∂‚†∂‚†∂‚†∂‚†ö‚†í‚†Ç‚†Ç‚†í‚†≤‚†¥‚†¶‚†ñ‚†≤‚†∂‚†∂‚†∂‚†∂‚†∂",
            "dots55": "‚†í‚†í‚†Ç‚†Ç‚†Ñ‚†Ñ‚†Ç‚†Ç‚†Ç‚†ê‚†ê‚†ê‚°Ä‚¢Ä‚¢Ä‚°Ñ‚£Ä‚£Ä‚¢Ñ‚¢§‚¢§‚£§‚£§‚£§‚£§‚£§‚£§‚£Ä‚£Ä‚£Ä‚£Ä",
            "dots56": "‚£§‚£Ä‚°Ä‚¢Ä‚†Ñ‚†í‚†Ç‚†Ç‚†Ç‚†ê‚††‚¢Ä‚£Ä‚°Ä‚¢Ä‚†Ñ‚†Ç‚†Ç‚†Ç‚†Ç‚†Ç‚†í‚†í‚†í‚†í‚†í‚†í‚†í‚†í‚†í‚†í",
            "dots57": "‚†Å‚†Ç‚†Ñ‚°Ä‚¢Ä‚°Ä‚†Ç‚†Ç‚†ê‚†ê‚°Ä‚¢Ä‚£Ä‚°Ä‚¢Ä‚†Ñ‚†Ç‚†Ç‚†Ç‚†Ç‚†Ç‚†í‚†í‚†í‚†í‚†í‚†í‚†í‚†í‚†í",
            "dots58": "‚£Ä‚°Ä‚†î‚†ä‚†Ñ‚†Ñ‚†Ñ‚¢Ç‚£Ñ‚°Ä‚†à‚†í‚†í‚†ä‚†â‚†â‚†â‚†â‚†â‚†â‚†â",
            "dots59": "‚†â‚†ô‚†ö‚†í‚†Ç‚†Ç‚†í‚†≤‚†¥‚†¶‚†ñ‚†≤‚†∂‚†∂‚†∂‚†∂‚†∂‚†ö‚†í‚†Ç‚†Ç‚†í‚†≤‚†¥‚†¶‚†ñ‚†≤‚†∂‚†∂‚†∂‚†∂‚†∂",
            "dots60": "‚¢Ä‚£†‚£¥‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£æ‚£∂‚£¶‚£Ñ",
            "dots61": "‚£∂‚£∂‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£æ‚£∂‚£¶‚£§‚£Ä",
            "dots62": "‚£æ‚£∑‚£∂‚£¶‚£Ñ‚°Ä‚¢Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£Ä",
            "dots63": "‚¢Ä‚£Ä‚£†‚£§‚£∂‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£æ‚£∂‚£¶‚£Ñ",
            "dots64": "‚£æ‚£æ‚£æ‚£æ‚£æ‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£æ‚£æ‚£æ",
            "dots65": "‚°ü‚¢ã‚†Ç‚¢â‚£©‚°ë‚†Ñ‚†ê‚°ò‚£ú‚¢º‚°≤‚°¶‚¢Ç‚°Ñ‚£Ä‚¢à‚†∞‚°ê‚°°‚†°‚¢Ä‚°†‚†Ñ‚††‚¢à‚°Ä‚†Ñ‚°Ç",
            "dots66": "‚£ø‚£∑‚£æ‚£∂‚£∂‚£∂‚£∂‚£∂‚£§‚£Ñ‚°Ä‚†à‚†ô‚¢ø‚°è‚†Ç‚†Ñ‚°à‚¢Ü‚£î‚£®‚£∂‚£ø‚£ø",
            "dots67": "‚°á‚¢∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø",
            "dots68": "‚¢∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø",
            "dots69": "‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø",
            "dots70": "‚°ø‚†ã‚†Ç‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ‚†Ñ",
            "dots71": "‚£á‚£Ä‚£†‚£§‚£§"

        }
        
        spinner = spinner_types.get(self.spinner, ".oOo")
        while not self._stop_spinner:
            for char in spinner:
                colored_char = colored(char,self.color)
                sys.stdout.write(f"\r {colored_char} {self.text}")
                sys.stdout.flush()
                time.sleep(0.1)
        # Replace spinner with message character when spinner stops
        sys.stdout.write(f"\r ")
        sys.stdout.flush()
       


    def stop(self):
        self._stop_spinner = True
        self._spinner_thread.join()

    def succeed(self, text=None):
        self.stop()  # Stop the spinner
        if text:
            self.text = text
        print(colored(f"\u2714 {self.text}", 'green'))  # Display success message

    def fail(self, text=None):
        self.stop()  # Stop the spinner
        if text:
            self.text = text
        print(colored(f"\u2718 {self.text} ", 'red'))  # Display failure message

    def warn(self, text=None):
        self.stop()  # Stop the spinner
        if text:
            self.text = text
        print(colored(f"‚ö†Ô∏è {self.text}", 'yellow'))  # Display warning message

    def info(self, text=None):
        self.stop()  # Stop the spinner
        if text:
            self.text = text
        print(colored(f"‚ÑπÔ∏è {self.text}", 'blue'))  # Display info message

    def stop_and_persist(self, symbol="", text=None):
        self.stop()  # Stop the spinner
        if text:
            self.text = text
        print(colored(f"{self.text} {symbol}", 'cyan'))  # Persist message

# Additional functionality:
def create_ora(text="Loading...", spinner="dots"):
    # Convenience function to create Ora instance
    return Oura(text, spinner)
