import{w as s}from"./index.06e1c4f3.js";import{o as c}from"./index.218e9685.js";const l=async(e,o)=>{let a=null;const t=await fetch(`${s}/chats/new`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${e}`},body:JSON.stringify({chat:o})}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(a=n,console.log(n),null));if(a)throw a;return t},u=async(e="")=>{let o=null;const a=await fetch(`${s}/chats/`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(o=t,console.log(t),null));if(o)throw o;return a.map(t=>({...t,time_range:c(t.updated_at)}))},p=async(e="",o)=>{let a=null;const t=await fetch(`${s}/chats/list/user/${o}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(a=n,console.log(n),null));if(a)throw a;return t.map(n=>({...n,time_range:c(n.updated_at)}))},d=async(e="")=>{let o=null;const a=await fetch(`${s}/chats/archived`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(o=t,console.log(t),null));if(o)throw o;return a},w=async e=>{let o=null;const a=await fetch(`${s}/chats/all`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(o=t,console.log(t),null));if(o)throw o;return a},y=async e=>{let o=null;const a=await fetch(`${s}/chats/all/archived`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(o=t,console.log(t),null));if(o)throw o;return a},j=async e=>{let o=null;const a=await fetch(`${s}/chats/all/db`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(o=t,console.log(t),null));if(o)throw o;return a},f=async e=>{let o=null;const a=await fetch(`${s}/chats/tags/all`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(o=t,console.log(t),null));if(o)throw o;return a},g=async(e="",o)=>{let a=null;const t=await fetch(`${s}/chats/tags`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}},body:JSON.stringify({name:o})}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(a=n,console.log(n),null));if(a)throw a;return t.map(n=>({...n,time_range:c(n.updated_at)}))},$=async(e,o)=>{let a=null;const t=await fetch(`${s}/chats/${o}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(a=n,console.log(n),null));if(a)throw a;return t},T=async(e,o)=>{let a=null;const t=await fetch(`${s}/chats/share/${o}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(a=n,console.log(n),null));if(a)throw a;return t},m=async(e,o)=>{let a=null;const t=await fetch(`${s}/chats/${o}/clone`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(a=n,"detail"in n?a=n.detail:a=n,console.log(n),null));if(a)throw a;return t},C=async(e,o)=>{let a=null;const t=await fetch(`${s}/chats/${o}/share`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(a=n,console.log(n),null));if(a)throw a;return t},B=async(e,o)=>{let a=null;const t=await fetch(`${s}/chats/${o}/archive`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(a=n,console.log(n),null));if(a)throw a;return t},A=async(e,o)=>{let a=null;const t=await fetch(`${s}/chats/${o}/share`,{method:"DELETE",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(a=n,console.log(n),null));if(a)throw a;return t},E=async(e,o,a)=>{let t=null;const n=await fetch(`${s}/chats/${o}`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}},body:JSON.stringify({chat:a})}).then(async r=>{if(!r.ok)throw await r.json();return r.json()}).then(r=>r).catch(r=>(t=r,console.log(r),null));if(t)throw t;return n},z=async(e,o)=>{let a=null;const t=await fetch(`${s}/chats/${o}`,{method:"DELETE",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(a=n.detail,console.log(n),null));if(a)throw a;return t},S=async(e,o)=>{let a=null;const t=await fetch(`${s}/chats/${o}/tags`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(a=n,console.log(n),null));if(a)throw a;return t},O=async(e,o,a)=>{let t=null;const n=await fetch(`${s}/chats/${o}/tags`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}},body:JSON.stringify({tag_name:a,chat_id:o})}).then(async r=>{if(!r.ok)throw await r.json();return r.json()}).then(r=>r).catch(r=>(t=r,console.log(r),null));if(t)throw t;return n},I=async(e,o,a)=>{let t=null;const n=await fetch(`${s}/chats/${o}/tags`,{method:"DELETE",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}},body:JSON.stringify({tag_name:a,chat_id:o})}).then(async r=>{if(!r.ok)throw await r.json();return r.json()}).then(r=>r).catch(r=>(t=r,console.log(r),null));if(t)throw t;return n},_=async e=>{let o=null;const a=await fetch(`${s}/chats/`,{method:"DELETE",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(o=t.detail,console.log(t),null));if(o)throw o;return a},G=async e=>{let o=null;const a=await fetch(`${s}/chats/archive/all`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(o=t.detail,console.log(t),null));if(o)throw o;return a},P=async e=>{let o=null;const a=await fetch(`${s}/users/permissions/user`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${e}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),o=t.detail,null));if(o)throw o;return a},U=async(e,o)=>{let a=null;const t=await fetch(`${s}/users/permissions/user`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${e}`},body:JSON.stringify({...o})}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(console.log(n),a=n.detail,null));if(a)throw a;return t},b=async(e,o,a)=>{let t=null;const n=await fetch(`${s}/users/update/role`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${e}`},body:JSON.stringify({id:o,role:a})}).then(async r=>{if(!r.ok)throw await r.json();return r.json()}).catch(r=>(console.log(r),t=r.detail,null));if(t)throw t;return n},k=async e=>{let o=null;const a=await fetch(`${s}/users/`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${e}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),o=t.detail,null));if(o)throw o;return a||[]},N=async e=>{let o=null;const a=await fetch(`${s}/users/user/settings`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${e}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),o=t.detail,null));if(o)throw o;return a},v=async(e,o)=>{let a=null;const t=await fetch(`${s}/users/user/settings/update`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${e}`},body:JSON.stringify({...o})}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(console.log(n),a=n.detail,null));if(a)throw a;return t},L=async(e,o)=>{let a=null;const t=await fetch(`${s}/users/${o}`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${e}`}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(console.log(n),a=n.detail,null));if(a)throw a;return t},J=async(e,o)=>{let a=null;const t=await fetch(`${s}/users/${o}`,{method:"DELETE",headers:{"Content-Type":"application/json",Authorization:`Bearer ${e}`}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(console.log(n),a=n.detail,null));if(a)throw a;return t},D=async(e,o,a)=>{let t=null;const n=await fetch(`${s}/users/${o}/update`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${e}`},body:JSON.stringify({profile_image_url:a.profile_image_url,email:a.email,name:a.name,password:a.password!==""?a.password:void 0})}).then(async r=>{if(!r.ok)throw await r.json();return r.json()}).catch(r=>(console.log(r),t=r.detail,null));if(t)throw t;return n};export{I as A,C as B,A as C,T as D,L as E,G as a,u as b,l as c,_ as d,d as e,B as f,w as g,z as h,y as i,$ as j,E as k,m as l,g as m,f as n,N as o,D as p,p as q,b as r,k as s,J as t,v as u,j as v,P as w,U as x,S as y,O as z};
//# sourceMappingURL=index.b8ab1d6d.js.map
