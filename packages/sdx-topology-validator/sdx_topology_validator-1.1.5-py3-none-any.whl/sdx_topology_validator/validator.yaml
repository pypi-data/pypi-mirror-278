openapi: 3.0.0
info:
  title: SDX Topology Services
  description: This service includes APIs for converting network topology data and validating SDX topology.
  version: 1.0.0
  contact:
    email: lmarinve@fiu.edu
servers:
  - url: /api
#  - url: http://192.168.0.14:8000

tags: #validator part
  - name: topology
    description: Everything about your domain topology
    externalDocs:
      description: Find out more
      url: https://www.atlanticwave-sdx.net
  - name: node
    description: Everything about a node in your domain
  - name: link
    description: Everything about a link in your domain
  - name: user
    description: Operations about user
    externalDocs:
      description: Find out more about our store
      url: https://www.atlanticwave-sdx.net

paths:
  /topology: #topology part
    get:
      operationId: convert_topology
      x-openapi-router-controller: main
      tags:
        - topology
      summary: Retrieve converted network topology
      description: Fetches and converts the topology from a Kytos SDN controller, providing a transformed view suitable for SDX operations.
      responses:
        '200':
          description: Successfully retrieved and converted network topology.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConvertedTopology'
        '401':
          description: Validation error in the conversion process.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /validator:
    post:
      tags:
      - topology
      summary: Send a new topology to SDX-LC
      description: Create a topology
      operationId: validate
      x-openapi-router-controller: validator
      requestBody:
        description: placed for adding a new topology
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
              - id
              - name
              - version
              - model_version
              - timestamp
              - nodes
              - links
              additionalProperties: false
              properties:
                  id:
                    type: string
                    pattern: '^urn:sdx:topology:[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$'
                  name:
                    type: string
                    minLength: 3
                    maxLength: 30
                    pattern: '^[A-Za-z0-9.,-_/]*$'
                  version:
                    type: integer
                    format: int64
                  model_version:
                    type: string
                    pattern: '^2\.0\.0$'
                  timestamp:
                    type: string
                    pattern: '^\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12]\d|3[01])T([01]\d|2[0-3]):([0-5]\d):([0-5]\d)Z$'
                    #pattern: '^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z$'
                    #format: date-time
                  nodes:
                    type: array
                    minItems: 1
                    items:
                      $ref: '#/components/schemas/nodes'
                  links:
                    type: array
                    minItems: 1
                    items:
                      $ref: '#/components/schemas/links'
                  services:
                    type: array
                    minItems: 1
            examples:
              post Topology:
                value:
                  id: urn:sdx:topology:amlight.net
                  name: AmLight-OXP
                  version: 2
                  model_version: 1.0.0
                  timestamp: '2021-07-07T21:19:40Z'
                  nodes: 
                    [
                      {
                        "name": "Ampath1",
                        "id": "urn:sdx:node:amlight.net:Ampath1",
                        "location":
                          {
                            "address": "Equinix MI1, Miami, FL",
                            "latitude": 0,
                            "longitude": 0
                          },
                        "ports":
                          [
                            {
                              "id": "urn:sdx:port:amlight.net:Ampath1:1",
                              "name": "Ampath1-eth1",
                              "node": "urn:sdx:node:amlight.net:Ampath1",
                              "type": "10GE",
                              "status": "up",
                              "state": "enabled",
                              "services": "l2vpn",
                              "nni": "False",
                              "mtu": 9000
                            },
                            {
                              "id": "urn:sdx:port:amlight.net:Ampath1:2",
                              "name": "Ampath1-eth2",
                              "node": "urn:sdx:node:amlight.net:Ampath1",
                              "type": "10GE",
                              "status": "up",
                              "state": "enabled",
                              "services": "l2vpn",
                              "nni": "False",
                              "mtu": 9000
                            }
                          ]
                      }
                    ]
                  links:
                    [
                      {
                        "name": "Ampath3/2_Ampath1/2",
                        "id": "urn:sdx:link:amlight.net:Ampath3/2_Ampath1/2",
                        "ports":
                          [
                            "urn:sdx:port:amlight.net:Ampath3:2",
                            "urn:sdx:port:amlight.net:Ampath1:2"
                          ],
                        "type": "intra",
                        "bandwidth": 1250000000,
                        "residual_bandwidth": 80,
                        "latency": 25,
                        "packet_loss": 0.006255,
                        "availability": 99.5,
                        "status": "up",
                        "state": "enabled"
                      },
                      {
                        "name": "Ampath3/3_Ampath2/3",
                        "id": "urn:sdx:link:amlight.net:Ampath3/3_Ampath2/3",
                        "ports":
                          [
                            "urn:sdx:port:amlight.net:Ampath3:3",
                            "urn:sdx:port:amlight.net:Ampath2:3"
                          ],
                        "type": "intra",
                        "bandwidth": 1250000000,
                        "residual_bandwidth": 31,
                        "latency": 16,
                        "packet_loss": 0.0029453,
                        "availability": 99.5,
                        "status": "up",
                        "state": "enabled"
                      }
                    ]
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid Connection
        '405':
          description: Invalid input
        'default':
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'

components:
  schemas:
    ConvertedTopology: #topology part
      type: object
      properties:
        result:
          type: object
          properties:
            nodes:
              type: array
              items:
                $ref: '#/components/schemas/nodes'
            links:
              type: array
              items:
                $ref: '#/components/schemas/links'
            services:
              type: array
              items:
                type: string
        status_code:
          type: integer
          example: 200
    nodes: #validation part
      type: object
      required:
        - id
        - name
        - location
        - ports
      additionalProperties: false
      properties:
        id:
          type: string
          pattern: '^urn:sdx:node:[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}:[a-zA-Z0-9.,\-_\/]{1,30}$'
        name:
          type: string
          minLength: 3
          maxLength: 30
          pattern: '^[a-zA-Z0-9.,\-_\/]{1,30}$' 
        location:
          $ref: '#/components/schemas/location'
        ports:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/port'
        status:
          type: string
          enum: [up, down, error]
        state:
          type: string
          enum: [enabled, disabled, maintenance]
    links: #validation part
      type: object
      required:
        - id
        - name
        - ports
        - bandwidth
        #- type
        - status
        - state
      additionalProperties: false
      properties:
        id:
          type: string
          pattern: '^urn:sdx:link:[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}:[a-zA-Z0-9.,\-_\/]{1,30}+$'
        name:
          type: string
          pattern: '^[a-zA-Z0-9.,\-_\/]{1,30}$' 
        ports:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/port'
        type:
          type: string
          enum: ['intra']
        bandwidth:
          type: number
          minimum: 1250
          maximum: 500000
        residual_bandwidth:
          type: number
          minimum: 0
          maximum: 100
        latency:
          type: number
          minimum: 1
          maximum: 500000
        packet_loss:
          type: number
          minimum: 0
          maximum: 100
        availability:
          type: number
          minimum: 0
          maximum: 100
        status:
          type: string
          enum: ['up','down','error']
        state:
          type: string
          enum: ['enabled','disabled','maintenance']        
    port: #validation part
      type: object
      required:
        - id
        - name
        - node
        - type
        - status
        - state
      additionalProperties: false
      properties:
        id:
          type: string
          pattern: '^urn:sdx:port:[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}:[a-zA-Z0-9.,\-_\/]{1,30}:[a-zA-Z0-9.,\-_\/]{1,30}$'                  
        name:
          type: string
          minLength: 3
          maxLength: 30
          pattern: '^[a-zA-Z0-9.,\-_\/]{1,30}$'
        node:
          type: string
          pattern: '^urn:sdx:node:[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}:[a-zA-Z0-9.,\-_\/]{1,30}$'
        type:
          type: string
          enum: ['100FE','1GE','10GE','25GE','40GE','50GE','100GE','400GE','Other']
        mtu:
          type: integer
          #format: int32
          minimum: 1500
          maximum: 10000
          default: 1500
        nni:
          type: string
          pattern: '^(urn:sdx:link:[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}:[a-zA-Z0-9.,\-_\/]{1,30})?$|^$'
        status:
          type: string
          enum: ['up','down','error']
        state:
          type: string
          enum: ['enabled','disabled','maintenance']
        services:
          items:
              type: object
              properties:
                  l2vpn-ptp:
                    type: object
                    properties:
                      vlan_range:
                        type: array
                  l2vpn-ptmp:
                    type: object
                    properties:
                      vlan_range:
                        type: array
    location: #validation part
      type: object
      required:
        - address
        - latitude
        - longitude
        - iso3166_2_lvl4
      properties:
        address:
          type: string
          pattern: '^[\x00-\x7F]{1,255}$'
        latitude:
          type: number  
          minimum: -90.0  
          maximum: 90.0 
        longitude:
          type: number  
          minimum: -90.0  
          maximum: 90.0 
        iso3166_2_lvl4:
          type: string
          minLength: 5
          maxLength: 5
          pattern: '^[A-Z]{2}-[A-Z]{2}$'
    ErrorMessage: #validation part
      type: object
      required:
        - error_code
        - error_message
      properties:
        error_code:
          type: string
        error_message:
          type: string