# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .name_for_update import NameForUpdate
from .phone_for_update import PhoneForUpdate
from .email_for_update import EmailForUpdate


class BasicInfoUpdate(object):
    _types = {
        "names": List[NameForUpdate],
        "phones": List[PhoneForUpdate],
        "emails": List[EmailForUpdate],
    }

    def __init__(self, d=None):
        self.names: Optional[List[NameForUpdate]] = None
        self.phones: Optional[List[PhoneForUpdate]] = None
        self.emails: Optional[List[EmailForUpdate]] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "BasicInfoUpdateBuilder":
        return BasicInfoUpdateBuilder()


class BasicInfoUpdateBuilder(object):
    def __init__(self) -> None:
        self._basic_info_update = BasicInfoUpdate()

    def names(self, names: List[NameForUpdate]) -> "BasicInfoUpdateBuilder":
        self._basic_info_update.names = names
        return self

    def phones(self, phones: List[PhoneForUpdate]) -> "BasicInfoUpdateBuilder":
        self._basic_info_update.phones = phones
        return self

    def emails(self, emails: List[EmailForUpdate]) -> "BasicInfoUpdateBuilder":
        self._basic_info_update.emails = emails
        return self

    def build(self) -> "BasicInfoUpdate":
        return self._basic_info_update
