# coding: utf-8

# GTO-MO-1-1 - Removed partial_header
# flake8: noqa

from datetime import date, datetime
import decimal
import functools
import io
import re
import typing
import typing_extensions
import uuid

import frozendict

from chkp_harmony_endpoint_management_sdk.generated.cloud import schemas


class ThreatPreventionSensors(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    class MetaOapg:
        
        class properties:
            enabled = schemas.BoolSchema
        
            @staticmethod
            def fileReputation() -> typing.Type['FileReputationState']:
                return FileReputationState
        
            @staticmethod
            def offlineReputation() -> typing.Type['OfflineReputationState']:
                return OfflineReputationState
        
            @staticmethod
            def customIoc() -> typing.Type['CustomIocState']:
                return CustomIocState
        
            @staticmethod
            def staticAnalysis() -> typing.Type['StaticAnalysisState']:
                return StaticAnalysisState
            __annotations__ = {
                "enabled": enabled,
                "fileReputation": fileReputation,
                "offlineReputation": offlineReputation,
                "customIoc": customIoc,
                "staticAnalysis": staticAnalysis,
            }
        additional_properties = schemas.NotAnyTypeSchema
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["enabled"]) -> MetaOapg.properties.enabled: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["fileReputation"]) -> 'FileReputationState': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["offlineReputation"]) -> 'OfflineReputationState': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["customIoc"]) -> 'CustomIocState': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["staticAnalysis"]) -> 'StaticAnalysisState': ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["enabled"], typing_extensions.Literal["fileReputation"], typing_extensions.Literal["offlineReputation"], typing_extensions.Literal["customIoc"], typing_extensions.Literal["staticAnalysis"], ]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["enabled"]) -> typing.Union[MetaOapg.properties.enabled, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["fileReputation"]) -> typing.Union['FileReputationState', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["offlineReputation"]) -> typing.Union['OfflineReputationState', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["customIoc"]) -> typing.Union['CustomIocState', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["staticAnalysis"]) -> typing.Union['StaticAnalysisState', schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["enabled"], typing_extensions.Literal["fileReputation"], typing_extensions.Literal["offlineReputation"], typing_extensions.Literal["customIoc"], typing_extensions.Literal["staticAnalysis"], ]):
        return super().get_item_oapg(name)

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        enabled: typing.Union[MetaOapg.properties.enabled, bool, schemas.Unset] = schemas.unset,
        fileReputation: typing.Union['FileReputationState', schemas.Unset] = schemas.unset,
        offlineReputation: typing.Union['OfflineReputationState', schemas.Unset] = schemas.unset,
        customIoc: typing.Union['CustomIocState', schemas.Unset] = schemas.unset,
        staticAnalysis: typing.Union['StaticAnalysisState', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> 'ThreatPreventionSensors':
        return super().__new__(
            cls,
            *_args,
            enabled=enabled,
            fileReputation=fileReputation,
            offlineReputation=offlineReputation,
            customIoc=customIoc,
            staticAnalysis=staticAnalysis,
            _configuration=_configuration,
        )

from chkp_harmony_endpoint_management_sdk.generated.cloud.model.custom_ioc_state import CustomIocState
from chkp_harmony_endpoint_management_sdk.generated.cloud.model.file_reputation_state import FileReputationState
from chkp_harmony_endpoint_management_sdk.generated.cloud.model.offline_reputation_state import OfflineReputationState
from chkp_harmony_endpoint_management_sdk.generated.cloud.model.static_analysis_state import StaticAnalysisState
