# coding: utf-8
"""
    Superwise Main Entities

    API reference

    The version of the OpenAPI document: 1.6.2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501
from __future__ import annotations

import json
import pprint
import re  # noqa: F401

from pydantic import BaseModel
from pydantic import Field
from pydantic import StrictStr

from superwise_api.client.models.granularity import Granularity


class TimeDimension(BaseModel):
    """
    TimeDimension
    """

    dimension: StrictStr = Field(...)
    granularity: Granularity = Field(...)
    __properties = ["dimension", "granularity"]

    class Config:
        """Pydantic configuration"""

        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> TimeDimension:
        """Create an instance of TimeDimension from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True, exclude={}, exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> TimeDimension:
        """Create an instance of TimeDimension from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return TimeDimension.parse_obj(obj)

        _obj = TimeDimension.parse_obj({"dimension": obj.get("dimension"), "granularity": obj.get("granularity")})
        return _obj
