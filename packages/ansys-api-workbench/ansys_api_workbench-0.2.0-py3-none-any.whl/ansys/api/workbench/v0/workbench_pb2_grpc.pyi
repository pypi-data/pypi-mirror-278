"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import ansys.api.workbench.v0.workbench_pb2
import grpc
import typing

class WorkbenchServiceStub:
    def __init__(self, channel: grpc.Channel) -> None: ...
    RunScript: grpc.UnaryStreamMultiCallable[
        ansys.api.workbench.v0.workbench_pb2.RunScriptRequest,
        ansys.api.workbench.v0.workbench_pb2.RunScriptResponse] = ...
    """run the given script"""

    UploadFile: grpc.StreamUnaryMultiCallable[
        ansys.api.workbench.v0.workbench_pb2.UploadFileRequest,
        ansys.api.workbench.v0.workbench_pb2.UploadFileResponse] = ...
    """upload a file"""

    DownloadFile: grpc.UnaryStreamMultiCallable[
        ansys.api.workbench.v0.workbench_pb2.DownloadFileRequest,
        ansys.api.workbench.v0.workbench_pb2.DownloadFileResponse] = ...
    """download a file"""


class WorkbenchServiceServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def RunScript(self,
        request: ansys.api.workbench.v0.workbench_pb2.RunScriptRequest,
        context: grpc.ServicerContext,
    ) -> typing.Iterator[ansys.api.workbench.v0.workbench_pb2.RunScriptResponse]:
        """run the given script"""
        pass

    @abc.abstractmethod
    def UploadFile(self,
        request: typing.Iterator[ansys.api.workbench.v0.workbench_pb2.UploadFileRequest],
        context: grpc.ServicerContext,
    ) -> ansys.api.workbench.v0.workbench_pb2.UploadFileResponse:
        """upload a file"""
        pass

    @abc.abstractmethod
    def DownloadFile(self,
        request: ansys.api.workbench.v0.workbench_pb2.DownloadFileRequest,
        context: grpc.ServicerContext,
    ) -> typing.Iterator[ansys.api.workbench.v0.workbench_pb2.DownloadFileResponse]:
        """download a file"""
        pass


def add_WorkbenchServiceServicer_to_server(servicer: WorkbenchServiceServicer, server: grpc.Server) -> None: ...
