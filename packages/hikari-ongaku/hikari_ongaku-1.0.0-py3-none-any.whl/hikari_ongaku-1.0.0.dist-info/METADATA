Metadata-Version: 2.1
Name: hikari-ongaku
Version: 1.0.0
Summary: A simple voice library, for hikari.
Author-email: mplaty <contact@mplaty.com>
License: MIT License
        
        Copyright (c) 2023-present MPlatypus
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Project-URL: Documentation, https://ongaku.mplaty.com
Project-URL: Repository, https://github.com/MPlatypus/hikari-ongaku
Project-URL: Issues, https://github.com/MPlatypus/hikari-ongaku/issues
Project-URL: Changelog, https://ongaku.mplaty.com/changelog
Keywords: hikari,voice,voice handler,audio,discord,song
Classifier: Development Status :: 5 - Production/Stable
Classifier: Framework :: AsyncIO
Classifier: Intended Audience :: Developers
Classifier: Natural Language :: English
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3 :: Only
Requires-Python: <3.13,>=3.10.0
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: hikari ~=2.0.0.dev125
Requires-Dist: aiohttp ~=3.9
Requires-Dist: attrs ~=23.2.0
Requires-Dist: msgspec ~=0.18.6
Provides-Extra: dev
Requires-Dist: nox ==2024.4.15 ; extra == 'dev'
Requires-Dist: hikari ==2.0.0.dev125 ; extra == 'dev'
Provides-Extra: docs
Requires-Dist: black ==24.4.2 ; extra == 'docs'
Requires-Dist: mkdocs ==1.6.0 ; extra == 'docs'
Requires-Dist: mkdocs-autorefs ==1.0.1 ; extra == 'docs'
Requires-Dist: mkdocs-material[imaging] ==9.5.25 ; extra == 'docs'
Requires-Dist: mkdocs-material-extensions ==1.3.1 ; extra == 'docs'
Requires-Dist: mkdocstrings ==0.25.1 ; extra == 'docs'
Requires-Dist: mkdocstrings-python ==1.10.3 ; extra == 'docs'
Requires-Dist: Pygments ==2.18.0 ; extra == 'docs'
Requires-Dist: pymdown-extensions ==10.8.1 ; extra == 'docs'
Requires-Dist: PyYAML ==6.0.1 ; extra == 'docs'
Requires-Dist: pyyaml-env-tag ==0.1 ; extra == 'docs'
Requires-Dist: Markdown ==3.6 ; extra == 'docs'
Requires-Dist: MarkupSafe ==2.1.5 ; extra == 'docs'
Requires-Dist: mergedeep ==1.3.4 ; extra == 'docs'
Requires-Dist: griffe-inherited-docstrings ==1.0.0 ; extra == 'docs'
Provides-Extra: injection
Requires-Dist: hikari-arc ==1.3.4 ; extra == 'injection'
Requires-Dist: hikari-tanjun ==2.17.5 ; extra == 'injection'
Provides-Extra: speedups
Requires-Dist: aiohttp[speedups] ==3.9.5 ; extra == 'speedups'
Requires-Dist: orjson ==3.10.3 ; extra == 'speedups'

# Ongaku
A simple voice library for Hikari.

<div align="center">

[![PyPI](https://img.shields.io/pypi/v/hikari-ongaku)](https://pypi.org/project/hikari-ongaku)
[![Ruff](https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/charliermarsh/ruff/main/assets/badge/v1.json)](https://github.com/charliermarsh/ruff)
![Pyright](https://badgen.net/badge/Pyright/strict/2A6DB2)
[![Lavalink](https://badgen.net/badge/Lavalink/V4/ff624a)](https://lavalink.dev/)

</div>

Ongaku is a voice library that allows for playing tracks from a lavalink server, using the [Hikari discord API](https://hikari-py.dev/).

Ongaku tries to make everything as simple as possible for new users, but still having full access to add custom plugins and change (or create) session handlers.

## Current Features

- Player control
   - Playlists
   - Queuing
      - Adding songs.
      - Shuffling the queue.
      - Skipping a song or multiple.
      - Deleting via position, or a track object.
      - Clearing the queue.
   - Seeking/Reversing the tracks position.
   - Volume control
   - Setting requestors (users who requested the song.)
- Events
   - Ready Event (when a session is online.)
   - Player Update Event (when a player gets updated.)
   - Statistics Event (about the server.)
   - Track Start Event
   - Track End Event
   - Track Exception Event
   - Track Stuck Event
   - Empty Queue Event
   - Next Queue Event
- Sessions
   - BasicSessionHandler (Gives next available session)
- Others
   - Traces (for debugging code.)
   - Tests (Full test coverage.)

## Future Features

- More session handlers: so there is more methods to use the sessions you have provided.
- Cache: a method to store information, and fetch it later, from events and rest actions.
- Filters: support for filters, to change the audio you receive.
- Changing channels: support for moving to different channels, without leaving and rejoining.
- Session failures: More control, like seeing why a session failed and allow for reconnecting, or resetting attempts.

## Installation

To install ongaku, run the following command:

```sh
pip install -U hikari-ongaku
```

To check if ongaku has successfully installed or not, run the following command:

```sh
python3 -m ongaku
# On Windows you may need to run:
py -m ongaku
```

## Getting Started

for more about how to get started see the [docs](https://ongaku.mplaty.com/gs/)

```py
import typing
import hikari
import ongaku

# Create a GatewayBot (RESTBot's are not supported.)
bot = hikari.GatewayBot(token="...")

# Give ongaku the bot.
client = ongaku.Client(bot)

@bot.listen()
async def message_event(
    event: hikari.GuildMessageCreateEvent
) -> None:
   # Ignore anything that has no content, is not a human, or is not in a guild.
   if not event.content or not event.is_human or not event.guild_id:
      return

   # Ignore anything that is not the play command.
   if not event.content.startswith("!play"):
      return

   # Get the query from play "command".
   query = event.content.strip("!play ")

   # Make sure the user is in a valid voice channel.
   voice_state = bot.cache.get_voice_state(event.guild_id, event.author.id)
   if not voice_state or not voice_state.channel_id:
      await bot.rest.create_message(event.channel_id, "you are not in a voice channel.", reply=event.message)
      return

   # Fetch the track from the query string. (This searches just Youtube.)
   result = await client.rest.load_track(f"ytsearch:{query}")

   # If the song is `None` let them know it failed.
   if result is None:
      await bot.rest.create_message(event.channel_id, "No songs were found.", reply=event.message)
      return

   # Create a player (or if it already exists, grab that one!)
   player = client.create_player(event.guild_id)

   # Add the playlist, track or search result to the player.
   if isinstance(result, typing.Sequence):
      player.add(result[0])
   else:
      player.add(result)

   # Tell the player to start playing the song!
   await player.play()

   await bot.rest.create_message(event.channel_id, f"Playing {player.queue[0].info.title}", reply=event.message)
```

### Extensions

Ongaku has two extension built-in:

- [`ext.checker`](https://ongaku.mplaty.com/ext/checker/) - For checking if a song is a URL, or just a query.
- [`ext.injection`](https://ongaku.mplaty.com/ext/injection/) - For injecting player instances into commands.

### Issues and support

For general usage help or questions, see the `#ongaku` channel in the [hikari discord](https://discord.gg/hikari), if you have found a bug or have a feature request, feel free to [open an issue](https://github.com/MPlatypus/hikari-ongaku/issues/new).

### Links

- [**Documentation**](https://ongaku.mplaty.com)
- [**Examples**](https://github.com/MPlatypus/hikari-ongaku/tree/main/examples)
- [**License**](https://github.com/MPlatypus/hikari-ongaku/blob/main/LICENSE)
