# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from openobd_protocol import Authentication_pb2 as openobd__protocol_dot_Authentication__pb2
from openobd_protocol import BasicResponse_pb2 as openobd__protocol_dot_BasicResponse__pb2
from openobd_protocol import BusConfiguration_pb2 as openobd__protocol_dot_BusConfiguration__pb2
from openobd_protocol import Status_pb2 as openobd__protocol_dot_Status__pb2


class RemoteDiagnosticServicesStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.authenticate = channel.unary_unary(
                '/com.jifeline.OpenOBD.Protocol.RemoteDiagnosticServices/authenticate',
                request_serializer=openobd__protocol_dot_Authentication__pb2.AuthenticationRequest.SerializeToString,
                response_deserializer=openobd__protocol_dot_Authentication__pb2.AuthenticationResponse.FromString,
                )
        self.configureBus = channel.unary_unary(
                '/com.jifeline.OpenOBD.Protocol.RemoteDiagnosticServices/configureBus',
                request_serializer=openobd__protocol_dot_BusConfiguration__pb2.BusConfiguration.SerializeToString,
                response_deserializer=openobd__protocol_dot_Status__pb2.Status.FromString,
                )
        self.configureBuses = channel.stream_unary(
                '/com.jifeline.OpenOBD.Protocol.RemoteDiagnosticServices/configureBuses',
                request_serializer=openobd__protocol_dot_BusConfiguration__pb2.BusConfiguration.SerializeToString,
                response_deserializer=openobd__protocol_dot_Status__pb2.Status.FromString,
                )
        self.refreshAuthentication = channel.unary_unary(
                '/com.jifeline.OpenOBD.Protocol.RemoteDiagnosticServices/refreshAuthentication',
                request_serializer=openobd__protocol_dot_Authentication__pb2.AuthenticationRequest.SerializeToString,
                response_deserializer=openobd__protocol_dot_Authentication__pb2.AuthenticationResponse.FromString,
                )
        self.finish = channel.unary_unary(
                '/com.jifeline.OpenOBD.Protocol.RemoteDiagnosticServices/finish',
                request_serializer=openobd__protocol_dot_BasicResponse__pb2.ServiceResult.SerializeToString,
                response_deserializer=openobd__protocol_dot_Status__pb2.Status.FromString,
                )


class RemoteDiagnosticServicesServicer(object):
    """Missing associated documentation comment in .proto file."""

    def authenticate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def configureBus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def configureBuses(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def refreshAuthentication(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def finish(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RemoteDiagnosticServicesServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'authenticate': grpc.unary_unary_rpc_method_handler(
                    servicer.authenticate,
                    request_deserializer=openobd__protocol_dot_Authentication__pb2.AuthenticationRequest.FromString,
                    response_serializer=openobd__protocol_dot_Authentication__pb2.AuthenticationResponse.SerializeToString,
            ),
            'configureBus': grpc.unary_unary_rpc_method_handler(
                    servicer.configureBus,
                    request_deserializer=openobd__protocol_dot_BusConfiguration__pb2.BusConfiguration.FromString,
                    response_serializer=openobd__protocol_dot_Status__pb2.Status.SerializeToString,
            ),
            'configureBuses': grpc.stream_unary_rpc_method_handler(
                    servicer.configureBuses,
                    request_deserializer=openobd__protocol_dot_BusConfiguration__pb2.BusConfiguration.FromString,
                    response_serializer=openobd__protocol_dot_Status__pb2.Status.SerializeToString,
            ),
            'refreshAuthentication': grpc.unary_unary_rpc_method_handler(
                    servicer.refreshAuthentication,
                    request_deserializer=openobd__protocol_dot_Authentication__pb2.AuthenticationRequest.FromString,
                    response_serializer=openobd__protocol_dot_Authentication__pb2.AuthenticationResponse.SerializeToString,
            ),
            'finish': grpc.unary_unary_rpc_method_handler(
                    servicer.finish,
                    request_deserializer=openobd__protocol_dot_BasicResponse__pb2.ServiceResult.FromString,
                    response_serializer=openobd__protocol_dot_Status__pb2.Status.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'com.jifeline.OpenOBD.Protocol.RemoteDiagnosticServices', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RemoteDiagnosticServices(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def authenticate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.jifeline.OpenOBD.Protocol.RemoteDiagnosticServices/authenticate',
            openobd__protocol_dot_Authentication__pb2.AuthenticationRequest.SerializeToString,
            openobd__protocol_dot_Authentication__pb2.AuthenticationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def configureBus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.jifeline.OpenOBD.Protocol.RemoteDiagnosticServices/configureBus',
            openobd__protocol_dot_BusConfiguration__pb2.BusConfiguration.SerializeToString,
            openobd__protocol_dot_Status__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def configureBuses(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/com.jifeline.OpenOBD.Protocol.RemoteDiagnosticServices/configureBuses',
            openobd__protocol_dot_BusConfiguration__pb2.BusConfiguration.SerializeToString,
            openobd__protocol_dot_Status__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def refreshAuthentication(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.jifeline.OpenOBD.Protocol.RemoteDiagnosticServices/refreshAuthentication',
            openobd__protocol_dot_Authentication__pb2.AuthenticationRequest.SerializeToString,
            openobd__protocol_dot_Authentication__pb2.AuthenticationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def finish(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.jifeline.OpenOBD.Protocol.RemoteDiagnosticServices/finish',
            openobd__protocol_dot_BasicResponse__pb2.ServiceResult.SerializeToString,
            openobd__protocol_dot_Status__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
