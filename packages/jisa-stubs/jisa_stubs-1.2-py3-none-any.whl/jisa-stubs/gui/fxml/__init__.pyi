
import sys
if sys.version_info >= (3, 8):
    from typing import Protocol
else:
    from typing_extensions import Protocol

import javafx.scene.control
import javafx.scene.layout
import typing



class TaskListWindow:
    pane: javafx.scene.layout.BorderPane = ...
    list: javafx.scene.control.ListView = ...
    def __init__(self): ...
    @typing.overload
    def addTask(self, string: str) -> 'TaskListWindow.Task': ...
    @typing.overload
    def addTask(self, string: str, double: float) -> 'TaskListWindow.Task': ...
    def close(self) -> None: ...
    @staticmethod
    def create(string: str) -> 'TaskListWindow': ...
    def getPane(self) -> javafx.scene.layout.Pane: ...
    def hide(self) -> None: ...
    def show(self) -> None: ...
    class Task:
        @typing.overload
        def __init__(self, taskListWindow: 'TaskListWindow', string: str, progressIndicator: javafx.scene.control.ProgressIndicator, label: javafx.scene.control.Label): ...
        @typing.overload
        def __init__(self, taskListWindow: 'TaskListWindow', string: str, progressIndicator: javafx.scene.control.ProgressIndicator, label: javafx.scene.control.Label, double: float): ...
        def setActive(self) -> None: ...
        def setComplete(self) -> None: ...
        def setValue(self, double: float) -> None: ...


class __module_protocol__(Protocol):
    # A module protocol which reflects the result of ``jp.JPackage("jisa.gui.fxml")``.

    TaskListWindow: typing.Type[TaskListWindow]
