
import sys
if sys.version_info >= (3, 8):
    from typing import Protocol
else:
    from typing_extensions import Protocol

import java.io
import javafx.scene.paint
import typing



class SVG:
    def __init__(self, double: float, double2: float): ...
    def add(self, sVGElement: 'SVGElement') -> None: ...
    @typing.overload
    def output(self, printStream: java.io.PrintStream) -> None: ...
    @typing.overload
    def output(self, string: str) -> None: ...
    def toString(self) -> str: ...

class SVGElement:
    def __init__(self, string: str): ...
    def add(self, sVGElement: 'SVGElement') -> None: ...
    def output(self, printStream: java.io.PrintStream) -> None: ...
    @typing.overload
    def setAttribute(self, string: str, double: float) -> 'SVGElement': ...
    @typing.overload
    def setAttribute(self, string: str, string2: str) -> 'SVGElement': ...
    @typing.overload
    def setDash(self, *double: float) -> 'SVGElement': ...
    @typing.overload
    def setDash(self, *string: str) -> 'SVGElement': ...
    @typing.overload
    def setFillColour(self, string: str) -> 'SVGElement': ...
    @typing.overload
    def setFillColour(self, color: javafx.scene.paint.Color) -> 'SVGElement': ...
    @typing.overload
    def setStrokeColour(self, string: str) -> 'SVGElement': ...
    @typing.overload
    def setStrokeColour(self, color: javafx.scene.paint.Color) -> 'SVGElement': ...
    def setStrokeWidth(self, double: float) -> 'SVGElement': ...
    def setStyle(self, string: str, string2: str) -> 'SVGElement': ...

class SVGCircle(SVGElement):
    def __init__(self, double: float, double2: float, double3: float): ...

class SVGLine(SVGElement):
    def __init__(self, double: float, double2: float, double3: float, double4: float): ...

class SVGPath(SVGElement):
    def __init__(self, string: str): ...

class SVGSquare(SVGElement):
    def __init__(self, double: float, double2: float, double3: float): ...

class SVGText(SVGElement):
    def __init__(self, double: float, double2: float, string: str, string2: str): ...

class SVGCross(SVGPath):
    def __init__(self, double: float, double2: float, double3: float): ...

class SVGTriangle(SVGPath):
    def __init__(self, double: float, double2: float, double3: float): ...


class __module_protocol__(Protocol):
    # A module protocol which reflects the result of ``jp.JPackage("jisa.gui.svg")``.

    SVG: typing.Type[SVG]
    SVGCircle: typing.Type[SVGCircle]
    SVGCross: typing.Type[SVGCross]
    SVGElement: typing.Type[SVGElement]
    SVGLine: typing.Type[SVGLine]
    SVGPath: typing.Type[SVGPath]
    SVGSquare: typing.Type[SVGSquare]
    SVGText: typing.Type[SVGText]
    SVGTriangle: typing.Type[SVGTriangle]
