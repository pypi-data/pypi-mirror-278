
import sys
if sys.version_info >= (3, 8):
    from typing import Protocol
else:
    from typing_extensions import Protocol

import jisa.addresses
import jisa.control
import jisa.devices.interfaces
import jisa.enums
import jisa.gui
import jisa.visa
import jpype
import typing



class K3390(jisa.visa.VISADevice, jisa.devices.interfaces.FunctionGenerator):
    def __init__(self, address: jisa.addresses.Address): ...
    def applyChanges(self, field: jisa.gui.Field[int], field2: jisa.gui.Field[int], field3: jisa.gui.Field[float], field4: jisa.gui.Field[float], field5: jisa.gui.Field[float], field6: jisa.gui.Field[float]) -> jisa.control.SRunnable: ...
    @staticmethod
    def getDescription() -> str: ...
    @staticmethod
    def main(stringArray: typing.Union[typing.List[str], jpype.JArray]) -> None: ...
    def readChanges(self, waveformParam: jisa.devices.interfaces.FunctionGenerator.WaveformParam) -> jisa.devices.interfaces.FunctionGenerator.WaveformParam: ...
    def readDutyCycle(self) -> float: ...
    def readFrequency(self) -> float: ...
    def readFunction(self) -> jisa.enums.WaveForm: ...
    def readVos(self) -> float: ...
    def readVpp(self) -> float: ...
    def setDutyCycle(self) -> None: ...
    def setDutyCycleLevel(self, double: float) -> None: ...
    def setFrequency(self) -> None: ...
    def setFrequencyValue(self, double: float, oscMode: jisa.enums.OscMode) -> None: ...
    def setFunction(self, waveForm: jisa.enums.WaveForm) -> None: ...
    def setFunctionValue(self, waveForm: jisa.enums.WaveForm) -> None: ...
    def setSin(self) -> None: ...
    def setVos(self) -> None: ...
    def setVpp(self) -> None: ...
    def setVppVosValues(self, double: float, double2: float) -> None: ...
    def turnOFF(self) -> None: ...
    def turnON(self) -> None: ...


class __module_protocol__(Protocol):
    # A module protocol which reflects the result of ``jp.JPackage("jisa.devices.funcgen")``.

    K3390: typing.Type[K3390]
