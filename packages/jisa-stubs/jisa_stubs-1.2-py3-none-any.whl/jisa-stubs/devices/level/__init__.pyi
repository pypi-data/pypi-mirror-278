
import sys
if sys.version_info >= (3, 8):
    from typing import Protocol
else:
    from typing_extensions import Protocol

import java.lang
import java.util
import jisa.addresses
import jisa.devices.interfaces
import jisa.visa
import typing



class ILM200(jisa.visa.VISADevice, jisa.devices.interfaces.LevelMeter):
    def __init__(self, address: jisa.addresses.Address): ...
    def getChannels(self) -> java.util.List[jisa.devices.interfaces.LevelMeter]: ...
    @staticmethod
    def getDescription() -> str: ...
    def getIDN(self) -> str: ...
    @typing.overload
    def getLevel(self) -> float: ...
    @typing.overload
    def getLevel(self, int: int) -> float: ...
    @typing.overload
    def getName(self, int: int) -> str: ...
    @typing.overload
    def getName(self) -> str: ...
    def getNumChannels(self) -> int: ...
    _getSubInstruments_0__I = typing.TypeVar('_getSubInstruments_0__I', bound=jisa.devices.interfaces.Instrument)  # <I>
    @typing.overload
    def getSubInstruments(self, class_: typing.Type[_getSubInstruments_0__I]) -> java.util.List[_getSubInstruments_0__I]: ...
    @typing.overload
    def getSubInstruments(self) -> java.util.List[jisa.devices.interfaces.Instrument]: ...
    def setFastRate(self, int: int, boolean: bool) -> None: ...
    def setMode(self, mode: 'ILM200.Mode') -> None: ...
    class Mode(java.lang.Enum['ILM200.Mode']):
        LOCAL_LOCKED: typing.ClassVar['ILM200.Mode'] = ...
        REMOTE_LOCKED: typing.ClassVar['ILM200.Mode'] = ...
        LOCAL_UNLOCKED: typing.ClassVar['ILM200.Mode'] = ...
        REMOTE_UNLOCKED: typing.ClassVar['ILM200.Mode'] = ...
        _valueOf_0__T = typing.TypeVar('_valueOf_0__T', bound=java.lang.Enum)  # <T>
        @typing.overload
        @staticmethod
        def valueOf(class_: typing.Type[_valueOf_0__T], string: str) -> _valueOf_0__T: ...
        @typing.overload
        @staticmethod
        def valueOf(string: str) -> 'ILM200.Mode': ...
        @staticmethod
        def values() -> typing.MutableSequence['ILM200.Mode']: ...


class __module_protocol__(Protocol):
    # A module protocol which reflects the result of ``jp.JPackage("jisa.devices.level")``.

    ILM200: typing.Type[ILM200]
