
import sys
if sys.version_info >= (3, 8):
    from typing import Protocol
else:
    from typing_extensions import Protocol

import java.util
import jisa.addresses
import jisa.devices.interfaces
import jisa.visa
import typing



class ADRelay(jisa.visa.VISADevice, jisa.devices.interfaces.MSwitch):
    def __init__(self, address: jisa.addresses.Address): ...
    def getChannels(self) -> java.util.List[jisa.devices.interfaces.Switch]: ...
    @staticmethod
    def getDescription() -> str: ...
    @typing.overload
    def getName(self, int: int) -> str: ...
    @typing.overload
    def getName(self) -> str: ...
    def getNumChannels(self) -> int: ...
    @typing.overload
    def isOn(self, int: int) -> bool: ...
    @typing.overload
    def isOn(self) -> bool: ...
    @typing.overload
    def turnOff(self) -> None: ...
    @typing.overload
    def turnOff(self, int: int) -> None: ...
    @typing.overload
    def turnOn(self) -> None: ...
    @typing.overload
    def turnOn(self, int: int) -> None: ...

class MFF101(jisa.visa.VISADevice, jisa.devices.interfaces.Switch):
    def __init__(self, address: jisa.addresses.Address): ...
    def isOn(self) -> bool: ...
    def turnOff(self) -> None: ...
    def turnOn(self) -> None: ...


class __module_protocol__(Protocol):
    # A module protocol which reflects the result of ``jp.JPackage("jisa.devices.relay")``.

    ADRelay: typing.Type[ADRelay]
    MFF101: typing.Type[MFF101]
