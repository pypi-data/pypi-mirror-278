
import sys
if sys.version_info >= (3, 8):
    from typing import Protocol
else:
    from typing_extensions import Protocol

import jisa.addresses
import jisa.devices.interfaces
import jisa.visa
import typing



class Pegasus(jisa.visa.VISADevice, jisa.devices.interfaces.ProbeStation):
    def __init__(self, address: jisa.addresses.Address): ...
    def continMovement(self, string: str, double: float) -> None: ...
    @staticmethod
    def getDescription() -> str: ...
    def getGrossUpDistance(self) -> float: ...
    def getIDN(self) -> str: ...
    def getLightOn(self) -> bool: ...
    def getLockDistance(self) -> float: ...
    def getRotation(self) -> float: ...
    def getStatus(self) -> 'Pegasus.Status': ...
    def getXPosition(self) -> float: ...
    def getXYSpeed(self) -> float: ...
    def getYPosition(self) -> float: ...
    def getZPosition(self) -> float: ...
    def getZSpeed(self) -> float: ...
    def goLoadPosition(self) -> None: ...
    def goProbingZoneCentre(self) -> None: ...
    def isGrossLocked(self) -> bool: ...
    def isLocked(self) -> bool: ...
    def setGrossUp(self, boolean: bool) -> None: ...
    def setGrossUpDistance(self, double: float) -> None: ...
    def setLightOn(self, boolean: bool) -> None: ...
    def setLockDistance(self, double: float) -> None: ...
    def setLocked(self, boolean: bool) -> None: ...
    def setRotation(self, double: float) -> None: ...
    def setXPosition(self, double: float) -> None: ...
    def setXYPosition(self, double: float, double2: float) -> None: ...
    def setXYSpeed(self, double: float) -> None: ...
    def setYPosition(self, double: float) -> None: ...
    def setZPosition(self, double: float) -> None: ...
    def setZSpeed(self, double: float) -> None: ...
    class Status:
        isFault1: bool = ...
        isFault2: bool = ...
        isLiftedGross: bool = ...
        isMoving: bool = ...
        isLiftedFine: bool = ...
        isEdgeSensorOpen: bool = ...
        isSRQ: bool = ...
        isFaultCondition: bool = ...
        def __init__(self, string: str): ...


class __module_protocol__(Protocol):
    # A module protocol which reflects the result of ``jp.JPackage("jisa.devices.probestation")``.

    Pegasus: typing.Type[Pegasus]
