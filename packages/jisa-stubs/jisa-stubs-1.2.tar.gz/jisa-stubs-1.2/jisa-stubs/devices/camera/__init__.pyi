
import sys
if sys.version_info >= (3, 8):
    from typing import Protocol
else:
    from typing_extensions import Protocol

import java.awt.image
import java.util
import jisa.addresses
import jisa.devices.interfaces
import typing



class Webcam(jisa.devices.interfaces.Camera):
    @typing.overload
    def __init__(self): ...
    @typing.overload
    def __init__(self, string: str): ...
    @typing.overload
    def __init__(self, address: jisa.addresses.Address): ...
    def close(self) -> None: ...
    def getAddress(self) -> jisa.addresses.Address: ...
    def getBufferedImage(self) -> java.awt.image.BufferedImage: ...
    def getFrameRate(self) -> float: ...
    def getIDN(self) -> str: ...
    def getMode(self) -> jisa.devices.interfaces.Camera.Mode: ...
    def getModes(self) -> java.util.List[jisa.devices.interfaces.Camera.Mode]: ...
    def getName(self) -> str: ...
    def isOn(self) -> bool: ...
    def setMode(self, mode: jisa.devices.interfaces.Camera.Mode) -> None: ...
    def turnOff(self) -> None: ...
    def turnOn(self) -> None: ...


class __module_protocol__(Protocol):
    # A module protocol which reflects the result of ``jp.JPackage("jisa.devices.camera")``.

    Webcam: typing.Type[Webcam]
