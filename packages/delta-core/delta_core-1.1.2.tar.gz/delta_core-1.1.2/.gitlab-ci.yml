stages:
  - validate
  - test
  - deploy


pep8_check_style:
  tags:
    - delta-docker
  image: python:3.11
  stage: validate
  before_script:
    - pip install -r requirements.txt -r requirements-dev.txt
  script:
    - pycodestyle --show-source --show-pep8  --exclude=delta/alembic/*  .


check_dependency_licenses:
  tags:
    - delta-docker
  image: python:3.11
  stage: validate
  before_script:
    - pip install --extra-index-url https://${TWINE_USERNAME}:${TWINE_PASSWORD}@repository.gael-systems.com/repository/python-gael/simple -r requirements.txt -r requirements-dev.txt
  script:
    - liccheck -s liccheck.ini -r requirements.txt

unit_tests_3.11:
  tags:
    - delta-docker
  image: python:3.11
  stage: test
  before_script:
    - pip install --extra-index-url https://${TWINE_USERNAME}:${TWINE_PASSWORD}@repository.gael-systems.com/repository/python-gael/simple -r requirements.txt -r requirements-dev.txt
    - python -m build
  script:
    - coverage run
    - coverage xml -o coverage.xml
    - coverage report
    - coverage-badge
  coverage: '/TOTAL.+ ([0-9]{1,3}%)/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml

release:
  tags:
    - delta-docker
  image: python:3.11
  stage: deploy
  before_script:
    - pip install -r requirements-dev.txt
    - pip install --extra-index-url https://${TWINE_USERNAME}:${TWINE_PASSWORD}@repository.gael-systems.com/repository/python-gael/simple -r requirements.txt
    - BUILD_VERSION=$CI_COMMIT_TAG python -m build
  script:
    - pip install dist/delta_core-$CI_COMMIT_TAG.tar.gz
    - python -m twine upload dist/*
  only:
    - tags

deploy_run_image:
  stage: deploy
  tags:
    - delta-docker
  image: docker:25.0.1-dind
  services:
    - docker:25.0.1-dind
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
    IMAGE_NAME: delta-run
  before_script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY/$CI_PROJECT_PATH/$IMAGE_NAME:latest || true
    - docker build --cache-from $CI_REGISTRY/$CI_PROJECT_PATH/$IMAGE_NAME:latest -t $CI_REGISTRY/$CI_PROJECT_PATH/$IMAGE_NAME:$CI_COMMIT_TAG -t $CI_REGISTRY/$CI_PROJECT_PATH/$IMAGE_NAME:latest .
    - docker push $CI_REGISTRY/$CI_PROJECT_PATH/$IMAGE_NAME:$CI_COMMIT_TAG
    - docker push $CI_REGISTRY/$CI_PROJECT_PATH/$IMAGE_NAME:latest
  only:
    - tags
