# LocalStack-Ext project configuration
[build-system]
requires = ['setuptools', 'wheel', 'plux>=1.10']
build-backend = "setuptools.build_meta"

[project]
name = "localstack-ext"
authors = [
        { name = "LocalStack Team", email = "info@localstack.cloud"}
]
description = "Extensions for LocalStack"
requires-python = ">=3.8"
dependencies = [
    "dill>=0.3.2",
    "dnslib>=0.9.10",
    "dnspython>=1.16.0",
    "packaging",
    "build",
    "plux>=1.10.0",
    "localstack-core>=3.4.1.dev,<3.5",
    "pyaes>=1.6.0",
    "python-jose[cryptography]>=3.1.0",
    "requests>=2.20.0",
    "python-dateutil>=2.8",
    "tabulate",
    # currently needed to load pro entrypoints, for the tree view
    "windows-curses;platform_system=='Windows'",
]
dynamic = ["version"]
license = {text = "Proprietary"}
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "License :: Other/Proprietary License",
    "Topic :: Internet",
    "Topic :: Software Development :: Testing",
    "Topic :: System :: Emulators",
]

[project.urls]
Homepage = "https://localstack.cloud"
Documentation = "https://docs.localstack.cloud"
Issues = "https://github.com/localstack/localstack/issues"

[project.optional-dependencies]
runtime = [
    "amazon.ion>=0.9.3",
    "avro>=1.11.0",
    "aws-encryption-sdk>=3.1.0",
    "dirtyjson>=1.0.7",
    "distro",
    "docker-registry-client>=0.5.2",
    "dulwich>=0.19.16",
    "graphql-core>=3.0.3",
    "janus>=0.5.0",
    # TODO: transitive dependency from community, can be removed (adjust range in community before)
    "jsonpatch>=1.32",
    "Js2Py>=0.71",
    "kafka-python",
    "kubernetes>=21.7.0",
    "libvirt-python==10.2.0",
    "localstack-core[runtime]>=3.4.1.dev,<3.5",
    "paho-mqtt>=1.5",
    "parquet[snappy]>=1.3.1",
    "parse>=1.19.0",
    "pg8000>=1.10",
    "postgres>=2.2.2",
    "postgresql-proxy>=0.2.0",
    "presto-python-client>=0.7.0",
    "pycdlib>=1.14.0",
    "pyftpdlib>=1.5.6",
    # hive_pure_sasl extra is necessary for python3.11
    "pyhive[hive_pure_sasl]>=0.7.0",
    # TODO remove this transitive dependency of pyhive[hive_pure_sasl] once extra detection works with latest setuptools
    "pure-sasl>=0.6.2",
    # TODO remove this transitive dependency of pyhive[hive_pure_sasl] once extra detection works with latest setuptools
    "thrift>=0.10.0",
    # TODO remove this transitive dependency of pyhive[hive_pure_sasl] once extra detection works with latest setuptools
    "thrift_sasl>=0.1.0",
    "pyion2json>=0.0.2",
    "PyJWT>=1.7.0",
    "pymysql",
    "mysql-replication",
    "pproxy-ext>=2.7.9",
    "pyqldb~=3.2",
    "python-snappy>=0.6",
    # TODO: transitive dependency from community, can be removed (adjust range in community before)
    "readerwriterlock>=1.0.7",
    "redis>=5.0",
    "rsa>=4.0",
    "sql-metadata>=2.6.0",
    "sqlglot[rs]",
    "srp-ext>=1.0.7.1",
    "testing.common.database>=1.1.0",
    "tornado>=6.0",
    "warrant-ext>=0.6.2",
    "websockets>=8.1",
    "Whoosh>=2.7.4"
]

test = [
    # test always needs the runtime to be able to run the tests
    "localstack-ext[runtime]",
    "aiohttp",
    "async-timeout",
    "awswrangler>=3.5.2",
    "aws_xray_sdk>=2.4.2",
    "coverage[toml]>=5.0.0",
    "coveralls>=3.3.1",
    "deepdiff>=5.5.0",
    "gremlinpython",
    "Js2Py>=0.71",
    "jws>=0.1.3",
    "localstack-core[test]>=3.4.1.dev,<3.5",
    "msal",
    "msal-extensions",
    "msrest",
    "neo4j",
    "nest-asyncio>=1.4.1",
    "paramiko~=2.11.0",
    "portalocker",
    "pre-commit>=3.5.0",
    # pyarrow: writing parquet test files
    "pyarrow",
    "PyAthena[Pandas]",
    "pymongo",
    "pymssql>=2.2.8",
    "pytest-instafail>=0.4.2",
    "ruff>=0.1.0",
    "redshift_connector",
    "stomp.py>=8.0.1",
    "mysql-connector-python",
    "python-terraform",
    "aws-cdk-lib>=2.88.0",
    "aws_cdk.aws_neptune_alpha",
    "aws_cdk.aws_redshift_alpha",
]

package = [
    "python-minifier"
]

typehint = [
    # typehint extends the test dev experience, so it needs the test dependencies
    "localstack-ext[test]",
    "boto3-stubs[acm,amplify,apigateway,apigatewayv2,appconfig,appsync,athena,autoscaling,backup,batch,ce,cloudcontrol,cloudformation,cloudfront,cloudtrail,cloudwatch,codecommit,cognito-identity,cognito-idp,dms,docdb,dynamodb,dynamodbstreams,ec2,ecr,ecs,efs,eks,elasticache,elasticbeanstalk,elbv2,emr,emr-serverless,es,events,firehose,fis,glacier,glue,iam,iot,iot-data,iotanalytics,iotwireless,kafka,kinesis,kinesisanalytics,kinesisanalyticsv2,kms,lakeformation,lambda,logs,mediaconvert,mediastore,mq,mwaa,neptune,opensearch,organizations,pi,qldb,qldb-session,rds,rds-data,redshift,redshift-data,resource-groups,resourcegroupstaggingapi,route53,route53resolver,s3,s3control,sagemaker,sagemaker-runtime,secretsmanager,serverlessrepo,servicediscovery,ses,sesv2,sns,sqs,ssm,sso-admin,stepfunctions,sts,timestream-query,timestream-write,transcribe,xray]"
]

[tool.setuptools]
include-package-data = false

[tool.setuptools.dynamic]
readme = {file = ["README.md"], content-type = "text/markdown"}
version = { file = "VERSION" }

[tool.setuptools.packages.find]
include = ["localstack_ext*"]
exclude = ["tests*"]

[tool.setuptools.package-data]
"*" = [
    "*.md",
    "VERSION"
]
"localstack_ext" = [
    "**/*.py.enc",
    "services/**/*.json",
    "services/**/endpoint_injection/*/localstack_wrapper.sh",
    "services/**/endpoint_injection/java/SdkV2DisableCertificateValidation.jar",
    "services/**/*.yml"
]

[tool.ruff]
# Always generate Python 3.8-compatible code.
target-version = "py38"
line-length = 100
exclude = [
    ".venv*",
    "venv*",
    "dist",
    "build",
    "target",
    "*.egg-info",
    ".filesystem",
    ".git"
    ]

[tool.ruff.lint]
ignore = [
    "B005", # TODO Using `.strip()` with multi-character strings is misleading
    "B006", # TODO Do not use mutable data structures for argument defaults
    "B007", # TODO Loop control variable x not used within loop body
    "B008", # TODO Do not perform function call `Queue` in argument defaults
    "B011", # TODO Do not `assert False` (`python -O` removes these calls), raise `AssertionError()`
    "B016", # TODO Cannot raise a literal. Did you intend to return it or raise an Exception?
    "B017", # TODO `pytest.raises(Exception)` should be considered evil
    "B018", # TODO Found useless expression. Either assign it to a variable or remove it.
    "B019", # TODO Use of `functools.lru_cache` or `functools.cache` on methods can lead to memory leaks
    "B020", # TODO Loop control variable `invalid_values` overrides iterable it iterates
    "B022", # TODO No arguments passed to `contextlib.suppress`. No exceptions will be suppressed and therefore this context manager is redundant
    "B023", # TODO Function definition does not bind loop variable `server`
    "B024", # TODO x is an abstract base class, but it has no abstract methods
    "B026", # TODO Star-arg unpacking after a keyword argument is strongly discouraged
    "B027", # TODO `Server.do_shutdown` is an empty method in an abstract base class, but has no abstract decorator
    "B028", # TODO No explicit `stacklevel` keyword argument found
    "B030", # TODO `except` handlers should only be exception classes or tuples of exception classes
    "B034", # TODO `re.sub` should pass `count` and `flags` as keyword arguments to avoid confusion due to unintuitive argument positions
    "B904", # TODO Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
    "C400", # TODO Unnecessary generator (rewrite as a `list` comprehension)
    "C401", # TODO Unnecessary generator (rewrite as a `set` comprehension)
    "C402", # TODO Unnecessary generator (rewrite as a `dict` comprehension)
    "C403", # TODO Unnecessary `list` comprehension (rewrite as a `set` comprehension)
    "C404", # TODO Unnecessary `list` comprehension (rewrite as a `dict` comprehension)
    "C405", # TODO Unnecessary `list` literal (rewrite as a `set` literal)
    "C408", # TODO Unnecessary `list` call (rewrite as a literal)
    "C411", # TODO Unnecessary `list` call (remove the outer call to `list()`)
    "C414", # TODO Unnecessary `list` call within `sorted()`
    "C416", # TODO Unnecessary `set` comprehension
    "C417", # TODO Replace `map` with a generator expression
    "C418", # TODO Unnecessary `dict` literal passed to `dict()` (remove the outer call to `dict()`)
    "C419", # TODO Unnecessary list comprehension.
    "C901", # TODO function is too complex
    "E402", # TODO Module level import not at top of file
    "E501", # E501 Line too long - handled by black, see https://docs.astral.sh/ruff/faq/#is-ruff-compatible-with-black
    "E721", # TODO Do not compare types, use `isinstance()`
    "E741", # TODO Ambiguous variable name: `l`
    "F403", # TODO `from localstack.services.cloudformation.models import *` used; unable to detect undefined names
    "F841", # TODO Local variable `e` is assigned to but never used
    "T201", # TODO `print` found
    "T203", # TODO `pprint` found
]
select = ["B", "C", "E", "F", "I", "W", "T", "B9"]

[tool.coverage.run]
relative_files = true
source = [
    "localstack_ext"
]
omit = [
    "*/localstack_ext/aws/api/*",
]
[tool.pytest.ini_options]
markers = [
    "aws_parity: test can be run standalone against AWS and has been validated before",
]
log_cli = false
log_level = "DEBUG"
log_cli_format = "%(asctime)s.%(msecs)03d %(levelname)5s --- [%(threadName)12s] %(name)-26s : %(message)s"
log_cli_date_format = "%Y-%m-%dT%H:%M:%S"

[tool.pip-tools]
# adding localstack-ext itself here because it is referenced in the pyproject.toml for stacking the extras
# adding localstack-core because we do not want to pin it in the requirements files
# pip, setuptools, and distribute are pip-tools defaults which need to be set again here
unsafe-package = ["localstack-ext", "localstack-core", "pip", "setuptools", "distribute"] # packages that should not be pinned
