name: Quality check and testing

# Summary of the workflow
# For every push to the main branch or any pull request:
# 1. Run cargo fmt: Check code formatting to ensure consistency.
# 2. Run cargo clippy: Check linting to improve code quality.
# 3. Run cargo test: Run all Rust-based tests.
# 4. Run pytest: Build wheels and run Python tests.

on:
  workflow_dispatch:

  pull_request:
    paths-ignore:
      - "docs/**"

  push:
    branches:
      - main
    paths-ignore:
      - "docs/**"

env:
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

jobs:
  rustfmt-format:
    name: Check code formatting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt

      - name: Run cargo fmt with check
        run: cargo fmt -- --check

  clippy-lint:
    name: Lint code with Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy

      - name: Run cargo clippy
        run: cargo clippy -- -D warnings

  run-rust-tests:
    name: Run Rust tests
    needs: clippy-lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Run cargo test
        run: cargo test --all-features -- --test-threads 1

  run-python-tests:
    name: Run Python tests
    needs: run-rust-tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip"

      - name: Install requirements
        run: |
          pip install --upgrade pip
          python -m venv .venv

      - name: Build development wheels
        uses: PyO3/maturin-action@v1
        with:
          command: develop
          sccache: "true"

      - name: Run tests
        run: |
          source .venv/bin/activate
          pip install -r requirements.txt
          python -m pytest

      - name: Lint code with Flake8
        run: |
          source .venv/bin/activate
          pip install -r requirements.txt
          python -m flake8
