[tool.poetry]
name = "python-search"
version = "0.50"
description = "Build your knowledge database in python and retrieve it efficiently"
authors = ["Jean Carlo Machado <machado.c.jean@gmail.com>"]

[tool.poetry.dependencies]
python = ">=3.10,<=3.13"
fire = ">=0.6"
pydantic = "^1.9.1"
PyYAML = "^6.0"
PySimpleGUI = "^4.60.1"
colorama = "^0.4.5"
certifi = ">=2022.6.1"
dill = "^0.3.5.1"
matplotlib = { version = "^3.5.2", optional = true }
pandas = { version = "*", optional = true }
# needs to be pinned down due to bug
numpy = { version = ">=1.24.3", optional = true }
pdoc3 = {version = "^0.10.0", optional = true}
# tensorflow cannot be installed in mac m1 chips
openai = {version=">=0.27.0"}
python-dateutil = "^2.8.2"
chardet = "^5.1.0"
colorful = "^0.5.5"
openapi = "^1.1.0"
schedule = "^1.2.1"
python-daemon = "^3.0.1"
chromadb = ">=0.5.0"
tiny-data-warehouse = ">=0.1.5"


[tool.poetry.dev-dependencies]
pytest = "^7.1.2"
pre-commit = "^2.20.0"
flake8 = "^5.0.4"


[tool.poetry.group.streamlitapps.dependencies]
plotly = "^5.14.1"
streamlit = "^1.22.0"
matplotlib = "^3.7.1"


[tool.setuptools.packages.find]
where = ["."]  # list of folders that contain the packages (["."] by default)
include = ["python_search"]  # package names should match these glob patterns (["*"] by default)
exclude = []  # exclude packages matching these glob patterns (empty by default)
namespaces = false  # to disable scanning PEP 420 namespaces (true by default)

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
pys = 'python_search.python_search_cli:main'
python_search = 'python_search.python_search_cli:main'
python_search_search = 'python_search.search.search_ui.kitty:main'
collect_input = 'python_search.apps.collect_input:main'
clipboard = 'python_search.apps.clipboard:main'
notify_send = 'python_search.apps.notification_ui:main'
browser = 'python_search.apps.browser:main'
run_entry = 'python_search.entry_runner:main'
run_key = 'python_search.entry_runner:main'
generic_data_collector = 'python_search.data_collector:GenericDataCollector.initialize'
ps_container = 'python_search.container:start'
ps_webapi = 'python_search.sdk.web_api_sdk:main'
aps_webapi = 'python_search.sdk.web_api_sdk:main'
wrap_log_command = {reference = "wrap_log_command.sh", type = "file", extras = []}
chat_gpt = 'python_search.chat_gpt:main'
term_ui = 'python_search.search.search_ui.terminal_ui:main'
entry_builder = 'python_search.entry_capture.entry_inserter_gui.entry_inserter_gui:main'
prompt_editor = 'python_search.apps.prompt_editor:main'
entry_embeddings = 'python_search.next_item_predictor.features.entry_embeddings:main'
entries_editor = 'python_search.entry_capture.entries_editor:main'
register_new_launch_ui = 'python_search.entry_capture.entry_inserter_gui.register_new_gui:launch_ui'
share_entry = 'python_search.share_entry:main'
error_panel = 'python_search.error.error_pane:main'
google_it = 'python_search.apps.google_it:main'
recent_keys = 'python_search.events.latest_used_entries:main'
entry_generator = 'python_search.entry_generator:main'
ps_text_next_predictor = 'python_search.textual_next_predictor.predictor:main'

