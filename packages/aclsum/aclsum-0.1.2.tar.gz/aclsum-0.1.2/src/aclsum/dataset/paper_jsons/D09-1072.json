{
    "paper_id": "D09-1072",
    "header": {
        "generated_with": "S2ORC 1.0.0",
        "date_generated": "2023-06-16T11:56:16.084153Z"
    },
    "title": "A Simple Unsupervised Learner for POS Disambiguation Rules Given Only a Minimal Lexicon",
    "authors": [
        {
            "first": "Qiuye",
            "middle": [],
            "last": "Zhao",
            "suffix": "",
            "affiliation": {
                "laboratory": "",
                "institution": "University of Pennsylvania",
                "location": {}
            },
            "email": ""
        },
        {
            "first": "Mitch",
            "middle": [],
            "last": "Marcus",
            "suffix": "",
            "affiliation": {
                "laboratory": "",
                "institution": "University of Pennsylvania",
                "location": {}
            },
            "email": ""
        }
    ],
    "year": "",
    "venue": null,
    "identifiers": {},
    "abstract": "We propose a new model for unsupervised POS tagging based on linguistic distinctions between open and closed-class items. Exploiting notions from current linguistic theory, the system uses far less information than previous systems, far simpler computational methods, and far sparser descriptions in learning contexts. By applying simple language acquisition techniques based on counting, the system is given the closed-class lexicon, acquires a large open-class lexicon and then acquires disambiguation rules for both. This system achieves a 20% error reduction for POS tagging over state-of-the-art unsupervised systems tested under the same conditions, and achieves comparable accuracy when trained with much less prior information.",
    "pdf_parse": {
        "paper_id": "D09-1072",
        "_pdf_hash": "",
        "abstract": [
            {
                "text": "We propose a new model for unsupervised POS tagging based on linguistic distinctions between open and closed-class items. Exploiting notions from current linguistic theory, the system uses far less information than previous systems, far simpler computational methods, and far sparser descriptions in learning contexts. By applying simple language acquisition techniques based on counting, the system is given the closed-class lexicon, acquires a large open-class lexicon and then acquires disambiguation rules for both. This system achieves a 20% error reduction for POS tagging over state-of-the-art unsupervised systems tested under the same conditions, and achieves comparable accuracy when trained with much less prior information.",
                "cite_spans": [],
                "ref_spans": [],
                "eq_spans": [],
                "section": "Abstract",
                "sec_num": null
            }
        ],
        "body_text": [
            {
                "text": "All recent research on unsupervised tagging, as well as the majority of work on supervised taggers, views POS tagging as a sequential labeling problem and treats all POS tags, both closed-and open-class, as roughly equivalent. In this work we explore a different understanding of the tagging problem, viewing it as a process of first identifying functional syntactic contexts, which are flagged by closed-class items, and then using these functional contexts to determine the POS labels. This disambiguation model differs from most previous work in three ways: 1) it uses different encodings over two distinct domains (roughly open-and closed-class words) with complementary distribution (and so decodes separately); 2) it is deterministic and 3) it is non-lexicalized. By learning disambiguation models for open-and closed-classes separately, we found that the deterministic, rulebased model can be learned from unannotated data by a simple strategy of selecting a rule in each appropriate context with the highest count.",
                "cite_spans": [],
                "ref_spans": [],
                "eq_spans": [],
                "section": "Introduction",
                "sec_num": "1"
            },
            {
                "text": "In contrast to this, most previous work on unsupervised tagging (especially for English) concentrates on improving the parameter estimation techniques for training statistical disambiguation models from unannotated data. For example, (Smith&Eisner, 2005) proposes contrastive estimation (CE) for log-linear models (CRF), achieving the current state-of-the-art performance of 90.4%; (Goldwater&Griffiths, 2007) applies a Bayesian approach to improve maximumlikelihood estimation (MLE) for training generative models (HMM). In the main experiments of both of these papers, the disambiguation model is learned, but the algorithms assume a complete knowledge of the lexicon with all possible tags for each word. In this work, we propose making such a large lexicon unnecessary by learning the bulk of the lexicon along with learning a disambiguation model.",
                "cite_spans": [
                    {
                        "start": 234,
                        "end": 254,
                        "text": "(Smith&Eisner, 2005)",
                        "ref_id": null
                    },
                    {
                        "start": 382,
                        "end": 409,
                        "text": "(Goldwater&Griffiths, 2007)",
                        "ref_id": null
                    }
                ],
                "ref_spans": [],
                "eq_spans": [],
                "section": "Introduction",
                "sec_num": "1"
            },
            {
                "text": "Little previous work has been done on this natural and simple idea because the clusters found by previous induction schemes are not in line with the lexical categories that we care about. (Chan, 2008) is perhaps the first with the intention of generating \"a discrete set of clusters.\" By applying similar techniques to (Chan, 2008) , which we discuss later, we can generate clusters that closely approximate the central open-class lexical categories, a major advance, but we still require a closed-class lexicon specifying possible tags for these words. This asymmetry in our lexicon acquisition model conforms with our understanding of natural language as structured data over two distinct domains with complementary distribution: open-class (lexical) and closed-class (functional).",
                "cite_spans": [
                    {
                        "start": 188,
                        "end": 200,
                        "text": "(Chan, 2008)",
                        "ref_id": "BIBREF1"
                    },
                    {
                        "start": 319,
                        "end": 331,
                        "text": "(Chan, 2008)",
                        "ref_id": "BIBREF1"
                    }
                ],
                "ref_spans": [],
                "eq_spans": [],
                "section": "Introduction",
                "sec_num": "1"
            },
            {
                "text": "Provided with only a closed-class lexicon of 288 words, about 0.6% of the full lexicon, the system acquires a large open-class lexicon and then acquires disambiguation rules for both closed-and open-class words, achieving a tagging accuracy of 90.6% for a 24k dataset, as high as the current state-of-the-art (90.4%) achieved with a complete dictionary. In the test condition where both algorithms are provided with a full lexicon, and are trained and evaluated over the same 96k dataset, we reduce the tagging error by up to 20%.",
                "cite_spans": [],
                "ref_spans": [],
                "eq_spans": [],
                "section": "Introduction",
                "sec_num": "1"
            },
            {
                "text": "In Section 2 we explain our understanding of the POS tagging problem in detail and define the notions of functional context and open-and closedclass elements. Then we will introduce our methods for acquiring the lexicon (Section 3) and learning disambiguation models (Section 4, 5 and 6) step by step. Results are reported in Section 7 followed by Section 8 which discusses the linguistic motivation behind this work and the simplicity and efficiency of our model.",
                "cite_spans": [],
                "ref_spans": [],
                "eq_spans": [],
                "section": "Introduction",
                "sec_num": "1"
            },
            {
                "text": "In most work on both unsupervised and supervised problem, tagging is viewed as a sequential labeling problem. In this work, however, we would like to explore another view on tagging especially considering language as structured data.",
                "cite_spans": [],
                "ref_spans": [],
                "eq_spans": [],
                "section": "The Tagging Problem",
                "sec_num": "2"
            },
            {
                "text": "The engineering concept of POS tags derives from the linguistic notion of syntactic category which specifies the combinatorial properties of a word in an underlying (syntactic) structure. Given the parse structure for a given word sequence which breaks the input into recursive functional domains such as IP, VP and NP, the POS tag of each word can be directly inferred. Of course, assuming a pre-parsed structure as input to POS tagging is somewhat ridiculous, but it strongly motivates us to highlight the features of structural information for POS tagging. Without resorting to any intermediate representations richer than the input string, we propose for engineering purposes to capture the features of interest for POS tagging by the functional items in language themselves. Then tagging is considered to be a process of identifying the functional contexts (functional items in context) in which the categorical property of the target item can be inferred.",
                "cite_spans": [],
                "ref_spans": [],
                "eq_spans": [],
                "section": "The Tagging Problem",
                "sec_num": "2"
            },
            {
                "text": "Following ideas in current linguistic theory discussed in Section 8, we observe that the functional categories and some morphological endings serve as markers of the functional domains themselves (discussed above) and sit abstractly at the edge of those domains; the open-class (lexical) items must sit within appropriate functional domains. More specifically, although long distance dependencies are not at all rare, for a token in sequence, we only consider adjacent closed-class words and the verbal categorical feature (but not morphology) as functional contexts, the core concept in our disambiguation model.",
                "cite_spans": [],
                "ref_spans": [],
                "eq_spans": [],
                "section": "The Tagging Problem",
                "sec_num": "2"
            },
            {
                "text": "Our system uses five open-class categories: three basic lexical categories verb, noun and adverb, and two derived Nominal categories (the two kinds of participles in English); and consider all other words not included in those categories to be closed-class items.",
                "cite_spans": [],
                "ref_spans": [],
                "eq_spans": [],
                "section": "The Tagging Problem",
                "sec_num": "2"
            },
            {
                "text": "Overall, for the task of unsupervised tagging, we use a rule-based disambiguation model containing disambiguation rules conditioned on functional contexts, and the model is learned from unannotated data constrained by much less lexical knowledge than most previous work, namely the closed-class lexicon as introduced below.",
                "cite_spans": [],
                "ref_spans": [],
                "eq_spans": [],
                "section": "The Tagging Problem",
                "sec_num": "2"
            },
            {
                "text": "A dictionary containing all possible tags for each word is very useful to constrain the unsupervised learning of a POS disambiguation model, and in most previous work, a full lexicon computed from the WSJ corpus (the source of both training and test datasets) is used for both learning and tagging. Since a full lexicon is not a reasonable resource, we aim to limit the required knowledge to functional (closed-class) words only.",
                "cite_spans": [],
                "ref_spans": [],
                "eq_spans": [],
                "section": "Closed-class Lexicon",
                "sec_num": "2.1"
            },
            {
                "text": "It is hard to define functional words in a linguistically strict sense, but this category is close to the notion within the engineering field of NLP of closed-class words, classes of words that are not open for new members. From the engineering point of view, this implies that a closed class has a finite and static number of members, so its members can be listed once and for all.",
                "cite_spans": [],
                "ref_spans": [],
                "eq_spans": [],
                "section": "Closed-class Lexicon",
                "sec_num": "2.1"
            },
            {
                "text": "For English, lists of closed-class categories such as preposition, pronoun or even degree adverb, are obtainable resources, but this is not necessarily the case for other languages. In this paper, we leave the automatic acquisition of a closed-class lexicon for future work. For experiments in this work, we automatically compute a closed-class lexicon from the WSJ treebank 00-24 sections by picking out those words that are labeled predominantly with closed-class tags 1 . For each word selected as a closed-class word, all possible tags encountered more than twice in the WSJ corpus are reserved in the closed-class lexicon, so closed-class words may also have open-class tags in our data set, a source of noise in our results. As a core part of language, this closed-class lexicon containing 288 entries, about 0.6% of the full lexicon by types, should be invariant over various genres, which is confirmed in experiments on both WSJ and Brown corpus 2 .",
                "cite_spans": [],
                "ref_spans": [],
                "eq_spans": [],
                "section": "Closed-class Lexicon",
                "sec_num": "2.1"
            },
            {
                "text": "The 45 tags in the Penn Tagset (Marcus et al., 2003) contain more information than just basic lexical categories. In recent work on unsupervised learning of POS taggers following (Smith&Eisner, 2005) , the Penn tagset is reduced to 17 tags which nicely improves the tagging performance.",
                "cite_spans": [
                    {
                        "start": 31,
                        "end": 52,
                        "text": "(Marcus et al., 2003)",
                        "ref_id": null
                    },
                    {
                        "start": 179,
                        "end": 199,
                        "text": "(Smith&Eisner, 2005)",
                        "ref_id": null
                    }
                ],
                "ref_spans": [],
                "eq_spans": [],
                "section": "Tagset",
                "sec_num": "2.2"
            },
            {
                "text": "Based on our view of POS tags as local markers of underlying syntactic structure, we derive 27 tags from a feature-based analysis of the original Penn tagset. The main principle for reduction is that we collapse any two tags which are not distinguishable by structural features; such features include +/-N, +/-V for predication and +/-wh, +/-en for movement 3 . For example, under our analysis, the tag 'VBG' has the features [+V, +N, -tense,en], tag 'VBD' [+V, +tense(past), -en], and 'VB' [+V, -tense(finite), -en]. However, since we do not consider the tense feature to be a structural feature, we do not distinguish 'VBD' from 'VB'; since N(ominal) is a structural feature, 'VBG' remains distinct from both 'VBD' and 'VB'. The 27 tags do not cover all cases of ambiguities of closedclass words in the original Penn tagset. Most notably, adjectives are not separated from nouns.",
                "cite_spans": [],
                "ref_spans": [],
                "eq_spans": [],
                "section": "Tagset",
                "sec_num": "2.2"
            },
            {
                "text": "This reduction naturally follows the crucial properties of our disambiguation model. First of all, our model is not lexicalized, so it can only capture basic interactive relations between categories but cannot capture lexical dependencies, which are heavily required to disambiguate 'RP' 2 There are two special classes of words worthy of discussion with respect to being closed or open. 1. While the morphological ending '-ly' freely introduces adverbs, this category is otherwise essentially closed class; and 2. There are obviously unboundedly many numbers(CD), but all these match some regular pattern. So we include adverbs without explicit morphological marking in the closed-class lexicon (we frankly doubt adverbs can be acquired by distributional clustering); and as for numbers, we embed exactly such a regular pattern in our model.",
                "cite_spans": [],
                "ref_spans": [],
                "eq_spans": [],
                "section": "Tagset",
                "sec_num": "2.2"
            },
            {
                "text": "3 Not all features of tags are listed here, and further discussion of the feature-based analysis of the tagset is to be reported in other work. This analysis of tags is motivated by Chomsky. with 'IN' or 'PDT' with 'DT' (so these two pairs are collapsed). More importantly, the structural information carried by the closed-class items is the key feature of our disambiguation model, but nouns and adjectives are not distinguishable by their structural positions (in NP), so they are not to be distinguished in our tagset4 . We use this new reduced tagset with 27 tags in our experiments5 . For the purposes of comparison, we map the results using our 27 tag tagset to the commonly-used 17 tag tagset6 , and evaluate our algorithms for both tagsets. Table 1 compare the three tagsets, and the ambiguity column shows the average number of ambiguous tags per token in WSJ corpus section 00-24.",
                "cite_spans": [],
                "ref_spans": [
                    {
                        "start": 755,
                        "end": 756,
                        "text": "1",
                        "ref_id": "TABREF0"
                    }
                ],
                "eq_spans": [],
                "section": "Tagset",
                "sec_num": "2.2"
            },
            {
                "text": "By using the reduced 27 tags, we found in this work that the heart of the disambiguation task for open-class words is to distinguish them in the Nominal vs. Verbal domains; and for the closedclass words, the Nominal vs. Verbal property of the adjacent context words is also very helpful for disambiguation. The Nominal vs. Verbal property is defined through N/V categories of POS tags, and we list each category containing both closed-class and open-class tags in table 2.",
                "cite_spans": [],
                "ref_spans": [],
                "eq_spans": [],
                "section": "NV category",
                "sec_num": "2.3"
            },
            {
                "text": "Not being equipped with a full lexicon, our system takes the closed-class lexicon as given, and automatically computes possible tags, which must be open class, for all other words in the acquisition process as described below. There are five openclass tags in our reduced tagset, as we describe above: 'VBG' and 'VBN' represent two kinds of derived Nominal elements, with corresponding morphological endings attached to the verbal roots; and 'RB' represents the adverbial class into which new words can only be introduced if affixed with the special ending '-ly'. Taking into account this special morphology, we divide our construction of the open-class lexicon into two steps: N/V-Clustering and Morphing. At the N/V-clustering step, we classify the base-forms (roots) of openclass words into two clusters in a sparse feature space. At the Morphing step, we count on the embedded functional elements (i.e. morphology) to derive specific tags for words in each cluster.",
                "cite_spans": [],
                "ref_spans": [],
                "eq_spans": [],
                "section": "Acquiring the open-class lexicon",
                "sec_num": "3"
            },
            {
                "text": "Inducing syntactic categories is a language acquisition task on which there has been extensive research, e.g. (Clark, 2003) and (Sch\u00fctze, 1993) , based largely on variants of distributional clustering.",
                "cite_spans": [
                    {
                        "start": 110,
                        "end": 123,
                        "text": "(Clark, 2003)",
                        "ref_id": "BIBREF2"
                    },
                    {
                        "start": 128,
                        "end": 143,
                        "text": "(Sch\u00fctze, 1993)",
                        "ref_id": "BIBREF12"
                    }
                ],
                "ref_spans": [],
                "eq_spans": [],
                "section": "Clustering",
                "sec_num": "3.1"
            },
            {
                "text": "In a standard setup of POS clustering, each target word to be clustered, w i , is represented as a vector, <count(w i ,C 1 ), count(w i ,C 2 ),...,count(w i ,C m )>, collecting counts of occurrences of w i in each context, C j . Then the chosen algorithm clusters the feature vectors according to similarity.",
                "cite_spans": [],
                "ref_spans": [],
                "eq_spans": [],
                "section": "Clustering",
                "sec_num": "3.1"
            },
            {
                "text": "In previous work, the contextual features are lexical, so the length of a feature vector varies from hundreds to thousands of features. The clustering algorithm then runs over this highdimensional space, which is computationally quite intensive. Unlike previous work, our system only employs seven features, all functional, to represent target words, and we are paid back by a substantial improvement in efficiency. Each open-class word is represented in the feature space by the following seven component vector: <left:DT, left:MD, mid:\u03c6, mid:-ed, mid:-ing, right:DT, right:MD>. The first two values in this vector represent the counts of modal verbs (MD) and determiners (DT) occurring to the left of all forms of a base form; the three values in the middle represent the counts of three possible morphological forms of a word; and the last two values represent the counts of an immediately following MD and DT. This radical reduction of the feature space eliminates any need for sophisticated clustering techniques. For the purpose of convenience, we use a basic k-means clustering algorithm which allows us to specify the number of output clusters (Maffi, 2007) .",
                "cite_spans": [
                    {
                        "start": 1152,
                        "end": 1165,
                        "text": "(Maffi, 2007)",
                        "ref_id": null
                    }
                ],
                "ref_spans": [],
                "eq_spans": [],
                "section": "Clustering",
                "sec_num": "3.1"
            },
            {
                "text": "As is well known, clustering all words in a corpus using distributional clustering results in a high number of clusters. For example, (Sch\u00fctze, 1993) induces 200 clusters and (Clark, 2003) chooses between 16-128; and most of these induced categories are difficult to associate with a specific POS tag. Chan's recent thesis work (Chan, 2008) provides us with a solution to this problem. In the first pass of Chan's model for unsupervised lexical category induction, verbs are separated from all other categories with a high level of purity; the second pass separates adjectives from nouns by using the categorical results from the first pass as an additional feature 7 . His experiments for a wide range of languages show that the \"restriction to cluster base forms only8 \" is crucial to induce clusters more in line with the definition of the open-class syntactic categories we care about here.",
                "cite_spans": [
                    {
                        "start": 134,
                        "end": 149,
                        "text": "(Sch\u00fctze, 1993)",
                        "ref_id": "BIBREF12"
                    },
                    {
                        "start": 175,
                        "end": 188,
                        "text": "(Clark, 2003)",
                        "ref_id": "BIBREF2"
                    },
                    {
                        "start": 328,
                        "end": 340,
                        "text": "(Chan, 2008)",
                        "ref_id": "BIBREF1"
                    }
                ],
                "ref_spans": [],
                "eq_spans": [],
                "section": "Clustering",
                "sec_num": "3.1"
            },
            {
                "text": "Here, we follow a variant of Chan's approach, grouping words with their base-forms for clustering. For example, we group all occurrences of the transformed (morphological) forms, (start, starts, starting and started), in a particular context, C j , together with the base form start to form a single count for (start, C j ), in forming the corresponding feature vectors. Given this, since all inflections of one base form share the same feature vector, all inflections enter into the same class of their baseform. In (Chan, 2008) , morphological base forms are the output of a new morphology induction algorithm he develops. Here, we simply extract the base form of a word by stripping three possible forms of endings: -s, -ing and -ed9 .",
                "cite_spans": [
                    {
                        "start": 517,
                        "end": 529,
                        "text": "(Chan, 2008)",
                        "ref_id": "BIBREF1"
                    }
                ],
                "ref_spans": [],
                "eq_spans": [],
                "section": "Clustering",
                "sec_num": "3.1"
            },
            {
                "text": "After the clustering step, which we intend to separate the Nominal and Verbal classes, two clusters as desired are induced, but we still need a method to automatically decide which one is which. A trick that works well in practice is simply to pick the smaller class as the Verbal class. These two classes reflect the basic categories of the roots; by a generative mechanism observed in most languages, roots (base-forms) are transformed into derived categories by fusing with functional elements, which surface as the few morphological endings in English.",
                "cite_spans": [],
                "ref_spans": [],
                "eq_spans": [],
                "section": "Morphing",
                "sec_num": "3.2"
            },
            {
                "text": "For all words in the Nominal class, except for those with the ending -ly, the only possible tag for each is 'NN', since no finer categories of 'NN' exist in our reduced tagset. On the other hand, for a word with ending -ly falling into the N class, we simply assume that its tag must be 'RB', although this assumption may have a few exceptions.",
                "cite_spans": [],
                "ref_spans": [],
                "eq_spans": [],
                "section": "Morphing",
                "sec_num": "3.2"
            },
            {
                "text": "The Verbal class contains all words with verbal roots. There are two specific endings in English serving as morphological markers of derived Nominal categories, -ed and -ing, corresponding to derived categories 'VBN' and 'VBG' respectively. So for each word ending with -ed, we assign two possible tags to it, 'VB'(our reduced form of 'VBD') and 'VBN'; and for each word ending with -ing we assume only one possible tag, 'VBG', although this assumption may systematically introduce tagging error confusing 'VBG' and 'NN'. For example, if the feature vector representing the base-form group start, starts, started,starting is classified into the verbal class, then both starts and start will receive one possible tag 'VB'; starting will receive one possible tag 'VBG'; but started will receive two possible tags 'VBN' and 'VB'.",
                "cite_spans": [],
                "ref_spans": [],
                "eq_spans": [],
                "section": "Morphing",
                "sec_num": "3.2"
            },
            {
                "text": "As one may notice, start and starts should have two senses, noun and verb, but the Nominal sense is lost in the Morphing step. For such cases, we introduce a simple supplemental process to compensate for the missing Nominal sense. For a word with the possible tag 'VB' (not 'VBG' or 'VBN') as determined in the Morphing step, if it is ever seen following a determiner in context, another possible tag 'NN' will be assigned to it.",
                "cite_spans": [],
                "ref_spans": [],
                "eq_spans": [],
                "section": "Morphing",
                "sec_num": "3.2"
            },
            {
                "text": "Remember that, as introduced in Sect 2.2, form of run, because the ending '-ed' is ambiguous for both past tense and past participle. The list of irregular verbs is obtained from http://www.englishpage.com.",
                "cite_spans": [],
                "ref_spans": [],
                "eq_spans": [],
                "section": "Morphing",
                "sec_num": "3.2"
            },
            {
                "text": "'VBN', 'VBG' and 'NN' are of category N and 'VB' is of category V. Then for each word in the resulting lexicon, there is maximally one possible tag of it falling in either category N or V, so the category information (N or V) is enough for the disambiguation task, as specified in Section 6.",
                "cite_spans": [],
                "ref_spans": [],
                "eq_spans": [],
                "section": "Morphing",
                "sec_num": "3.2"
            },
            {
                "text": "Taking a dictionary as input, the task of unsupervised tagging is to learn a disambiguation model from unannotated data and apply this model for disambiguating the occurrences of words in context. In this section, we are going to introduce the representation of our disambiguation model first, and then discuss how it affects the system design.",
                "cite_spans": [],
                "ref_spans": [],
                "eq_spans": [],
                "section": "Unsupervised Tagging",
                "sec_num": "4"
            },
            {
                "text": "In the following two sections, we will describe the algorithms for learning and decoding the language model respectively.",
                "cite_spans": [],
                "ref_spans": [],
                "eq_spans": [],
                "section": "Unsupervised Tagging",
                "sec_num": "4"
            },
            {
                "text": "Again, we view tagging as a process of identifying functional context, from which the proper tagging simply follows. Given this, we represent the language model as a set of disambiguation rules conditioned on functional contexts that predict categorical information, with each rule of the form of r = (con : cat) with con and cat the functional context and categorical information respectively. In both open-and closed-class domains, given a pair of words (W l , W r ), the disambiguation rules check the functional property of W l and predicts the N/V category of W r . However, in the open-class disambiguation model, con represents closed-class items as well as verbal feature, but in the closed-class disambiguation model, con represents closed-class categories (closed-class POS tags). In disambiguating an open-class word, con is checked against the preceding closed-class word or verbal feature (if any), and cat of the following open-class word is predicted. In disambiguating a closed-class word cw, each possible tag of cw may invoke a rule and each rule will predict a N/V category of the following item; if some rule makes the right prediction, the corresponding tag is assigned to cw. This rule-based disambiguation model is deterministic in the sense that for each token in context there is maximally one tag that can be predicted. Not being statistically parameterized, this greedy prediction requires that 1) each rule is deterministic and 2) in each context, only one rule is invoked (which is guaranteed by the selection step introduced in Section 5.2). Moreover, this disambiguation model is non-lexicalized in that it is only conditioned on the functional items in context but not the target word itself. ",
                "cite_spans": [],
                "ref_spans": [],
                "eq_spans": [],
                "section": "Disambiguation Model",
                "sec_num": "4.1"
            },
            {
                "text": "In this section, we describe the learning algorithm used in both Model-LO and Model-LC. Although there is no annotated data available for learning, 10 Our disambiguation model is not statistically parameterized, so this problem can not be resolved by any kind of parameter estimation technique as in previous work on unsupervised tagging. we can use the unambiguous events in data to establish the disambiguation rules and apply the rules to ambiguous events. The only difference in implementation of the two models lies in the 'ruleextraction', corresponding to different interpretations of unambiguous events for learning openand closed-class disambiguation models. After being extracted from pairs of adjacent words in the input sequence, the rules are counted and selected using the same algorithm in both models.",
                "cite_spans": [],
                "ref_spans": [],
                "eq_spans": [],
                "section": "Learning Disambiguation Rules",
                "sec_num": "5"
            },
            {
                "text": "For open-class words, disambiguation rules are extracted from raw data. A pair of adjacent words (W l , W r ) is considered unambiguous if it satisfies the following two conditions: 1. W l is in the closed class or an unambiguous type with only possible tag of 'VB'; and 2. all possible tags of W r fall in the same N/V category (Nominal or Verbal but not mixed). If (W l , W r ) is unambiguous in this sense, then extract rule r = (con : cat), where con is W l (for closed-class words) or 'V' (for unambiguous verbal words), and cat is the N/V category of W r . For example, in the sequence (...he has claimed..), the pair (he, has) is unambiguous in that he is a closed-class item and has has only one possible tag, 'VB', so a rule ((he : V ) is extracted; but (has, claimed) is not usable since claimed has two possible tags: 'VB' of category V and 'VBN' of category N.",
                "cite_spans": [],
                "ref_spans": [],
                "eq_spans": [],
                "section": "Rule-extraction",
                "sec_num": "5.1"
            },
            {
                "text": "Disambiguation rules for closed-class words are extracted after open-class disambiguation. A pair of adjacent words (W l , W r ) is considered unambiguous if it satisfies the following two conditions: 1. W l is in the closed class and has only one possible tag in the closed-class lexicon; 2. W r is either disambiguated or all possible tags of W r fall in the same N/V category. If (W l , W r ) is unambiguous in the above sense, then extract rule r = (con : cat), where con is the single tag of W l , and cat is the N/V category of W r . For example, in the sequence \"...for his stepping...\", the pair (for his) is unambiguous in that for has only one possible tag 'IN' and both possible tags of his, 'PRP' and 'PRP$', fall into the Nominal category, then a rule (IN : N ) is extracted; but (his about) is not usable since his has more than one possible tag and about has two possible tags, 'RB' and 'IN', which are neither both 'N' nor both 'V'.",
                "cite_spans": [],
                "ref_spans": [],
                "eq_spans": [],
                "section": "Rule-extraction",
                "sec_num": "5.1"
            },
            {
                "text": "In the counting step, a set of rules R is first initialized to be empty, and then, as each disambiguation rule r is generated while passing through the data, if not already in R, it is added with an initial count of one; otherwise, N r , the count of r, is incremented by one. Note that we know that for a rule, (con : cat), the prediction cat can only be either N or V; then for each context con, there are two forms of rules counted, (con : N ) or (con : V ). By selecting the rule with a greater count for each context, we guarantee that the resulting disambiguation model is deterministic.",
                "cite_spans": [],
                "ref_spans": [],
                "eq_spans": [],
                "section": "Counting and Selecting",
                "sec_num": "5.2"
            },
            {
                "text": "Given our rule-based, deterministic language model, tagging is a straightforward process of decoding the disambiguation rules. Recall that there are two separate tagging models in the system, Model-DO and Model-DC for disambiguating open-and closed-class respectively.",
                "cite_spans": [],
                "ref_spans": [],
                "eq_spans": [],
                "section": "Tagging",
                "sec_num": "6"
            },
            {
                "text": "The inputs to Model-DO are the open-class lexicon, the disambiguation rules learned in Model-LO and raw data in sequence. For each ambiguous open-class word w in sequence if the preceding closed-class word (if any) invokes a disambiguation rule, r = (con : cat), then pick the possible tag of w that falls in the category of cat (N or V), as discussed in Section 3.2. If no rule is triggered our default choice is 'NN'; but if 'NN' is not a possible tag, we assume the default domain is Verbal (so the 'VB' tag is favored).",
                "cite_spans": [],
                "ref_spans": [],
                "eq_spans": [],
                "section": "Tagging",
                "sec_num": "6"
            },
            {
                "text": "The application of disambiguation rules in Model-DC is a little more complex. For each ambiguous closed-class word cw in sequence followed by a token of category cat, N or V, pick a possible tag of cw, con, such that (con : cat) is a rule learned in Model-LC. If no tag is picked, a random choice is made. While there are residual cases that no functional context can help with tagging, the disambiguation model proposed here combined with random choice results in a good overall performance, as shown in section 7.3. ",
                "cite_spans": [],
                "ref_spans": [],
                "eq_spans": [],
                "section": "Tagging",
                "sec_num": "6"
            },
            {
                "text": "Our unsupervised tagging system is compared to the following models As reported in (Banko&Moore, 2004) , 'the quality of the lexicon made available to unsupervised learner made the greatest difference to tagging accuracy'. So we only compare our experiments to recent work built over the same dataset and a full lexicon automatically extracted from the Penn Treebank.",
                "cite_spans": [
                    {
                        "start": 83,
                        "end": 102,
                        "text": "(Banko&Moore, 2004)",
                        "ref_id": null
                    }
                ],
                "ref_spans": [],
                "eq_spans": [],
                "section": "Results",
                "sec_num": "7"
            },
            {
                "text": "As described in section 2.1, the closed-class lexicon, special in our experiments, is also automatically constructed from the WSJ corpus, and will be used in experiments on both WSJ and Brown corpora below11 . CRF/CE (Smith&Eisner, 2005) and BHMM2 (Goldwater&Griffiths, 2007) have been discussed briefly in the introduction. LDA+AC (Toutanova&Johnson, 2007) is actually a semi-unsupervised model given the prior on p(t|w); despite this additional information, our model outperforms it in experiments with partial dictionaries. For the purpose of comparison, our experiments use the same dataset as in these previous work, varying in sizes from 12K to 96K.",
                "cite_spans": [
                    {
                        "start": 217,
                        "end": 237,
                        "text": "(Smith&Eisner, 2005)",
                        "ref_id": null
                    },
                    {
                        "start": 248,
                        "end": 275,
                        "text": "(Goldwater&Griffiths, 2007)",
                        "ref_id": null
                    },
                    {
                        "start": 332,
                        "end": 357,
                        "text": "(Toutanova&Johnson, 2007)",
                        "ref_id": null
                    }
                ],
                "ref_spans": [],
                "eq_spans": [],
                "section": "Results",
                "sec_num": "7"
            },
            {
                "text": "In addition to reporting on our own tagset with 27 tags, we also map the results onto the 17 tags used in other models as explained above.",
                "cite_spans": [],
                "ref_spans": [],
                "eq_spans": [],
                "section": "Results",
                "sec_num": "7"
            },
            {
                "text": "As shown in One other work that investigates the use of a limited lexicon is (Haghighi&Klein, 2006) , which develops a prototype-drive approach to propagate the categorical property using distributional similarity features; using only three exemplars of each tag, they achieve a tagging accuracy of 80.5% using a somewhat larger dataset but also the full Penn tagset, which is much larger.",
                "cite_spans": [
                    {
                        "start": 77,
                        "end": 99,
                        "text": "(Haghighi&Klein, 2006)",
                        "ref_id": null
                    }
                ],
                "ref_spans": [],
                "eq_spans": [],
                "section": "Unsupervised Tagging over Partial Dictionaries",
                "sec_num": "7.1"
            },
            {
                "text": "As shown in Table 4 , our new algorithm reduces tagging error by up to 20% over the state-of-theart given a full lexicon, from 89.4% to 91.5% over the 96k dataset 13 .",
                "cite_spans": [],
                "ref_spans": [
                    {
                        "start": 18,
                        "end": 19,
                        "text": "4",
                        "ref_id": null
                    }
                ],
                "eq_spans": [],
                "section": "Varying in sizes",
                "sec_num": "7.2"
            },
            {
                "text": "To better understand the learning property of our system and to get an estimate of the variance of our results above, we repeated the experiments above, starting with either the full lexicon or just the closed-class lexicon, with datasets varying from 0.5K to 96K in size, and repeated each experiment 60 times on different sequences, with four samples randomly selected from the Brown corpus, one from the training data reported above and the others from the WSJ corpus. As shown in Figure 2 , for the closed-class lexicon experiments, the standard deviation of tagging accuracy over the dataset of each size sharply decreases as the size of the data increases, as expected. It is also clear that 12 Since we are facing an unsupervised task, the training set is unannotated, and hence there is no reason not to use it as the test set as well. For the sake of comparison, we use the same split of the dataset for training as previous work. In Table 3 the tagging model is trained over 96k and evaluated on 24k, but in Table 4 , the tagging model is trained and evaluated over test and training sets of the same size.",
                "cite_spans": [],
                "ref_spans": [
                    {
                        "start": 491,
                        "end": 492,
                        "text": "2",
                        "ref_id": null
                    },
                    {
                        "start": 949,
                        "end": 950,
                        "text": "3",
                        "ref_id": "TABREF2"
                    },
                    {
                        "start": 1024,
                        "end": 1025,
                        "text": "4",
                        "ref_id": null
                    }
                ],
                "eq_spans": [],
                "section": "Varying in sizes",
                "sec_num": "7.2"
            },
            {
                "text": "13 With a full lexicon, we need to disambiguate between open-class tags which fall into the same N/V category, which is beyond the ability of our disambiguation rules which predict N or V only. When more than one possible tag in the same category predicted by the disambiguation rule, we simply make a random choice. Although not as constrained as the acquired lexicon, a full lexicon does improve the tagging performance, since the automatic lexicon acquisition is far from perfect. the performance of our algorithm on the Brown corpus is as strong as on the WSJ corpus. Results for the full-lexicon are similar.",
                "cite_spans": [],
                "ref_spans": [],
                "eq_spans": [],
                "section": "Varying in sizes",
                "sec_num": "7.2"
            },
            {
                "text": "There are certainly cases that no functional context can help with tagging, since our disambiguation models are encoded by functional context only.",
                "cite_spans": [],
                "ref_spans": [],
                "eq_spans": [],
                "section": "Error Analysis",
                "sec_num": "7.3"
            },
            {
                "text": "Thus it is worth a closer look to how often the system resorts to random choice, as well as to the disambiguation accuracy of either disambiguation model for open-and closed-class learned from unannotated data. We show the disambiguation accuracy of ambiguous words only for each model in Table 5 , and also the number of errors due to imperfect lexicons or random choice.",
                "cite_spans": [],
                "ref_spans": [
                    {
                        "start": 295,
                        "end": 296,
                        "text": "5",
                        "ref_id": "TABREF5"
                    }
                ],
                "eq_spans": [],
                "section": "Error Analysis",
                "sec_num": "7.3"
            },
            {
                "text": "In this work on unsupervised tagging, we combine lexicon acquisition with the learning of a POS disambiguation model. Moreover, the disambiguation model we used is deterministic, nonlexicalized and defined over two distinct domains with complementary distribution (open-and closed-class). Building a lexicon based on induced clusters requires our morphological knowledge of three special endings in English: -ing, -ed and -s; on the other hand, to reduce the feature space used for category induction, we utilize vectors of functional features only, exploiting our knowledge of the role of determiners and modal verbs. However, the above information is restricted to the lexicon acquisition model. Taking a lexicon as input, which either consists of a known closed-class lexicon together with an acquired open-class lexicon or is composed by automatic extraction from the Penn Treebank, we need NO language-specific knowledge for learning the disambiguation model.",
                "cite_spans": [],
                "ref_spans": [],
                "eq_spans": [],
                "section": "Discussion and Future Work",
                "sec_num": "8"
            },
            {
                "text": "We would like to point the reader to (Chan, 2008) for more discussion on Category induction14 ; and discussions below will concentrate on the proposed disambiguation model.",
                "cite_spans": [
                    {
                        "start": 37,
                        "end": 49,
                        "text": "(Chan, 2008)",
                        "ref_id": "BIBREF1"
                    }
                ],
                "ref_spans": [],
                "eq_spans": [],
                "section": "Discussion and Future Work",
                "sec_num": "8"
            },
            {
                "text": "Current Chomskian theory, developed in the Minimalist Program (MP) (Chomsky, 2006) , argues (very roughly speaking) that the syntactic structure of a sentence is built around a scaffolding provided by a set of functional elements15 . Each of these provides a large tree fragment (roughly corresponding to what Chomsky calls a phase) that provide the piece parts for full utterances. Chomsky observes that when these fragments combine, only the very edge of the fragments can change and that the internal structure of these fragments is rigid (he labels this observation the Phase Impenetrability Condition, PIC). With the belief in PIC, we propose the concept of functional context, in which category property can be determined; also we notice the distinct distribution of the elements (functional) on the edge of phase and those (lexical) assembled within the phase.",
                "cite_spans": [
                    {
                        "start": 67,
                        "end": 82,
                        "text": "(Chomsky, 2006)",
                        "ref_id": "BIBREF3"
                    }
                ],
                "ref_spans": [],
                "eq_spans": [],
                "section": "Discussion and Future Work",
                "sec_num": "8"
            },
            {
                "text": "Instead of chasing the highest possible performance by using the strongest method possible, we wanted to explore how well a deterministic, nonlexicalized model, following certain linguistic intuitions, can approach the NLP problem. For the unsupervised tagging task, this simple model, with less than two hundred rules learned, even outperforms non-deterministic generative models with ten of thousands of parameters.",
                "cite_spans": [],
                "ref_spans": [],
                "eq_spans": [],
                "section": "Discussion and Future Work",
                "sec_num": "8"
            },
            {
                "text": "Another motivation for our pursuit of this deterministic, non-lexicalized model is computational efficiency 16 . It takes less than 3 minutes total for our model to acquire the lexicon, learn the disambiguation model, tag raw data and evaluate the output for a 96k dataset on a small laptop17 . And a model using only counting and selecting is common in the research field of language acquisition and perhaps more compatible to the way humans process language.",
                "cite_spans": [],
                "ref_spans": [],
                "eq_spans": [],
                "section": "Discussion and Future Work",
                "sec_num": "8"
            },
            {
                "text": "We are certainly aware that our work does not yet address two problems: 1). How the system can be adapted to work for other languages and 2) How to automatically obtain the knowledge of functional elements. We believe that, given the proper understanding of functional elements, our system will be easily adapted to other languages, but we clearly need to test this hypothesis. Also, we are highly interested in completing our system by incorporating the acquisition of functional elements. (Chan, 2008) presents an extensive discussion of his work on morphological induction and (Mintz et al., 2002) presents interesting psychological experiments we can build on to acquire closed-class words.",
                "cite_spans": [
                    {
                        "start": 491,
                        "end": 503,
                        "text": "(Chan, 2008)",
                        "ref_id": "BIBREF1"
                    },
                    {
                        "start": 580,
                        "end": 600,
                        "text": "(Mintz et al., 2002)",
                        "ref_id": "BIBREF11"
                    }
                ],
                "ref_spans": [],
                "eq_spans": [],
                "section": "Discussion and Future Work",
                "sec_num": "8"
            },
            {
                "text": "For each word, if the number of instances labeled by closed-class tags is greater than by open-class tags, we select it as a closed-class word.",
                "cite_spans": [],
                "ref_spans": [],
                "eq_spans": [],
                "section": "",
                "sec_num": null
            },
            {
                "text": "Due to the indistinguishable roles of adjectives and nouns in Noun Phrase, it is also hard to extract the adjectives from nouns for lexicon acquisition.",
                "cite_spans": [],
                "ref_spans": [],
                "eq_spans": [],
                "section": "",
                "sec_num": null
            },
            {
                "text": "For open-class categories, we keep VB (for VB*), NN for (NN*), VBG, VBN and RB (for RB*), and we reduce the JJ* tags to the tag NN and for closed-class tags, we keep almost all the original distinctions, except for two pairs: 'PDT' and 'DT'; 'RP' and 'IN'. Also 'WRB' is reduced to 'RB'.",
                "cite_spans": [],
                "ref_spans": [],
                "eq_spans": [],
                "section": "",
                "sec_num": null
            },
            {
                "text": "6 In our tagset, there are two coarser tags which stand for more than one tag in the 17 tags: 'NN' stands for both'N' and 'ADJ' and 'IN' for both 'RP' and 'IN'. So to map the output of coarser tags to the finer ones, we need to look up the fulllexicon, since adjectives are not extracted from nouns in the lexicon acquisition process. For a word tagged as 'NN' with a possible tag of 'JJ', if the following word is also tagged as 'NN', then the current 'NN' is mapped to 'JJ'. On the other hand, no action is done for mapping 'IN', so gold 'RP' is always mis-tagged as 'IN' after mapping. If our tagging system outputs a finer tag (e.g. WDT) then it is reduced to the corresponding coarser one (e.g. 'W') in mapping to 17 tags.",
                "cite_spans": [],
                "ref_spans": [],
                "eq_spans": [],
                "section": "",
                "sec_num": null
            },
            {
                "text": "For simplicity, we don't run a second pass but reduce adjectives to noun.",
                "cite_spans": [],
                "ref_spans": [],
                "eq_spans": [],
                "section": "",
                "sec_num": null
            },
            {
                "text": "See p.139 in(Chan, 2008)",
                "cite_spans": [],
                "ref_spans": [],
                "eq_spans": [],
                "section": "",
                "sec_num": null
            },
            {
                "text": "This simple strategy, as well as more complex morphological analyzers, cannot deal with irregular verbs, so we list in memory the corresponding 'regular' ending of each irregular verb. For example, we know that the ending of ran is '-ed', but we DO NOT know that ran is only the past tense",
                "cite_spans": [],
                "ref_spans": [],
                "eq_spans": [],
                "section": "",
                "sec_num": null
            },
            {
                "text": "If we control the quality of the closed-class lexicon (but still leave the full-lexicon untouched) by filtering out errors in the Treebank, the performance is considerably higher.",
                "cite_spans": [],
                "ref_spans": [],
                "eq_spans": [],
                "section": "",
                "sec_num": null
            },
            {
                "text": "In our experiment, using the base-forms and adding a compensation process improves the coverage rate of the acquired lexicon from 79% to 93%.",
                "cite_spans": [],
                "ref_spans": [],
                "eq_spans": [],
                "section": "",
                "sec_num": null
            },
            {
                "text": "15 Such as determiners (for NPs), complementizers like that (for clauses), and case assigning elements associated with transitive verbs (for propositions).",
                "cite_spans": [],
                "ref_spans": [],
                "eq_spans": [],
                "section": "",
                "sec_num": null
            },
            {
                "text": "In some sense, the Minimalist Program was proposed to explore the idea that the existence of Syntax is especially motivated by efficient language processing.",
                "cite_spans": [],
                "ref_spans": [],
                "eq_spans": [],
                "section": "",
                "sec_num": null
            },
            {
                "text": "17 On a Intel Core 2 Duo P8600 2.40 GHz CPU.",
                "cite_spans": [],
                "ref_spans": [],
                "eq_spans": [],
                "section": "",
                "sec_num": null
            }
        ],
        "back_matter": [
            {
                "text": "We thank the National Science Foundation for its support of this work under grant IIS-0415138. We greatly appreciate the comments of the anonymous reviewers; section 7.3 is newly added and two more paragraphs are added to section 2.2 in response to their comments. Also, we would like to thank an anonymous reviewer of a earlier version of this paper, whose thoughtful suggestion led to a restructuring of the current version. We benefited greatly from our discussions with Dr. Charles Yang. Noah Smith provided the data sets and details of the 17 tag tagset used in previous work. Finally, we thank Constantine Lignos for his careful editing of earlier versions.",
                "cite_spans": [],
                "ref_spans": [],
                "eq_spans": [],
                "section": "Acknowledgments",
                "sec_num": "9"
            }
        ],
        "bib_entries": {
            "BIBREF0": {
                "ref_id": "b0",
                "title": "Part of speech tagging in context",
                "authors": [
                    {
                        "first": "Michele",
                        "middle": [],
                        "last": "Banko",
                        "suffix": ""
                    },
                    {
                        "first": "Robert",
                        "middle": [
                            "C"
                        ],
                        "last": "Moore",
                        "suffix": ""
                    }
                ],
                "year": 2004,
                "venue": "COLING",
                "volume": "",
                "issue": "",
                "pages": "",
                "other_ids": {},
                "num": null,
                "urls": [],
                "raw_text": "Michele Banko and Robert C. Moore. 2004. Part of speech tagging in context. In COLING, 2004.",
                "links": null
            },
            "BIBREF1": {
                "ref_id": "b1",
                "title": "Structures and distributions in morphological learning",
                "authors": [
                    {
                        "first": "Erwin",
                        "middle": [],
                        "last": "Chan",
                        "suffix": ""
                    }
                ],
                "year": 2008,
                "venue": "",
                "volume": "",
                "issue": "",
                "pages": "",
                "other_ids": {},
                "num": null,
                "urls": [],
                "raw_text": "Erwin Chan. 2008. Structures and distributions in morphological learning. Ph.D. dissertation, Dept. of Computer and Information Science, UPenn.",
                "links": null
            },
            "BIBREF2": {
                "ref_id": "b2",
                "title": "Combining distributional and morphological information for part of speech induction",
                "authors": [
                    {
                        "first": "Alexander",
                        "middle": [],
                        "last": "Clark",
                        "suffix": ""
                    }
                ],
                "year": 2003,
                "venue": "Proceedings of the 10th Meeting of the EACL",
                "volume": "",
                "issue": "",
                "pages": "",
                "other_ids": {},
                "num": null,
                "urls": [],
                "raw_text": "Alexander Clark. 2003. Combining distributional and morphological information for part of speech induc- tion. In Proceedings of the 10th Meeting of the EACL.",
                "links": null
            },
            "BIBREF3": {
                "ref_id": "b3",
                "title": "Approaching UG from below",
                "authors": [
                    {
                        "first": "N",
                        "middle": [],
                        "last": "Chomsky",
                        "suffix": ""
                    }
                ],
                "year": 2006,
                "venue": "MIT",
                "volume": "",
                "issue": "",
                "pages": "",
                "other_ids": {},
                "num": null,
                "urls": [],
                "raw_text": "Chomsky, N. 2006. Approaching UG from below. MIT.",
                "links": null
            },
            "BIBREF4": {
                "ref_id": "b4",
                "title": "Phase theory and Tree Adjoining Grammar",
                "authors": [
                    {
                        "first": "Robert",
                        "middle": [],
                        "last": "Frank",
                        "suffix": ""
                    }
                ],
                "year": 2006,
                "venue": "Lingua",
                "volume": "",
                "issue": "",
                "pages": "",
                "other_ids": {},
                "num": null,
                "urls": [],
                "raw_text": "Frank, Robert. 2006. Phase theory and Tree Adjoining Grammar. Lingua.",
                "links": null
            },
            "BIBREF5": {
                "ref_id": "b5",
                "title": "A fully Bayesian approach to unsupervised Part-of-Speech tagging",
                "authors": [
                    {
                        "first": "Sharon",
                        "middle": [],
                        "last": "Goldwater",
                        "suffix": ""
                    },
                    {
                        "first": "Thomas",
                        "middle": [
                            "L"
                        ],
                        "last": "Griffiths",
                        "suffix": ""
                    }
                ],
                "year": 2007,
                "venue": "Proceedings of ACL",
                "volume": "",
                "issue": "",
                "pages": "",
                "other_ids": {},
                "num": null,
                "urls": [],
                "raw_text": "Sharon Goldwater and Thomas L. Griffiths. 2007. A fully Bayesian approach to unsupervised Part-of- Speech tagging. In Proceedings of ACL.",
                "links": null
            },
            "BIBREF6": {
                "ref_id": "b6",
                "title": "Prototype-driven learning for sequence models",
                "authors": [
                    {
                        "first": "D",
                        "middle": [],
                        "last": "Haghighi",
                        "suffix": ""
                    },
                    {
                        "first": "",
                        "middle": [],
                        "last": "Klein",
                        "suffix": ""
                    }
                ],
                "year": 2006,
                "venue": "Proceedings of HLT-NAACL",
                "volume": "",
                "issue": "",
                "pages": "",
                "other_ids": {},
                "num": null,
                "urls": [],
                "raw_text": "Haghighi and D. Klein. 2006. Prototype-driven learn- ing for sequence models. In Proceedings of HLT- NAACL.",
                "links": null
            },
            "BIBREF7": {
                "ref_id": "b7",
                "title": "Linguistic Relevance of Tree Adjoining Grammars",
                "authors": [
                    {
                        "first": "A",
                        "middle": [],
                        "last": "Kroch",
                        "suffix": ""
                    },
                    {
                        "first": "A",
                        "middle": [
                            "K"
                        ],
                        "last": "Joshi",
                        "suffix": ""
                    }
                ],
                "year": 1985,
                "venue": "",
                "volume": "",
                "issue": "",
                "pages": "",
                "other_ids": {},
                "num": null,
                "urls": [],
                "raw_text": "Kroch, A. and Joshi, A. K. 1985. Linguistic Relevance of Tree Adjoining Grammars. Technical Report MS- CIS-85-18, Department of Computer and Informa- tion Science, University of Pennsylvania.",
                "links": null
            },
            "BIBREF8": {
                "ref_id": "b8",
                "title": "Mandarin Chinese: A Functional Reference Grammar",
                "authors": [
                    {
                        "first": "Charles",
                        "middle": [
                            "N"
                        ],
                        "last": "Li",
                        "suffix": ""
                    },
                    {
                        "first": "Sandra",
                        "middle": [
                            "A"
                        ],
                        "last": "Thompson",
                        "suffix": ""
                    }
                ],
                "year": 1989,
                "venue": "",
                "volume": "",
                "issue": "",
                "pages": "",
                "other_ids": {},
                "num": null,
                "urls": [],
                "raw_text": "Charles N. Li, Sandra A. Thompson. Mandarin Chi- nese: A Functional Reference Grammar University of California Press, 1989",
                "links": null
            },
            "BIBREF9": {
                "ref_id": "b9",
                "title": "Tagging Icelandic text: A linguistic rule-based approach",
                "authors": [
                    {
                        "first": "Hrafn",
                        "middle": [],
                        "last": "Loftsson",
                        "suffix": ""
                    }
                ],
                "year": 2008,
                "venue": "Nordic Journal of Linguistics",
                "volume": "31",
                "issue": "",
                "pages": "47--72",
                "other_ids": {},
                "num": null,
                "urls": [],
                "raw_text": "Hrafn Loftsson. Tagging Icelandic text: A linguistic rule-based approach Nordic Journal of Linguistics (2008), 31:47-72 Cambridge University Press Leonardo Maffi. Implementation of K-means cluster- ing in Python. http://www.fantascienza.net/leonardo/so/kmeans/kmeans.html",
                "links": null
            },
            "BIBREF10": {
                "ref_id": "b10",
                "title": "Building a large annotated corpus of English: the Penn Treebank",
                "authors": [
                    {
                        "first": "Mitchell",
                        "middle": [
                            "P"
                        ],
                        "last": "Marcus",
                        "suffix": ""
                    },
                    {
                        "first": "Mary",
                        "middle": [],
                        "last": "",
                        "suffix": ""
                    },
                    {
                        "first": "Ann",
                        "middle": [],
                        "last": "Marcinkiewicz",
                        "suffix": ""
                    },
                    {
                        "first": "Beatrice",
                        "middle": [],
                        "last": "Santorini",
                        "suffix": ""
                    }
                ],
                "year": 1993,
                "venue": "Computational Linguistics",
                "volume": "",
                "issue": "2",
                "pages": "",
                "other_ids": {},
                "num": null,
                "urls": [],
                "raw_text": "Mitchell P. Marcus , Mary Ann Marcinkiewicz , Beat- rice Santorini, 1993. Building a large annotated cor- pus of English: the Penn Treebank. Computational Linguistics, v.19 n.2, June 1993.",
                "links": null
            },
            "BIBREF11": {
                "ref_id": "b11",
                "title": "The distributional structure of grammatical categories in speech to young children",
                "authors": [
                    {
                        "first": "T",
                        "middle": [
                            "H"
                        ],
                        "last": "Mintz",
                        "suffix": ""
                    },
                    {
                        "first": "E",
                        "middle": [
                            "L"
                        ],
                        "last": "Newport",
                        "suffix": ""
                    },
                    {
                        "first": "T",
                        "middle": [
                            "G"
                        ],
                        "last": "Bever",
                        "suffix": ""
                    }
                ],
                "year": 2002,
                "venue": "Cognitive Science",
                "volume": "26",
                "issue": "",
                "pages": "393C--424",
                "other_ids": {},
                "num": null,
                "urls": [],
                "raw_text": "T.H. Mintz, E.L. Newport and T.G. Bever. 2002. The distributional structure of grammatical categories in speech to young children. Cognitive Science 26 (2002), pp. 393C424.",
                "links": null
            },
            "BIBREF12": {
                "ref_id": "b12",
                "title": "Part-of-speech induction from scratch",
                "authors": [
                    {
                        "first": "Hinrich",
                        "middle": [],
                        "last": "Sch\u00fctze",
                        "suffix": ""
                    }
                ],
                "year": 1993,
                "venue": "Proceedings of the 31st Meeting of the ACL",
                "volume": "",
                "issue": "",
                "pages": "",
                "other_ids": {},
                "num": null,
                "urls": [],
                "raw_text": "Hinrich Sch\u00fctze. 1993. Part-of-speech induction from scratch. In Proceedings of the 31st Meeting of the ACL.",
                "links": null
            },
            "BIBREF13": {
                "ref_id": "b13",
                "title": "Novel Estimation Methods for Unsupervised Discovery of Latent Structure in Natural Language Text",
                "authors": [
                    {
                        "first": "Noah",
                        "middle": [
                            "A"
                        ],
                        "last": "Smith",
                        "suffix": ""
                    }
                ],
                "year": 2006,
                "venue": "",
                "volume": "",
                "issue": "",
                "pages": "",
                "other_ids": {},
                "num": null,
                "urls": [],
                "raw_text": "Noah A. Smith. Novel Estimation Methods for Un- supervised Discovery of Latent Structure in Natural Language Text. Ph.D. thesis, Johns Hopkins Uni- versity Department of Computer Science, Baltimore, MD, October 2006.",
                "links": null
            },
            "BIBREF14": {
                "ref_id": "b14",
                "title": "Guided Learning for Bidirectional Sequence Classification In Proceedings of ACL. Noah Smith and Jason Eisner",
                "authors": [
                    {
                        "first": "G",
                        "middle": [],
                        "last": "Shen",
                        "suffix": ""
                    },
                    {
                        "first": "",
                        "middle": [],
                        "last": "Satta",
                        "suffix": ""
                    },
                    {
                        "first": "",
                        "middle": [],
                        "last": "Joshi",
                        "suffix": ""
                    }
                ],
                "year": 2005,
                "venue": "Proceedings of the 43rd Meeting of the ACL",
                "volume": "",
                "issue": "",
                "pages": "",
                "other_ids": {},
                "num": null,
                "urls": [],
                "raw_text": "L Shen, G Satta and A Joshi. 2007. Guided Learning for Bidirectional Sequence Classification In Pro- ceedings of ACL. Noah Smith and Jason Eisner. 2005. Contrastive es- timation: Training log-linear models on unlabeled data. In Proceedings of the 43rd Meeting of the ACL.",
                "links": null
            },
            "BIBREF15": {
                "ref_id": "b15",
                "title": "A Bayesian LDA-based model for semi-supervised part-of-speech tagging",
                "authors": [
                    {
                        "first": "Kristina",
                        "middle": [],
                        "last": "Toutanova",
                        "suffix": ""
                    },
                    {
                        "first": "Mark",
                        "middle": [],
                        "last": "Johnson",
                        "suffix": ""
                    }
                ],
                "year": 2007,
                "venue": "",
                "volume": "",
                "issue": "",
                "pages": "",
                "other_ids": {},
                "num": null,
                "urls": [],
                "raw_text": "Kristina Toutanova and Mark Johnson. 2007. A Bayesian LDA-based model for semi-supervised part-of-speech tagging. In NIPS2007.",
                "links": null
            },
            "BIBREF16": {
                "ref_id": "b16",
                "title": "Knowledge and learning in natural language",
                "authors": [
                    {
                        "first": "Charles",
                        "middle": [],
                        "last": "Yang",
                        "suffix": ""
                    }
                ],
                "year": 2002,
                "venue": "",
                "volume": "",
                "issue": "",
                "pages": "",
                "other_ids": {},
                "num": null,
                "urls": [],
                "raw_text": "Charles Yang. 2002. Knowledge and learning in natu- ral language. Oxford University Press. (Chapter 3).",
                "links": null
            }
        },
        "ref_entries": {
            "FIGREF0": {
                "num": null,
                "text": "For example, he:V, a disambiguation rule for open-class words, says that if an open-class token follows the closed-class item he, then the Verbal tag should be assigned to this token. On the other hand, IN:N, a disambiguation rule for closed-class words, says that if a closedclass token precedes a Nominal word (open-or closed-class) in context and has a possible tag of 'IN', then tag it with 'IN'.",
                "uris": null,
                "fig_num": null,
                "type_str": "figure"
            },
            "FIGREF1": {
                "num": null,
                "text": "Ideally, we should use closed-class tags in context for disambiguating open-class words because closed-class words are potentially ambiguous; but this would cause a chicken-egg problem. If we did this, then the learning of disambiguation rules for closed-class words requires category information for open-class items and vice versa, but none of the required category information is available from the unannotated data 10 . Thanks to how language works (including principally the low degree of ambiguity of closed-class words), it is good enough practically, as shown by our experiments, to encode the disambiguation model for open-class words using closed-class items without categorical information. In this way, we can learn the disambiguation model of open-class items from raw data; however, closed-class disambiguation model is better learned after open-class words are disambiguated. Then there are four models in the system for learning and tagging over two distinct domains: Model-LC and Model-LO for learning the disambiguation model of closed-and open-class words respectively; Model-DC and Model-DO for disambiguating closed-and open-class words respectively; and they must be executed in a strict order as follows: Model-LO \u2192 Model-DO \u2192 Model-LC \u2192 Model-DC, as illustrated in Figure 1.",
                "uris": null,
                "fig_num": null,
                "type_str": "figure"
            },
            "FIGREF2": {
                "num": null,
                "text": "Figure 1: The order of the four models in system.",
                "uris": null,
                "fig_num": "1",
                "type_str": "figure"
            },
            "TABREF0": {
                "content": "<table><tr><td/><td/><td colspan=\"4\">#tags #closed #open amb./token</td></tr><tr><td colspan=\"2\">Smith&amp;Eisner</td><td>17</td><td>7</td><td>6</td><td>2.07</td></tr><tr><td>ThisWork</td><td/><td>27</td><td>12</td><td>6</td><td>1.83</td></tr><tr><td>Penn</td><td/><td>45</td><td>15</td><td>15</td><td>2.74</td></tr><tr><td>Category</td><td/><td>Open tags</td><td/><td colspan=\"2\">Closed tags</td></tr><tr><td>Verbal</td><td/><td>VB</td><td/><td>...</td></tr><tr><td>Nominal</td><td colspan=\"5\">NN, VBN, VBG DT, CD, PRP($), WDT, WP($)</td></tr><tr><td>None</td><td/><td>RB</td><td/><td/></tr></table>",
                "type_str": "table",
                "text": "Comparison of tagsets",
                "html": null,
                "num": null
            },
            "TABREF1": {
                "content": "<table/>",
                "type_str": "table",
                "text": "N/V categories of 27 POS tags",
                "html": null,
                "num": null
            },
            "TABREF2": {
                "content": "<table><tr><td/><td colspan=\"4\">dict. with words of count &gt; d</td><td/></tr><tr><td>d</td><td>1</td><td>2</td><td>3</td><td>\u221e</td><td>#tag</td></tr><tr><td>(percent lex.)</td><td colspan=\"4\">(100%) (55%) (41%) (0.6%)</td><td>-</td></tr><tr><td>BHMM2</td><td>87.3</td><td>79.6</td><td>65.0</td><td>-</td><td>17</td></tr><tr><td>CRF/CE</td><td>90.4</td><td>77.0</td><td>71.7</td><td>-</td><td>17</td></tr><tr><td>model-17</td><td>91.8</td><td>...</td><td>...</td><td>90.6</td><td>17</td></tr><tr><td>model-27</td><td>93.2</td><td>...</td><td>...</td><td>92.1</td><td>27</td></tr><tr><td>LDA+AC</td><td>93.4</td><td>91.2</td><td>89.7</td><td>-</td><td>17</td></tr></table>",
                "type_str": "table",
                "text": "Tagging accuracy with partial dictionaries over 24k dataset; our closed-class lexicon is the closest approximation to the \u221e column .",
                "html": null,
                "num": null
            },
            "TABREF3": {
                "content": "<table><tr><td>, reducing the dictionary by</td></tr><tr><td>filtering rare words (with count&lt;= d) has not been</td></tr><tr><td>a promising track to follow for accomplishing the</td></tr><tr><td>task with as little information as possible. How-</td></tr><tr><td>ever, by introducing a lexicon acquisition step, we</td></tr><tr><td>achieve a tagging accuracy of 90.6% for the 24K</td></tr><tr><td>test data with no prior open-class lexicon, pro-</td></tr><tr><td>vided with only a minimal lexicon of closed-class</td></tr><tr><td>items (about 0.6% of the full lexicon), as high as</td></tr></table>",
                "type_str": "table",
                "text": "",
                "html": null,
                "num": null
            },
            "TABREF5": {
                "content": "<table/>",
                "type_str": "table",
                "text": "The number of errors and percent ambiguous tokens tagged correctly in the 96k dataset with 27 tags. For either system built upon closed-class lexicon or full lexicon, the table shows the disambiguation accuracy and number of errors for each sub-model in the system: Model-DO for disambiguating open-class, Model-DC for disambiguating Closedclass and random choice. The numbers of recall errors (gold tag not in dictionary) and total errors for each system are also shown.",
                "html": null,
                "num": null
            }
        }
    }
}