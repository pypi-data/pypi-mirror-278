input_tab_size=4                                    # Number
string_replace_tab_chars=true                       # { False, True }
tok_split_gte=false                                 # { False, True }
disable_processing_cmt=*begin-nonstandard-formatting*
enable_processing_cmt=*end-nonstandard-formatting*
utf8_bom=remove                                     # { Ignore, Add, Remove, Force }
utf8_byte=false                                     # { False, True }
utf8_force=false                                    # { False, True }
indent_columns=4                                    # Number
indent_with_tabs=0                                  # Number
indent_cmt_with_tabs=false                          # { False, True }
indent_align_string=false                           # { False, True }
indent_braces=false                                 # { False, True }
indent_braces_no_func=false                         # { False, True }
indent_braces_no_class=false                        # { False, True }
indent_braces_no_struct=false                       # { False, True }
indent_brace_parent=false                           # { False, True }
indent_cs_delegate_brace=true                      # { False, True }
indent_namespace=true                               # { False, True }
indent_extern=false                                 # { False, True }
indent_class=true                                   # { False, True }
indent_class_colon=false                            # { False, True }
indent_else_if=false                                # { False, True }
indent_var_def_cont=false                           # { False, True }
indent_func_call_param=true                         # { False, True }
indent_func_def_param=true                          # { False, True }
indent_func_proto_param=true                        # { False, True }
indent_func_class_param=false                       # { False, True }
indent_func_ctor_var_param=false                    # { False, True }
indent_template_param=false                         # { False, True }
indent_func_param_double=false                      # { False, True }
indent_member_single=false                          # false/true
indent_relative_single_line_comments=false          # { False, True }
indent_switch_case=4                                # Number
indent_case_shift=0                                 # Number
indent_case_brace=0                                 # Number
indent_col1_comment=false                           # { False, True }
indent_label=-4                                     # Number
indent_access_spec=-4                               # Number
indent_paren_nl=false                               # { False, True }
indent_comma_paren=false                            # { False, True }
indent_bool_paren=false                             # { False, True }
indent_first_bool_expr=false                        # { False, True }
indent_square_nl=false                              # { False, True }
indent_preserve_sql=false                           # { False, True }
indent_align_paren=false    						# { False, True }
indent_oc_block_msg_xcode_style=true                # { False, True }
indent_off_after_return_new=true                    # { False, True }
indent_single_after_return=true                     # { False, True }
sp_arith=add                                        # { Ignore, Add, Remove, Force }
sp_assign=add                                       # { Ignore, Add, Remove, Force }
sp_assign_default=add                               # { Ignore, Add, Remove, Force }
sp_enum_assign=add                                  # { Ignore, Add, Remove, Force }
sp_pp_concat=remove                                 # { Ignore, Add, Remove, Force }
sp_pp_stringify=remove                              # { Ignore, Add, Remove, Force }
sp_bool=add                                         # { Ignore, Add, Remove, Force }
sp_compare=add                                      # { Ignore, Add, Remove, Force }
sp_inside_paren=remove                              # { Ignore, Add, Remove, Force }
sp_paren_paren=remove                               # { Ignore, Add, Remove, Force }
sp_balance_nested_parens=false                      # { False, True }
sp_paren_brace=force                                # { Ignore, Add, Remove, Force }
sp_after_type=ignore                                # { Ignore, Add, Remove, Force }
sp_template_angle=remove                            # { Ignore, Add, Remove, Force }
sp_before_angle=remove                              # { Ignore, Add, Remove, Force }
sp_inside_angle=remove                              # { Ignore, Add, Remove, Force }
sp_angle_paren=remove                               # { Ignore, Add, Remove, Force }
sp_angle_paren_empty=remove                         # { Ignore, Add, Remove, Force }
sp_angle_word=add                                   # { Ignore, Add, Remove, Force }
sp_angle_shift=remove                               # { Ignore, Add, Remove, Force }
sp_before_sparen=force                              # { Ignore, Add, Remove, Force }
sp_inside_sparen=remove                             # { Ignore, Add, Remove, Force }
sp_after_sparen=add                                 # { Ignore, Add, Remove, Force }
sp_sparen_brace=force                               # { Ignore, Add, Remove, Force }
sp_special_semi=force                               # { Ignore, Add, Remove, Force }
sp_before_semi=remove                               # { Ignore, Add, Remove, Force }
sp_before_semi_for=remove                           # { Ignore, Add, Remove, Force }
sp_before_semi_for_empty=remove                     # { Ignore, Add, Remove, Force }
sp_after_semi=add                                   # { Ignore, Add, Remove, Force }
sp_after_semi_for=force                             # { Ignore, Add, Remove, Force }
sp_after_semi_for_empty=remove                      # { Ignore, Add, Remove, Force }
sp_before_square=remove                             # { Ignore, Add, Remove, Force }
sp_before_squares=remove                            # { Ignore, Add, Remove, Force }
sp_inside_square=remove                             # { Ignore, Add, Remove, Force }
sp_after_comma=add                                  # { Ignore, Add, Remove, Force }
sp_before_comma=ignore                              # { Ignore, Add, Remove, Force }
sp_after_mdatype_commas=remove                      # { Ignore, Add, Remove, Force }
sp_before_mdatype_commas=remove                     # { Ignore, Add, Remove, Force }
sp_between_mdatype_commas=remove                    # { Ignore, Add, Remove, Force }
sp_paren_comma=remove                               # { Ignore, Add, Remove, Force }
sp_after_class_colon=force                          # { Ignore, Add, Remove, Force }
sp_before_class_colon=force                         # { Ignore, Add, Remove, Force }
sp_before_case_colon=remove                         # { Ignore, Add, Remove, Force }
sp_after_operator=remove                            # { Ignore, Add, Remove, Force }
sp_after_operator_sym=remove                        # { Ignore, Add, Remove, Force }
sp_after_operator_sym_empty=remove                  # { Ignore, Add, Remove, Force }
sp_after_cast=remove                                # { Ignore, Add, Remove, Force }
sp_inside_paren_cast=remove                         # { Ignore, Add, Remove, Force }
sp_cpp_cast_paren=remove                            # { Ignore, Add, Remove, Force }
sp_sizeof_paren=remove                              # { Ignore, Add, Remove, Force }
sp_inside_braces_enum=add                           # { Ignore, Add, Remove, Force }
sp_inside_braces_empty=remove                       # { Ignore, Add, Remove, Force }
sp_type_func=ignore                                 # { Ignore, Add, Remove, Force }
sp_func_proto_paren=remove                          # { Ignore, Add, Remove, Force }
sp_func_def_paren=remove                            # { Ignore, Add, Remove, Force }
sp_inside_fparens=remove                            # { Ignore, Add, Remove, Force }
sp_inside_fparen=remove                             # { Ignore, Add, Remove, Force }
sp_fparen_brace=add                                 # { Ignore, Add, Remove, Force }
sp_func_call_paren=remove                           # { Ignore, Add, Remove, Force }
sp_func_call_paren_empty=remove                     # { Ignore, Add, Remove, Force }
sp_func_call_user_paren=remove                      # { Ignore, Add, Remove, Force }
sp_func_class_paren=remove                          # { Ignore, Add, Remove, Force }
sp_return_paren=add                                 # { Ignore, Add, Remove, Force }
sp_defined_paren=remove                             # { Ignore, Add, Remove, Force }
sp_throw_paren=add                                  # { Ignore, Add, Remove, Force }
sp_catch_paren=add                                  # { Ignore, Add, Remove, Force }
sp_brace_typedef=add                                # { Ignore, Add, Remove, Force }
sp_getset_brace=add                                 # { Ignore, Add, Remove, Force }
sp_after_dc=remove                                 # { Ignore, Add, Remove, Force }
sp_not=remove                                       # { Ignore, Add, Remove, Force }
sp_inv=remove                                       # { Ignore, Add, Remove, Force }
sp_addr=remove                                      # { Ignore, Add, Remove, Force }
sp_member=remove                                    # { Ignore, Add, Remove, Force }
sp_deref=remove                                     # { Ignore, Add, Remove, Force }
sp_sign=remove                                      # { Ignore, Add, Remove, Force }
sp_incdec=remove                                    # { Ignore, Add, Remove, Force }
sp_before_nl_cont=add                               # { Ignore, Add, Remove, Force }
sp_after_oc_scope=force                             # { Ignore, Add, Remove, Force }
sp_after_oc_colon=remove                            # { Ignore, Add, Remove, Force }
sp_before_oc_colon=remove                           # { Ignore, Add, Remove, Force }
sp_after_oc_dict_colon=force                        # { Ignore, Add, Remove, Force }
sp_before_oc_dict_colon=remove                      # { Ignore, Add, Remove, Force }
sp_after_send_oc_colon=force                        # { Ignore, Add, Remove, Force }
sp_before_send_oc_colon=remove                      # { Ignore, Add, Remove, Force }
sp_after_oc_type=remove                             # { Ignore, Add, Remove, Force }
sp_after_oc_return_type=remove                      # { Ignore, Add, Remove, Force }
sp_after_oc_at_sel=remove                           # { Ignore, Add, Remove, Force }
sp_inside_oc_at_sel_parens=remove                   # { Ignore, Add, Remove, Force }
sp_cond_colon=add                                   # { Ignore, Add, Remove, Force }
sp_cond_question=add                                # { Ignore, Add, Remove, Force }
sp_case_label=ignore                                # { Ignore, Add, Remove, Force }
sp_after_new=force                                  # { Ignore, Add, Remove, Force }
sp_between_new_paren=remove                         # { Ignore, Add, Remove, Force }
sp_skip_vbrace_tokens=true                          # { False, True }
align_keep_tabs=false                               # { False, True }
align_with_tabs=false                               # { False, True }
align_on_tabstop=false                              # { False, True }
align_number_right=false                             # { False, True }
align_func_params=false                             # { False, True }
align_same_func_call_params=false                   # { False, True }
align_var_def_colon=false                           # { False, True }
align_var_def_attribute=false                       # { False, True }
align_var_def_inline=false                          # { False, True }
align_right_cmt_mix=false                           # { False, True }
align_on_operator=false                             # { False, True }
align_mix_var_proto=false                           # { False, True }
align_single_line_func=false                        # { False, True }
align_single_line_brace=false                       # { False, True }
align_nl_cont=false                                 # { False, True }
align_left_shift=false                              # { False, True }
nl_collapse_empty_body=false                        # { False, True }
nl_assign_leave_one_liners=true                     # { False, True }
nl_class_leave_one_liners=true                      # { False, True }
nl_enum_leave_one_liners=true                       # { False, True }
nl_getset_leave_one_liners=true                     # { False, True }
nl_func_leave_one_liners=true                       # { False, True }
nl_cpp_lambda_leave_one_liners=true                 # { False, True }
nl_if_leave_one_liners=false                        # { False, True }
nl_oc_msg_leave_one_liner=true                      # { False, True }
nl_start_of_file=remove                             # { Ignore, Add, Remove, Force }
nl_end_of_file=force                                # { Ignore, Add, Remove, Force }
nl_end_of_file_min=1                                # Number
nl_assign_brace=force                               # { Ignore, Add, Remove, Force }
nl_enum_brace=force                                 # { Ignore, Add, Remove, Force }
nl_struct_brace=force                               # { Ignore, Add, Remove, Force }
nl_union_brace=force                                # { Ignore, Add, Remove, Force }
nl_if_brace=force                                   # { Ignore, Add, Remove, Force }
nl_brace_else=force                                 # { Ignore, Add, Remove, Force }
nl_else_brace=force                                 # { Ignore, Add, Remove, Force }
nl_else_if=remove                                   # { Ignore, Add, Remove, Force }
nl_brace_finally=force                              # { Ignore, Add, Remove, Force }
nl_finally_brace=force                              # { Ignore, Add, Remove, Force }
nl_try_brace=force                                  # { Ignore, Add, Remove, Force }
nl_getset_brace=force                               # { Ignore, Add, Remove, Force }
nl_for_brace=force                                  # { Ignore, Add, Remove, Force }
nl_catch_brace=force                                # { Ignore, Add, Remove, Force }
nl_brace_catch=force                                # { Ignore, Add, Remove, Force }
nl_while_brace=force                                # { Ignore, Add, Remove, Force }
nl_using_brace=force                                # { Ignore, Add, Remove, Force }
nl_brace_brace=ignore                               # { Ignore, Add, Remove, Force }
nl_do_brace=force                                   # { Ignore, Add, Remove, Force }
nl_brace_while=force                                # { Ignore, Add, Remove, Force }
nl_switch_brace=force                               # { Ignore, Add, Remove, Force }
nl_multi_line_cond=false                            # { False, True }
nl_before_case=false                                # { False, True }
nl_after_case=false                                 # { False, True }
nl_case_colon_brace=force                           # { Ignore, Add, Remove, Force }
nl_namespace_brace=force                            # { Ignore, Add, Remove, Force }
nl_template_class=ignore                            # { Ignore, Add, Remove, Force }
nl_class_brace=force                                # { Ignore, Add, Remove, Force }
nl_fdef_brace=force                                 # { Ignore, Add, Remove, Force }
nl_after_semicolon=false                            # { False, True }
nl_after_brace_open=false                           # { False, True }
nl_after_brace_open_cmt=false                       # { False, True }
nl_after_vbrace_open=false                          # { False, True }
nl_after_vbrace_open_empty=false                    # { False, True }
nl_after_brace_close=false                          # { False, True }
nl_after_vbrace_close=false                         # { False, True }
nl_squeeze_ifdef=false                              # { False, True }
nl_ds_struct_enum_cmt=false                         # { False, True }
nl_ds_struct_enum_close_brace=false                 # { False, True }
nl_namespace_two_to_one_liner=false                 # { False, True }
nl_create_if_one_liner=false                        # { False, True }
nl_create_for_one_liner=false                       # { False, True }
nl_create_while_one_liner=false                     # { False, True }
nl_create_func_def_one_liner=false                  # { False, True }
ls_for_split_full=false                             # { False, True }
ls_func_split_full=false                            # { False, True }
nl_max=3                                            # Number
nl_after_func_body=2                                # Number
nl_after_multiline_comment=false                    # { False, True }
nl_property_brace=force                             # { Ignore, Add, Remove, Force }
eat_blanks_after_open_brace=true                    # { False, True }
eat_blanks_before_close_brace=true                  # { False, True }
nl_after_return=false                               # { False, True }
mod_full_brace_if_chain=false                       # { False, True }
mod_paren_on_return=ignore                          # { Ignore, Add, Remove, Force }
mod_pawn_semicolon=false                            # { False, True }
mod_full_paren_if_bool=false                        # { False, True }
mod_remove_extra_semicolon=true                     # { False, True }
mod_move_case_break=false                           # { False, True }
mod_remove_empty_return=true                        # { False, True }
cmt_convert_tab_to_spaces=True                      # { False, True }
cmt_indent_multi=false                              # { False, True }
cmt_c_group=false                                   # { False, True }
cmt_c_nl_start=false                                # { False, True }
cmt_c_nl_end=false                                  # { False, True }
cmt_cpp_group=false                                 # { False, True }
cmt_cpp_nl_start=false                              # { False, True }
cmt_cpp_nl_end=false                                # { False, True }
cmt_cpp_to_c=false                                  # { False, True }
cmt_star_cont=false                                 # { False, True }
cmt_multi_check_last=false                          # { False, True }
cmt_insert_before_preproc=false                     # { False, True }
pp_space=ignore                                     # { Ignore, Add, Remove, Force }
use_options_overriding_for_qt_macros=false          # { False, True }
warn_level_tabs_found_in_verbatim_string_literals=1 # { 1, 2, 3 }
# blocked by https://sourceforge.net/p/uncrustify/bugs/619/
# can be turned back on at any time
mod_add_long_ifdef_else_comment=0
mod_add_long_ifdef_endif_comment=0

# Setting this 'false' will cause an extra tab to be added to function call args from an assignment:
#
# x = o.Func2(a, b,
#         y);
# o.Func2(a, b,
#     y);
#
# ...but setting it 'true' is often worse:
#
# ExtraReallyLongType reallyLongVariableName = someTest
#                                            ? someTrueExpr
#                                            : someFalseExpr
#
# ...except sometimes we really do want that. What we need is an indent_align_assign_threshold, or,
# better but maybe more complicated, indent_align_assign=ignore to leave alone what the engineer did.
# (currently unreported)
indent_align_assign=false

# this is causing a few problems, but usually with block comments and autodoc markup. perhaps only add a space
# if first letter is not a symbol and this is a standalone comment: not preceded or followed by another c++
# comment line at the same level of indentation.
# REVISIT: work was done to have it eliminate space for doxygen markup in c6aca7b, maybe can improve on it for us
# (test using Runtime/Allocator/BucketAllocator.h)
# IMPORTANT: see task at https://trello.com/c/wUgiuvbX before going further
#sp_cmt_cpp_start=add
sp_cmt_cpp_start=ignore

# https://sourceforge.net/p/uncrustify/bugs/619/
#sp_endif_cmt=force
sp_endif_cmt=ignore

# want to turn this on, but can't do it without also getting alignment right. try running it on this file as an example:
# Tools\BugReporterV2\qt_face\lib\src\MainWindow.cpp
#nl_cpp_ldef_brace=force
nl_cs_property_leave_one_liners=true
