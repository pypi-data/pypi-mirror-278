stages:
  - build
  - deploy

build:
  stage: build
  image: python:3-bookworm
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - python3 -m pip install build
    - python3 -m build
  artifacts:
    paths:
      - dist/
 
publish-pypi:
  stage: deploy
  image: python:3-bookworm
  dependencies:
    - build
  rules:
    - if: $CI_COMMIT_TAG
  id_tokens:
    PYPI_ID_TOKEN:
      aud: pypi
  script:
    - apt update && apt install -y jq
    - python3 -m pip install twine id
    - oidc_token=$(python -m id PYPI)
    - resp=$(curl -X POST https://pypi.org/_/oidc/mint-token -d "{\"token\":\"${oidc_token}\"}")
    - api_token=$(jq --raw-output '.token' <<< "${resp}")
    - twine upload -u __token__ -p "${api_token}" dist/*
  environment:
    name: production

publish-release:
  stage: deploy
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  dependencies:
    - build
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - echo "Creating release $CI_COMMIT_TAG"
  release:
    tag_name: '$CI_COMMIT_TAG'
    name: 'ParaCopy $CI_COMMIT_TAG'
    description: '$CI_COMMIT_DESCRIPTION'