[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "auto-file-sorter"
description = "A file sorting automation"
readme = "README.md"
keywords = ["automation", "file", "sorter", "auto", "watchdog"]
license = { text = "MIT" }
authors = [{ name = "realshouzy" }]
maintainers = [{ name = "realshouzy" }]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
]
requires-python = ">=3.8"
dynamic = ["version", "dependencies"]

[project.urls]
Repository = "https://github.com/realshouzy/auto-file-sorter"
Documentation = "https://github.com/realshouzy/auto-file-sorter/blob/main/README.md#documentation"
Changelog = "https://github.com/realshouzy/auto-file-sorter/commits/"
Issues = "https://github.com/realshouzy/auto-file-sorter/issues"

[project.optional-dependencies]
# keep in sync with requirements-dev.txt
dev = [
    "bandit",
    "black",
    "covdefaults",
    "coverage",
    "isort",
    "mypy",
    "pre-commit",
    "pylint",
    "pylint-pytest",
    "pytest",
    "ruff",
    "tox",
]

[project.scripts]
auto-file-sorter = "auto_file_sorter.main:main"

[tool.setuptools]
packages = ["auto_file_sorter"]
license-files = ["LICENSE"]

[tool.setuptools.dynamic]
version = { attr = "auto_file_sorter.__version__" }
dependencies = { file = "requirements.txt" }

[tool.black]
target-version = ["py312", "py311", "py310", "py39", "py38"]
line-length = 88

[tool.isort]
profile = "black"

[tool.mypy]
mypy_path = "stubs"
strict = true
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
warn_redundant_casts = true
show_error_codes = true
disallow_subclassing_any = true
disallow_untyped_decorators = true
warn_return_any = true
strict_equality = true
no_implicit_reexport = true
no_implicit_optional = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_decorators = false
disable_error_code = ["unused-ignore", "no-redef"]

[tool.ruff]
lint.select = ["ALL"]
lint.ignore = [
    "E501",
    "BLE001",
    "INP001",
    "PLR0911",
    "PLR0912",
    "PLR0915",
    "PGH003",
    "ANN101",
    "D107",
    "D105",
    "C901",
    "T201",
    "D205",
    "DTZ005",
    "TD002",
    "TD003",
    "FIX002",
    "UP036",
    "UP035",
]
lint.fixable = ["ALL"]
lint.unfixable = []
show-fixes = true
target-version = "py312"
line-length = 88

[tool.ruff.lint.isort]
known-first-party = ["auto_file_sorter"]
required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.extend-per-file-ignores]
"*.pyi" = [
    "A002",
    "ANN401",
    "D100",
    "D101",
    "D102",
    "D103",
    "FBT001",
    "FBT002",
    "PLR0913",
]
"./tests/*_test.py" = [
    "D103",
    "S101",
    "PT007",
    "SLF001",
    "N802",
    "ARG001",
    "F811",
    "F401",
    "FBT001",
]

[tool.ruff.lint.pydocstyle]
convention = "pep257"

[tool.pylint]
disable = ["R0911", "R0912", "R0915", "W0718", "W0511"]
load-plugins = "pylint_pytest"

[tool.bandit]
exclude_dirs = ["tests"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["*_test.py"]

[tool.coverage.run]
plugins = ["covdefaults"]

[tool.coverage.report]
exclude_also = [
    'except PermissionError( as perm_err)?:',
    'except (OSError|(shutil.Error, OSError))( as os_err)?:',
    'except Exception as err:',
]
fail_under = 100
