Metadata-Version: 2.3
Name: seachad
Version: 0.1.1
Summary: Common packages from SEACHAD
Project-URL: Homepage, https://github.com/seachad/seachad
Project-URL: Bug Tracker, https://github.com/seachad/seachad/issues
Author-email: jovenluke <fernando.garcia.varela@outlook.es>
License: MIT License
        
        Copyright (c) 2024 Fernando García
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
License-File: LICENSE
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Requires-Python: >=3.9
Requires-Dist: colorama
Description-Content-Type: text/markdown


terminal_colors
---------------

Allows print with colors

Very easy!!!

    >>> import terminal_colors as tc

    tc._print(f"{tc.Y}Print in rellow, {tc.G}print in green, {tc.B}, print in blue")
    tc._print(f"print in yellow", tc.Y)
    tc._print(f"print without marks", time_and_module_mark=False)


    def test_print():
        # utilizando el HELPER
        tc._print("Hola mundo", tc.B) # imprimirá por defecto en CYAN con BRIGHT (así sabemos que se está usando esta función por defecto)
        tc._print(f"{tc.Y}Hola {tc.R}mundo") # imprimirá en AZUL sobre ROJO en BRIGHT
        tc._print("Hola mundo", tc.W) # vuelve a imprimir en CYAN con BRIGHT (así sabemos que se está usando esta función por defecto)
        
        # utilizando las primitivas
        tc.print_in_color(tc.fg.BLUE+tc.bg.RED+tc.style.BRIGHT)
        tc.print("Show me your color")    
        tc.print_in_color(tc.fg.WHITE)    
        tc.print( "All following prints will be WHITE ...")
        tc.print( "continues WHITE...")
        tc.print_in_color()    
        tc.print( "Now default color")

cache_REDIS
-----------

Usage of REDIS

functionallities:
- seamless communication with REDIS
- encrypted information
- allow to store in a singleton in memory (for fastest access) only alive during execution, no persistence


common
------

future


ar_decorator_functions
----------------------

future
