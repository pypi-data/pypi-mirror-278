// Auto generated code by ssc_gen
// WARNING: Any manual changes made to this file will be lost when this
// is run again. Do not edit this file unless you know what you are doing.

import 'dart:core';
import 'baseStruct.dart';

/// Extract MPD and M3U8 urls
///
///     Required `referer="https://animego.org/` HEADER
///
///     USAGE:
///         1. GET <PLAYER_LINK> (e.g. https://aniboom.one/embed/6BmMbB7MxWO?episode=1&translation=30)
///         2. PARSE. If pre-unescape response before parse - css selector may not find attribute
///         3. For video playing, url required next headers:
///
///         - Referer="https://aniboom.one/"
///         - Accept-Language="ru-RU"  # INCREASE DOWNLOAD SPEED with this static value
///         - Origin="https://aniboom.one"
///     ISSUES:
///         - 403 Forbidden if request sent not from SIG region
///         - KEYS SHOULD BE STARTED IN Title case else hls/mpd links returns 403 error
///         - Sometimes, aniboom backend missing MPD key and returns M3U8 url. Check this value before usage:
///
///         https://github.com/vypivshiy/ani-cli-ru/issues/29
///
///         Expected json signature (LOOK at dash.src and hls.src keys):
///
///         { ...
///         "dash":"{"src":"https:.../abcdef.mpd",        "type":"application\\/dash+xml"}",
///         "hls":"{"src":"https:...\\/master_device.m3u8",
///         "type":"application\\/x-mpegURL"}"
///
///         ... }
///
///         MAYBE returns this:
///
///          { ...
///         "dash":"{"src":"https:...master_device.m3u8",        "type":"application\\/dash+xml"}",
///         "hls":"{"src":"https:...master_device.m3u8",
///         "type":"application\\/x-mpegURL"}"
///
///         ... }
///
///
///
///
///
/// {
///   "data_parameters": "String",
///   "m3u8": "String",
///   "mpd": "String"
/// }
class AniboomResult extends BaseParser {
  AniboomResult(rawDocument) : super(rawDocument);
  AniboomResult.fromDocument(document) : super.fromDocument(document);
  AniboomResult.fromElement(element) : super.fromElement(element);

  @override
  mRunParse() {
    Map<String, dynamic> items = {};

    items["data_parameters"] = xxParseDataParameters(selector);
    items["m3u8"] = xxParseM3u8(selector);
    items["mpd"] = xxParseMpd(selector);
    return items;
  }

  xxParseDataParameters(el) {
    var val = mCss(el, '#video');
    var val1 = mAttr(val, 'data-parameters');
    var val2 = mStrReplace(val1, '\\', '');
    var val3 = mStrReplace(val2, '&quot;', '"');
    return val3;
  }

  xxParseM3u8(el) {
    var val = mCss(el, '#video');
    var val1 = mAttr(val, 'data-parameters');
    var val2 = mStrReplace(val1, '\\', '');
    var val3 = mStrReplace(val2, '&quot;', '"');
    var val4 = mReMatch(val3, r'"hls":"{"src":"(https?.*?\.m3u8)"', group: 1);
    return val4;
  }

  xxParseMpd(el) {
    var val = mCss(el, '#video');
    var val1 = mAttr(val, 'data-parameters');
    var val2 = mStrReplace(val1, '\\', '');
    var val3 = mStrReplace(val2, '&quot;', '"');
    var val4 =
        mReMatch(val3, r'"dash":"{"src":"(https?.*?\.(?:mpd|m3u8))"', group: 1);
    return val4;
  }
}
