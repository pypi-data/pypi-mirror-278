"use strict";(self.webpackChunknotebook_url=self.webpackChunknotebook_url||[]).push([[509],{509:(o,e,t)=>{t.r(e),t.d(e,{default:()=>u});var n=t(212),r=t(84),a=t(420),c=t(637),s=t(218),l=t(12);function i(){const o=new URLSearchParams(window.location.hash.slice(1)).get("notebook");if(o){const e=n.decompressFromEncodedURIComponent(o);return JSON.parse(e)}return null}console.log("notebook_to_url_ext is loaded!");class d{createNew(o){const e=new a.ToolbarButton({className:"saveToUrl",label:"Save to URL",onClick:()=>function(o){const e=JSON.stringify(o.context.model.toJSON()),t=n.compressToEncodedURIComponent(e),r=`${window.location.origin}${window.location.pathname}#notebook=${t}`;a.Clipboard.copyToSystem(r),alert("URL copied to clipboard")}(o),tooltip:"Save notebook content to URL and copy to clipboard"});return o.toolbar.insertAfter("cellType","saveToUrl",e),new l.DisposableDelegate((()=>{e.dispose()}))}}const u={id:"notebook_to_url_ext",autoStart:!0,requires:[r.INotebookTracker],optional:[a.ICommandPalette,c.IMainMenu,s.ISettingRegistry],activate:(o,e,t,n,r)=>{console.log("Activating notebook_to_url_ext",o,e);const{docRegistry:a}=o,c=new d;if(a.addWidgetExtension("Notebook",c),o.restored.then((()=>{const o=i();o&&e.currentWidget&&e.currentWidget.context.model.fromJSON(o),e.widgetAdded.connect(((o,e)=>{const t=i();t&&e.context.model.fromJSON(t)}))})),t){const o="Notebook Operations";t.addItem({command:"save-to-url",category:o})}n&&n.viewMenu.addGroup([{command:"save-to-url"}],1e3)}}}}]);