"use strict";(self.webpackChunknotebook_url=self.webpackChunknotebook_url||[]).push([[509],{509:(o,t,e)=>{e.r(t),e.d(t,{default:()=>a});var n=e(212),c=e(84),r=e(420);function l(){const o=new URLSearchParams(window.location.hash.slice(1)).get("notebook");if(o){const t=n.decompressFromEncodedURIComponent(o);return JSON.parse(t)}return null}console.log("notebook_to_url_ext is loaded!");const i={id:"notebook_to_url_ext",autoStart:!0,requires:[c.INotebookTracker],activate:(o,t)=>{console.log("Activating notebook_to_url_ext",o,t),function(o,t){t.widgetAdded.connect(((o,t)=>{const e=new r.ToolbarButton({label:"Save to URL",onClick:()=>{!function(o){const t=JSON.stringify(o.context.model.toJSON()),e=n.compressToEncodedURIComponent(t),c=`${window.location.origin}${window.location.pathname}#notebook=${e}`;r.Clipboard.copyToSystem(c),alert("URL copied to clipboard")}(t)},tooltip:"Save notebook content to URL and copy to clipboard"});t.toolbar.insertItem(10,"saveToUrl",e)}))}(0,t),o.restored.then((()=>{const o=l();o&&t.currentWidget&&t.currentWidget.context.model.fromJSON(o),t.widgetAdded.connect(((o,t)=>{const e=l();e&&t.context.model.fromJSON(e)}))}))}};console.log("my ext");const a=i}}]);