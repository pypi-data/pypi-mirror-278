{"version":3,"sources":["<no source>","%3Cinput%20css%20I2MBOZ%3E","file:///home/mannchri/work/fabrique-village/src/utility/icons/icons-editor/main.scss","file:///home/mannchri/work/fabrique-village/src/core/style/selector/tool/_pseudo.scss","file:///home/mannchri/work/fabrique-village/src/core/style/display/tool/_mask-image.scss","file:///home/mannchri/work/fabrique-village/src/core/style/icon/tool/_default.scss","file:///home/mannchri/work/fabrique-village/module/media-query/mixin/_respond-from.scss","file:///home/mannchri/work/fabrique-village/module/shame/media-query/mixin/_order.scss","file:///home/mannchri/work/fabrique-village/module/legacy/mixin/_legacy.scss","file:///home/mannchri/work/fabrique-village/src/core/style/icon/tool/_legacy.scss"],"names":[],"mappings":"AAAA;;GAAA;ACAA,gBAAgB;;ACKhB;;cAAA;ACWE;;ECVA,8DC0CM;EDzCN,sDCyCM;AJ7BR;;AEHE;;ECVA,8DC0CM;EDzCN,sDCyCM;AJxBR;;AERE;;ECVA,wDC0CM;EDzCN,gDCyCM;AJnBR;;AEbE;;ECVA,wDC0CM;EDzCN,gDCyCM;AJdR;;AElBE;;ECVA,wDC0CM;EDzCN,gDCyCM;AJTR;;AEvBE;;ECVA,wDC0CM;EDzCN,gDCyCM;AJJR;;AE5BE;;ECVA,wDC0CM;EDzCN,gDCyCM;AJCR;;AEjCE;;ECVA,wDC0CM;EDzCN,gDCyCM;AJMR;;AEtCE;;ECVA,4DC0CM;EDzCN,oDCyCM;AJWR;;AE3CE;;ECVA,2DC0CM;EDzCN,mDCyCM;AJgBR;;AEhDE;;ECVA,gEC0CM;EDzCN,wDCyCM;AJqBR;;AErDE;;ECVA,yDC0CM;EDzCN,iDCyCM;AJ0BR;;AE1DE;;ECVA,iEC0CM;EDzCN,yDCyCM;AJ+BR;;AE/DE;;ECVA,mEC0CM;EDzCN,2DCyCM;AJoCR;;AEpEE;;ECVA,kEC0CM;EDzCN,0DCyCM;AJyCR;;AEzEE;;ECVA,8DC0CM;EDzCN,sDCyCM;AJ8CR;;AE9EE;;ECVA,0DC0CM;EDzCN,kDCyCM;AJmDR;;AEnFE;;ECVA,8DC0CM;EDzCN,sDCyCM;AJwDR;;AExFE;;ECVA,gEC0CM;EDzCN,wDCyCM;AJ6DR;;AE7FE;;ECVA,4DC0CM;EDzCN,oDCyCM;AJkER;;AElGE;;ECVA,gEC0CM;EDzCN,wDCyCM;AJuER;;AEvGE;;ECVA,kEC0CM;EDzCN,0DCyCM;AJ4ER;;AE5GE;;ECVA,uEC0CM;EDzCN,+DCyCM;AJiFR;;AEjHE;;ECVA,wEC0CM;EDzCN,gECyCM;AJsFR;;AEtHE;;ECVA,wEC0CM;EDzCN,gECyCM;AJ2FR;;AE3HE;;ECVA,8DC0CM;EDzCN,sDCyCM;AJgGR;;AEhIE;;ECVA,2DC0CM;EDzCN,mDCyCM;AJqGR;;AErIE;;ECVA,gEC0CM;EDzCN,wDCyCM;AJ0GR;;AE1IE;;ECVA,iEC0CM;EDzCN,yDCyCM;AJ+GR;;AE/IE;;ECVA,mEC0CM;EDzCN,2DCyCM;AJoHR;;AEpJE;;ECVA,kEC0CM;EDzCN,0DCyCM;AJyHR;;AEzJE;;ECVA,uEC0CM;EDzCN,+DCyCM;AJ8HR;;AK/JI;ECRI,cAAA;;EAAA,cAAA;ANDR;;AKSI;ECRI,cAAA;;EAAA,cAAA;ANER;;AKMI;ECRI,cAAA;;EAAA,cAAA;ANKR;;AKGI;ECRI,cAAA;;EAAA,cAAA;ANQR;;AONI;ELOF;;IMAE,4DAFI;ERiLN;;EE/KA;;IMAE,4DAFI;ERoLN;;EElLA;;IMAE,sDAFI;ERuLN;;EErLA;;IMAE,sDAFI;ER0LN;;EExLA;;IMAE,sDAFI;ER6LN;;EE3LA;;IMAE,sDAFI;ERgMN;;EE9LA;;IMAE,sDAFI;ERmMN;;EEjMA;;IMAE,sDAFI;ERsMN;;EEpMA;;IMAE,0DAFI;ERyMN;;EEvMA;;IMAE,yDAFI;ER4MN;;EE1MA;;IMAE,8DAFI;ER+MN;;EE7MA;;IMAE,uDAFI;ERkNN;;EEhNA;;IMAE,+DAFI;ERqNN;;EEnNA;;IMAE,iEAFI;ERwNN;;EEtNA;;IMAE,gEAFI;ER2NN;;EEzNA;;IMAE,4DAFI;ER8NN;;EE5NA;;IMAE,wDAFI;ERiON;;EE/NA;;IMAE,4DAFI;ERoON;;EElOA;;IMAE,8DAFI;ERuON;;EErOA;;IMAE,0DAFI;ER0ON;;EExOA;;IMAE,8DAFI;ER6ON;;EE3OA;;IMAE,gEAFI;ERgPN;;EE9OA;;IMAE,qEAFI;ERmPN;;EEjPA;;IMAE,sEAFI;ERsPN;;EEpPA;;IMAE,sEAFI;ERyPN;;EEvPA;IMAE,4DAFI;ER8PN;;EE5PA;IMAE,yDAFI;ERiQN;;EE/PA;IMAE,8DAFI;ERoQN;;EElQA;IMAE,+DAFI;ERuQN;;EErQA;IMAE,iEAFI;ER0QN;;EExQA;IMAE,gEAFI;ER6QN;;EE3QA;IMAE,qEAFI;ERgRN;AAtBF","file":"icons-editor.css","sourcesContent":[null,"@charset \"UTF-8\";\n/* ¯¯¯¯¯¯¯¯¯ *\\\n  ICON COMMUNICATION\n\\* ˍˍˍˍˍˍˍˍˍ */\n@media (min-width: 36em) {\n  /*! media sm */\n}\n@media (min-width: 48em) {\n  /*! media md */\n}\n@media (min-width: 62em) {\n  /*! media lg */\n}\n@media (min-width: 78em) {\n  /*! media xl */\n}\n.village-icon-code-view::before, .village-icon-code-view::after {\n  -webkit-mask-image: url(\"../../../icons/editor/code-view.svg\");\n  mask-image: url(\"../../../icons/editor/code-view.svg\");\n}\n\n.village-icon-font-size::before, .village-icon-font-size::after {\n  -webkit-mask-image: url(\"../../../icons/editor/font-size.svg\");\n  mask-image: url(\"../../../icons/editor/font-size.svg\");\n}\n\n.village-icon-h-1::before, .village-icon-h-1::after {\n  -webkit-mask-image: url(\"../../../icons/editor/h-1.svg\");\n  mask-image: url(\"../../../icons/editor/h-1.svg\");\n}\n\n.village-icon-h-2::before, .village-icon-h-2::after {\n  -webkit-mask-image: url(\"../../../icons/editor/h-2.svg\");\n  mask-image: url(\"../../../icons/editor/h-2.svg\");\n}\n\n.village-icon-h-3::before, .village-icon-h-3::after {\n  -webkit-mask-image: url(\"../../../icons/editor/h-3.svg\");\n  mask-image: url(\"../../../icons/editor/h-3.svg\");\n}\n\n.village-icon-h-4::before, .village-icon-h-4::after {\n  -webkit-mask-image: url(\"../../../icons/editor/h-4.svg\");\n  mask-image: url(\"../../../icons/editor/h-4.svg\");\n}\n\n.village-icon-h-5::before, .village-icon-h-5::after {\n  -webkit-mask-image: url(\"../../../icons/editor/h-5.svg\");\n  mask-image: url(\"../../../icons/editor/h-5.svg\");\n}\n\n.village-icon-h-6::before, .village-icon-h-6::after {\n  -webkit-mask-image: url(\"../../../icons/editor/h-6.svg\");\n  mask-image: url(\"../../../icons/editor/h-6.svg\");\n}\n\n.village-icon-hashtag::before, .village-icon-hashtag::after {\n  -webkit-mask-image: url(\"../../../icons/editor/hashtag.svg\");\n  mask-image: url(\"../../../icons/editor/hashtag.svg\");\n}\n\n.village-icon-italic::before, .village-icon-italic::after {\n  -webkit-mask-image: url(\"../../../icons/editor/italic.svg\");\n  mask-image: url(\"../../../icons/editor/italic.svg\");\n}\n\n.village-icon-link-unlink::before, .village-icon-link-unlink::after {\n  -webkit-mask-image: url(\"../../../icons/editor/link-unlink.svg\");\n  mask-image: url(\"../../../icons/editor/link-unlink.svg\");\n}\n\n.village-icon-link::before, .village-icon-link::after {\n  -webkit-mask-image: url(\"../../../icons/editor/link.svg\");\n  mask-image: url(\"../../../icons/editor/link.svg\");\n}\n\n.village-icon-list-ordered::before, .village-icon-list-ordered::after {\n  -webkit-mask-image: url(\"../../../icons/editor/list-ordered.svg\");\n  mask-image: url(\"../../../icons/editor/list-ordered.svg\");\n}\n\n.village-icon-list-unordered::before, .village-icon-list-unordered::after {\n  -webkit-mask-image: url(\"../../../icons/editor/list-unordered.svg\");\n  mask-image: url(\"../../../icons/editor/list-unordered.svg\");\n}\n\n.village-icon-question-mark::before, .village-icon-question-mark::after {\n  -webkit-mask-image: url(\"../../../icons/editor/question-mark.svg\");\n  mask-image: url(\"../../../icons/editor/question-mark.svg\");\n}\n\n.village-icon-separator::before, .village-icon-separator::after {\n  -webkit-mask-image: url(\"../../../icons/editor/separator.svg\");\n  mask-image: url(\"../../../icons/editor/separator.svg\");\n}\n\n.village-icon-space::before, .village-icon-space::after {\n  -webkit-mask-image: url(\"../../../icons/editor/space.svg\");\n  mask-image: url(\"../../../icons/editor/space.svg\");\n}\n\n.village-icon-subscript::before, .village-icon-subscript::after {\n  -webkit-mask-image: url(\"../../../icons/editor/subscript.svg\");\n  mask-image: url(\"../../../icons/editor/subscript.svg\");\n}\n\n.village-icon-superscript::before, .village-icon-superscript::after {\n  -webkit-mask-image: url(\"../../../icons/editor/superscript.svg\");\n  mask-image: url(\"../../../icons/editor/superscript.svg\");\n}\n\n.village-icon-table-2::before, .village-icon-table-2::after {\n  -webkit-mask-image: url(\"../../../icons/editor/table-2.svg\");\n  mask-image: url(\"../../../icons/editor/table-2.svg\");\n}\n\n.village-icon-translate-2::before, .village-icon-translate-2::after {\n  -webkit-mask-image: url(\"../../../icons/editor/translate-2.svg\");\n  mask-image: url(\"../../../icons/editor/translate-2.svg\");\n}\n\n.village-icon-bold::before, .village-icon-bold::after {\n  -webkit-mask-image: url(\"../../../icons/editor/village--bold.svg\");\n  mask-image: url(\"../../../icons/editor/village--bold.svg\");\n}\n\n.village-icon-highlight::before, .village-icon-highlight::after {\n  -webkit-mask-image: url(\"../../../icons/editor/village--highlight.svg\");\n  mask-image: url(\"../../../icons/editor/village--highlight.svg\");\n}\n\n.village-icon-quote-fill::before, .village-icon-quote-fill::after {\n  -webkit-mask-image: url(\"../../../icons/editor/village--quote-fill.svg\");\n  mask-image: url(\"../../../icons/editor/village--quote-fill.svg\");\n}\n\n.village-icon-quote-line::before, .village-icon-quote-line::after {\n  -webkit-mask-image: url(\"../../../icons/editor/village--quote-line.svg\");\n  mask-image: url(\"../../../icons/editor/village--quote-line.svg\");\n}\n\n.village-fi-font-size::before, .village-fi-font-size::after {\n  -webkit-mask-image: url(\"../../../icons/editor/font-size.svg\");\n  mask-image: url(\"../../../icons/editor/font-size.svg\");\n}\n\n.village-fi-italic::before, .village-fi-italic::after {\n  -webkit-mask-image: url(\"../../../icons/editor/italic.svg\");\n  mask-image: url(\"../../../icons/editor/italic.svg\");\n}\n\n.village-fi-link-unlink::before, .village-fi-link-unlink::after {\n  -webkit-mask-image: url(\"../../../icons/editor/link-unlink.svg\");\n  mask-image: url(\"../../../icons/editor/link-unlink.svg\");\n}\n\n.village-fi-list-ordered::before, .village-fi-list-ordered::after {\n  -webkit-mask-image: url(\"../../../icons/editor/list-ordered.svg\");\n  mask-image: url(\"../../../icons/editor/list-ordered.svg\");\n}\n\n.village-fi-list-unordered::before, .village-fi-list-unordered::after {\n  -webkit-mask-image: url(\"../../../icons/editor/list-unordered.svg\");\n  mask-image: url(\"../../../icons/editor/list-unordered.svg\");\n}\n\n.village-fi-bold::before, .village-fi-bold::after {\n  -webkit-mask-image: url(\"../../../icons/editor/village--bold.svg\");\n  mask-image: url(\"../../../icons/editor/village--bold.svg\");\n}\n\n.village-fi-highlight::before, .village-fi-highlight::after {\n  -webkit-mask-image: url(\"../../../icons/editor/village--highlight.svg\");\n  mask-image: url(\"../../../icons/editor/village--highlight.svg\");\n}\n\n@media (min-width: 36em) {\n  /*! media sm */\n}\n@media (min-width: 48em) {\n  /*! media md */\n}\n@media (min-width: 62em) {\n  /*! media lg */\n}\n@media (min-width: 78em) {\n  /*! media xl */\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .village-icon-code-view::before, .village-icon-code-view::after {\n    background-image: url(\"../../../icons/editor/code-view.svg\");\n  }\n  .village-icon-font-size::before, .village-icon-font-size::after {\n    background-image: url(\"../../../icons/editor/font-size.svg\");\n  }\n  .village-icon-h-1::before, .village-icon-h-1::after {\n    background-image: url(\"../../../icons/editor/h-1.svg\");\n  }\n  .village-icon-h-2::before, .village-icon-h-2::after {\n    background-image: url(\"../../../icons/editor/h-2.svg\");\n  }\n  .village-icon-h-3::before, .village-icon-h-3::after {\n    background-image: url(\"../../../icons/editor/h-3.svg\");\n  }\n  .village-icon-h-4::before, .village-icon-h-4::after {\n    background-image: url(\"../../../icons/editor/h-4.svg\");\n  }\n  .village-icon-h-5::before, .village-icon-h-5::after {\n    background-image: url(\"../../../icons/editor/h-5.svg\");\n  }\n  .village-icon-h-6::before, .village-icon-h-6::after {\n    background-image: url(\"../../../icons/editor/h-6.svg\");\n  }\n  .village-icon-hashtag::before, .village-icon-hashtag::after {\n    background-image: url(\"../../../icons/editor/hashtag.svg\");\n  }\n  .village-icon-italic::before, .village-icon-italic::after {\n    background-image: url(\"../../../icons/editor/italic.svg\");\n  }\n  .village-icon-link-unlink::before, .village-icon-link-unlink::after {\n    background-image: url(\"../../../icons/editor/link-unlink.svg\");\n  }\n  .village-icon-link::before, .village-icon-link::after {\n    background-image: url(\"../../../icons/editor/link.svg\");\n  }\n  .village-icon-list-ordered::before, .village-icon-list-ordered::after {\n    background-image: url(\"../../../icons/editor/list-ordered.svg\");\n  }\n  .village-icon-list-unordered::before, .village-icon-list-unordered::after {\n    background-image: url(\"../../../icons/editor/list-unordered.svg\");\n  }\n  .village-icon-question-mark::before, .village-icon-question-mark::after {\n    background-image: url(\"../../../icons/editor/question-mark.svg\");\n  }\n  .village-icon-separator::before, .village-icon-separator::after {\n    background-image: url(\"../../../icons/editor/separator.svg\");\n  }\n  .village-icon-space::before, .village-icon-space::after {\n    background-image: url(\"../../../icons/editor/space.svg\");\n  }\n  .village-icon-subscript::before, .village-icon-subscript::after {\n    background-image: url(\"../../../icons/editor/subscript.svg\");\n  }\n  .village-icon-superscript::before, .village-icon-superscript::after {\n    background-image: url(\"../../../icons/editor/superscript.svg\");\n  }\n  .village-icon-table-2::before, .village-icon-table-2::after {\n    background-image: url(\"../../../icons/editor/table-2.svg\");\n  }\n  .village-icon-translate-2::before, .village-icon-translate-2::after {\n    background-image: url(\"../../../icons/editor/translate-2.svg\");\n  }\n  .village-icon-bold::before, .village-icon-bold::after {\n    background-image: url(\"../../../icons/editor/village--bold.svg\");\n  }\n  .village-icon-highlight::before, .village-icon-highlight::after {\n    background-image: url(\"../../../icons/editor/village--highlight.svg\");\n  }\n  .village-icon-quote-fill::before, .village-icon-quote-fill::after {\n    background-image: url(\"../../../icons/editor/village--quote-fill.svg\");\n  }\n  .village-icon-quote-line::before, .village-icon-quote-line::after {\n    background-image: url(\"../../../icons/editor/village--quote-line.svg\");\n  }\n}\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .village-fi-font-size::before {\n    background-image: url(\"../../../icons/editor/font-size.svg\");\n  }\n  .village-fi-italic::before {\n    background-image: url(\"../../../icons/editor/italic.svg\");\n  }\n  .village-fi-link-unlink::before {\n    background-image: url(\"../../../icons/editor/link-unlink.svg\");\n  }\n  .village-fi-list-ordered::before {\n    background-image: url(\"../../../icons/editor/list-ordered.svg\");\n  }\n  .village-fi-list-unordered::before {\n    background-image: url(\"../../../icons/editor/list-unordered.svg\");\n  }\n  .village-fi-bold::before {\n    background-image: url(\"../../../icons/editor/village--bold.svg\");\n  }\n  .village-fi-highlight::before {\n    background-image: url(\"../../../icons/editor/village--highlight.svg\");\n  }\n}","////\n/// Icon Editor Main\n/// @group icons-editor\n////\n\n/* ¯¯¯¯¯¯¯¯¯ *\\\n  ICON COMMUNICATION\n\\* ˍˍˍˍˍˍˍˍˍ */\n\n@use 'module/path';\n@use 'module/shame/media-query';\n\n@include path.to-dist(3);\n@include media-query.order;\n\n@import 'index';\n@import 'style/module';\n\n// deprecated\n@import 'deprecated/style/setting';\n@import 'deprecated/style/module';\n","////\n/// Core Tool : Selector pseudo\n/// @group core\n////\n\n@mixin _pseudo($type:before, $content:null, $display:null) {\n  @if $type != after and $type != before and $type != marker and $type != (before after) {\n    @error '$type must be before or after element';\n  }\n\n  $selector: ();\n\n  @each $pseudo in $type {\n    $selector: append($selector, '&::#{$pseudo}', 'comma');\n  }\n\n  #{$selector} {\n\n    @if $content != null {\n      content: $content;\n    }\n\n    @if $display != null {\n      display: #{$display};\n    }\n\n    @content;\n  }\n}\n\n@mixin before($content: null, $display: null) {\n  @include _pseudo(before, $content, $display) {\n    @content;\n  }\n}\n\n@mixin after($content: null, $display: null) {\n  @include _pseudo(after, $content, $display) {\n    @content;\n  }\n}\n\n@mixin marker($content: null, $display: null) {\n  @include _pseudo(marker, $content, $display) {\n    @content;\n  }\n}\n","////\n/// Core Tool : mask-image\n/// @group core\n////\n\n@mixin mask-image($value) {\n  -webkit-mask-image: $value;\n  mask-image: $value;\n}\n\n@mixin mask-image-size($value) {\n  -webkit-mask-size: $value;\n  mask-size: $value;\n}\n\n@mixin mask-image-position($value) {\n  -webkit-mask-position: $value;\n  mask-position: $value;\n}\n\n@mixin mask-image-repeat($value) {\n  -webkit-mask-repeat: $value;\n  mask-repeat: $value;\n}\n","////\n/// Core Tool : Icon default\n/// @group core\n////\n\n@use 'module/path';\n@use 'module/spacing';\n@use 'module/specificity';\n\n/// Return icon size from map\n/// @param {String} $size ['md'] - Icon size from `$icon-size-map` (Default to 'md' = 16px)\n///\n/// @example scss - Set icon size to `SM` (12px)\n///   .foo {\n///     width: icon-size(sm);\n///     height: icon-size(sm);\n///   }\n@function icon-size($size: md) {\n  @return spacing.space(map-get($icon-size-map, $size));\n}\n\n@function get-icon-url($icon, $important: false) {\n  $config: map-get($icons-config, $icon);\n  $url: url('#{path.dist()}#{map-get($config, path)}');\n  @return specificity.important($url, $important);\n}\n\n@function get-icon-pseudo($restrain) {\n  @if $restrain == before or $restrain == after {\n    @return $restrain;\n  }\n  @return before after;\n}\n\n@mixin _icon-pseudo ($restrain: null) {\n  @include _pseudo(get-icon-pseudo($restrain)) {\n    @content;\n  }\n}\n\n@mixin icon-size ($size:md, $restrain: null) {\n  @include _icon-pseudo($restrain) {\n    --icon-size: #{icon-size($size)};\n    @content;\n  }\n}\n\n@mixin icon-image ($icon, $restrain: null, $important: false) {\n  $url: get-icon-url($icon, $important);\n\n  @include _icon-pseudo($restrain) {\n    @include mask-image($url);\n  }\n}\n\n@mixin icon-style($restrain: null) {\n  @include _icon-pseudo($restrain) {\n    flex: 0 0 auto;\n    display: inline-block;\n    vertical-align: calc((0.75em - var(--icon-size)) * 0.5);\n    background-color: currentColor;\n    @include size(var(--icon-size), var(--icon-size));\n    @include mask-image-size(100% 100%);\n    @content;\n  }\n}\n\n@mixin icon-content($is-before: true, $override: false) {\n  $pseudos: before after;\n  @if not $is-before {\n    $pseudos: after before;\n  }\n  @include _pseudo(nth($pseudos, 1), '') {\n    @content;\n  }\n  @if $override {\n    @include _pseudo(nth($pseudos, 2), none);\n  }\n}\n\n@mixin icon($icon: null, $size: md, $restrain: null, $styling: true, $is-before: $restrain != after, $override: false) {\n  @if $styling {\n    @include icon-style($restrain);\n  }\n\n  @if $icon != null {\n    @include icon-image($icon, $restrain);\n  }\n\n  @if $size != null {\n    @include icon-size($size, $restrain);\n  }\n\n  @if $is-before != null {\n    @include icon-content($is-before, $override) {\n      @content;\n    }\n  }\n}\n\n@function filter-icons($category, $config: $icons-config) {\n  $filtered: ();\n  @each $icon, $setting in $config {\n    @if map-get($setting, category) == $category {\n      $filtered: map-merge($filtered, (#{$icon}: $setting));\n    }\n  }\n  @return $filtered;\n}\n\n@mixin generate-icons($config: $icons-config) {\n  @each $icon, $setting in $config {\n    #{ns(icon-#{$icon})} {\n      @include icon-image($icon);\n    }\n  }\n}\n","@use '../variable/breakpoints';\n\n/// Set media query styles\n///\n/// @param {String} $media [md] - Layout size `['xs', 'sm', 'md', 'lg', 'xl']`\n///\n/// @example scss -\n///   .foo {\n///     @include respond-from(md) {\n///     }\n///   }\n@mixin respond-from($media) {\n  $limits: map_get(breakpoints.$values, $media);\n\n  @if $limits != null {\n    @media (min-width: nth($limits, 1)) {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n","@use 'module/media-query/variable/breakpoints';\n@use 'module/media-query';\n\n@mixin order () {\n  @each $bp, $limits in breakpoints.$values {\n    @if $bp != xs {\n      @include media-query.respond-from($bp) {\n        /*! media #{$bp} */\n      }\n    }\n  }\n}\n","/// Styles spécifiques pour les plateformes antérieures\n///\n/// @example scss -\n///   .foo {\n///     @include ie-hack() {\n///     }\n///   }\n@mixin is($target) {\n  @if $target == ie10 or $target == ie11 {\n    @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n\n/// Styles spécifiques pour les plateformes modernes, excluant les plateformes antérieures\n///\n/// @example scss -\n///   .foo {\n///     @include ie-hack() {\n///     }\n///   }\n@mixin is-not($target) {\n  @if $target == ie10 or $target == ie11 {\n    @supports not (-ms-high-contrast: none) {\n      @content;\n    }\n  }\n}\n","////\n/// Core Tool : Icon legacy\n/// @group core\n////\n\n@mixin icon-size-legacy($size:md, $restrain: null) {\n  @include _icon-pseudo($restrain) {\n    $size: icon-size($size);\n    @include size($size, $size);\n    @content;\n  }\n}\n\n@mixin icon-image-legacy($icon, $restrain: null, $important: false) {\n  $url: get-icon-url($icon, $important);\n  @include _icon-pseudo($restrain) {\n    background-image: $url;\n  }\n}\n\n@mixin icon-style-legacy($restrain: null) {\n  @include _icon-pseudo($restrain) {\n    background-color: transparent;\n    background-size: 100%;\n    background-repeat: no-repeat;\n    @content;\n  }\n}\n\n@mixin icon-legacy($icon: null, $size: md, $restrain: null, $styling: true) {\n  @if $styling {\n    @include icon-style-legacy($restrain);\n  }\n\n  @if $icon != null {\n    @include icon-image-legacy($icon, $restrain);\n  }\n\n  @if $size != null {\n    @include icon-size-legacy($size, $restrain);\n  }\n\n  @include _icon-pseudo($restrain) {\n    @content;\n  }\n}\n\n@mixin generate-icons-legacy($config: $icons-config) {\n  @each $icon, $setting in $config {\n    #{ns(icon-#{$icon})} {\n      @include icon-image-legacy($icon);\n    }\n  }\n}\n"]}